{"version":3,"file":"index.mjs","sources":["../src/modules/config.js","../src/modules/misc.js","../src/modules/enums.js","../src/modules/constants.js","../src/modules/error-manager.js","../src/modules/users.js","../src/modules/remotecall.js","../src/modules/chat/chat-manager.js","../src/modules/icons.js","../src/modules/common/checkbars.js","../src/modules/app/gm-anarchy.js","../src/modules/app/handle-drag.js","../src/modules/app/gm-difficulty.js","../src/modules/app/gm-manager.js","../src/modules/attribute-actions.js","../src/modules/matrix-helper.js","../src/modules/modifiers/modifiers.js","../src/modules/roll/dice-cursor.js","../src/modules/actor/character-actor-essence.js","../src/modules/hooks-manager.js","../src/modules/roll/roll-parameters.js","../src/modules/roll/roll-dialog.js","../src/modules/skills.js","../src/modules/actor/actor-damage.js","../src/modules/actor/base-actor.js","../src/modules/confirmation.js","../src/modules/dialog/select-actor.js","../src/modules/actor/anarchy-actor-sheet.js","../src/modules/actor/character-base-sheet.js","../src/modules/actor/character-enhanced-sheet.js","../src/modules/damage.js","../src/modules/grammar.js","../src/modules/item/anarchy-base-item.js","../src/modules/item/skill-item.js","../src/modules/item/weapon-item.js","../src/modules/handlebars-manager.js","../src/modules/styles.js","../src/modules/theme-utilities.js","../src/modules/ui-customization.js","../src/modules/ui-customization-dialog.js","../src/modules/ui-customization-commands.js","../src/modules/roll/dice.js","../src/modules/roll/anarchy-roll.js","../src/modules/migrations.js","../src/modules/dialog/roll-celebrity.js","../src/modules/actor/character-actor.js","../src/modules/actor/device-actor.js","../src/modules/actor/vehicle-actor.js","../src/modules/actor/character-sheet.js","../src/modules/actor/device-sheet.js","../src/modules/actor/vehicle-sheet.js","../src/modules/actor/character-npc-sheet.js","../src/modules/item/metatype-item.js","../src/modules/item/cyberdeck-item.js","../src/modules/item/base-item-sheet.js","../src/modules/item/contact-item-sheet.js","../src/modules/item/cyberdeck-item-sheet.js","../src/modules/item/gear-item-sheet.js","../src/modules/item/metatype-item-sheet.js","../src/modules/item/quality-item-sheet.js","../src/modules/item/shadowamp-item-sheet.js","../src/modules/item/skill-item-sheet.js","../src/modules/item/weapon-item-sheet.js","../src/modules/item/contact-item.js","../src/modules/item/gear-item.js","../src/modules/item/quality-item.js","../src/modules/item/shadowamp-item.js","../src/modules/app/gm-convergence.js","../src/modules/anarchy-combat.js","../src/modules/actor/ic-sheet.js","../src/modules/actor/sprite-sheet.js","../src/modules/actor/sprite-actor.js","../src/modules/actor/ic-actor.js","../src/modules/token/hud-shortcuts.js","../src/modules/token/tokens.js","../src/modules/roll/roll-manager.js","../src/modules/combat/combat-manager.js","../src/modules/actor/character-tabbed-sheet.js","../src/integrations/index.js","../src/modules/anarchy-system.js","../src/start.js"],"sourcesContent":["\nexport const ANARCHY = {\n    TYPES: {\n        Actor: {\n            character: \"TYPES.Actor.character\",\n            vehicle: \"TYPES.Actor.vehicle\",\n            device: \"TYPES.Actor.device\",\n            sprite: \"TYPES.Actor.sprite\",\n            ic: \"TYPES.Actor.ic\"\n        },\n        Item: {\n            contact: \"TYPES.Item.contact\",\n            cyberdeck: \"TYPES.Item.cyberdeck\",\n            gear: \"TYPES.Item.gear\",\n            metatype: \"TYPES.Item.metatype\",\n            quality: \"TYPES.Item.quality\",\n            shadowamp: \"TYPES.Item.shadowamp\",\n            skill: \"TYPES.Item.skill\",\n            weapon: \"TYPES.Item.weapon\"\n        }\n    },\n    settings: {\n        defaultCssClass: {\n            name: 'ANARCHY.settings.defaultCssClass.name',\n            hint: 'ANARCHY.settings.defaultCssClass.hint'\n        },\n        anarchyHack: {\n            name: 'ANARCHY.settings.anarchyHack.name',\n            hint: 'ANARCHY.settings.anarchyHack.hint'\n        },\n        skillSet: {\n            name: 'ANARCHY.settings.skillSet.name',\n            hint: 'ANARCHY.settings.skillSet.hint'\n        },\n        gmDifficulty: {\n            name: 'ANARCHY.settings.gmDifficulty.name',\n            hint: 'ANARCHY.settings.gmDifficulty.hint',\n            default: 'ANARCHY.settings.gmDifficulty.default',\n            chatMessage: 'ANARCHY.settings.gmDifficulty.chatMessage',\n        },\n        damageMode: {\n            name: 'ANARCHY.settings.damageMode.name',\n            hint: 'ANARCHY.settings.damageMode.hint',\n            values: {\n                resistanceArmorMonitor: 'ANARCHY.settings.damageMode.values.resistanceArmorMonitor',\n                armorResistanceMonitor: 'ANARCHY.settings.damageMode.values.armorResistanceMonitor',\n                armorGivesResistance: 'ANARCHY.settings.damageMode.values.armorGivesResistance',\n                armorGiveResistanceHitsAvoid: 'ANARCHY.settings.damageMode.values.armorGiveResistanceHitsAvoid',\n            },\n        }\n    },\n    gmManager: {\n        title: 'ANARCHY.gmManager.title',\n        playerChangedAnarchy: 'ANARCHY.gmManager.playerChangedAnarchy',\n        gmReceivedAnarchy: 'ANARCHY.gmManager.gmReceivedAnarchy',\n        gmConvergence: 'ANARCHY.gmManager.gmConvergence',\n    },\n    chat: {\n        blindMessageToGM: 'ANARCHY.chat.blindMessageToGM',\n        sufferedDrain: 'ANARCHY.chat.sufferedDrain',\n        noDrain: 'ANARCHY.chat.noDrain',\n        defendAttack: 'ANARCHY.chat.defendAttack',\n        defendPilotAttack: 'ANARCHY.chat.defendPilotAttack',\n        partiallyDefended: 'ANARCHY.chat.partiallyDefended',\n        fullyDefended: 'ANARCHY.chat.fullyDefended',\n        applyDamage: 'ANARCHY.chat.applyDamage',\n    },\n    user: {\n        selectedTokenActors: 'ANARCHY.user.selectedTokenActors'\n    },\n    common: {\n        newEntry: 'ANARCHY.common.newEntry',\n        newName: 'ANARCHY.common.newName',\n        cancel: 'ANARCHY.common.cancel',\n        add: 'ANARCHY.common.add',\n        edit: 'ANARCHY.common.edit',\n        activate: 'ANARCHY.common.activate',\n        del: 'ANARCHY.common.del',\n        favorite: 'ANARCHY.common.favorite',\n        addFavorite: 'ANARCHY.common.addFavorite',\n        delFavorite: 'ANARCHY.common.delFavorite',\n        attach: 'ANARCHY.common.attach',\n        attachCopy: 'ANARCHY.common.attachCopy',\n        matrix: {\n            connectionMode: 'ANARCHY.common.matrix.connectionMode',\n        },\n        roll: {\n            button: 'ANARCHY.common.roll.button',\n            title: 'ANARCHY.common.roll.title',\n            attribute: 'ANARCHY.common.roll.attribute',\n            attribute2: 'ANARCHY.common.roll.attribute2',\n            modifiers: {\n                edge: 'ANARCHY.common.roll.modifiers.edge',\n                specialization: 'ANARCHY.common.roll.modifiers.specialization',\n                poolModifiers: 'ANARCHY.common.roll.modifiers.poolModifiers',\n                social: {\n                    credibility: 'ANARCHY.common.roll.modifiers.social.credibility',\n                    rumor: 'ANARCHY.common.roll.modifiers.social.rumor',\n                },\n                anarchyDisposition: 'ANARCHY.common.roll.modifiers.anarchyDisposition',\n                anarchyRisk: 'ANARCHY.common.roll.modifiers.anarchyRisk',\n                glitch: 'ANARCHY.common.roll.modifiers.glitch',\n                drain: 'ANARCHY.common.roll.modifiers.drain',\n                convergence: 'ANARCHY.common.roll.modifiers.convergence',\n                wounds: 'ANARCHY.common.roll.modifiers.wounds',\n                weaponRange: 'ANARCHY.common.roll.modifiers.weaponRange',\n                weaponArea: 'ANARCHY.common.roll.modifiers.weaponArea',\n                other: 'ANARCHY.common.roll.modifiers.other',\n                virtualReality: 'ANARCHY.common.roll.modifiers.virtualReality',\n                reduced: 'ANARCHY.common.roll.modifiers.reduced',\n                reroll: 'ANARCHY.common.roll.modifiers.reroll',\n                rerollForced: 'ANARCHY.common.roll.modifiers.rerollForced',\n                opponentReroll: 'ANARCHY.common.roll.modifiers.opponentReroll',\n                opponentPool: 'ANARCHY.common.roll.modifiers.opponentPool'\n            },\n            rollTheme: {\n                dicePool: 'ANARCHY.common.roll.rollTheme.dicePool',\n                reroll: 'ANARCHY.common.roll.rollTheme.reroll',\n                removed: 'ANARCHY.common.roll.rollTheme.removed',\n                rerollRemoved: 'ANARCHY.common.roll.rollTheme.rerollRemoved',\n                glitch: 'ANARCHY.common.roll.rollTheme.glitch',\n                drain: 'ANARCHY.common.roll.rollTheme.drain',\n                convergence: 'ANARCHY.common.roll.rollTheme.convergence',\n                anarchyRisk: 'ANARCHY.common.roll.rollTheme.anarchyRisk',\n            },\n            opponentRoll: 'ANARCHY.common.roll.opponentRoll',\n            totalSuccess: 'ANARCHY.common.roll.totalSuccess',\n            success: 'ANARCHY.common.roll.success',\n            risk: {\n                prowess: 'ANARCHY.common.roll.risk.prowess',\n                nothing: 'ANARCHY.common.roll.risk.nothing',\n                mixed: 'ANARCHY.common.roll.risk.mixed',\n                glitch: 'ANARCHY.common.roll.risk.glitch',\n            },\n            rerollSuccess: 'ANARCHY.common.roll.rerollSuccess',\n            rerollForcedLoss: 'ANARCHY.common.roll.rerollForcedLoss',\n            rerollForcedSuccess: 'ANARCHY.common.roll.rerollForcedSuccess',\n        },\n        confirmation: {\n            del: 'ANARCHY.common.confirmation.del',\n            delItem: 'ANARCHY.common.confirmation.delItem',\n            delOwner: 'ANARCHY.common.confirmation.delOwner',\n            attach: 'ANARCHY.common.confirmation.attach',\n            attachOrCopy: 'ANARCHY.common.confirmation.attachOrCopy',\n        },\n        selection: {\n            actorSettingMarks: 'ANARCHY.common.selection.actorSettingMarks'\n        },\n        errors: {\n            insufficient: 'ANARCHY.common.errors.insufficient',\n            outOfRange: 'ANARCHY.common.errors.outOfRange',\n            onlyGM: 'ANARCHY.common.errors.onlyGM',\n            noEdgeForActor: 'ANARCHY.common.errors.noEdgeForActor',\n            expectedType: 'ANARCHY.common.errors.expectedType',\n            ignoredTargets: 'ANARCHY.common.errors.ignoredTargets',\n            noTargetSelected: 'ANARCHY.common.errors.noTargetSelected',\n            maxTargetsExceedeed: 'ANARCHY.common.errors.maxTargetsExceedeed',\n            noDefenseOnWeapon: 'ANARCHY.common.errors.noDefenseOnWeapon',\n            noTokenActor: 'ANARCHY.common.errors.noTokenActor',\n            noValidPilotForVehicle: 'ANARCHY.common.errors.noValidPilotForVehicle',\n            cannotUseEdgeAnymore: 'ANARCHY.common.errors.cannotUseEdgeAnymore',\n            actorCannotApplyDamage: 'ANARCHY.common.errors.actorCannotApplyDamage',\n            actorCannotReceiveDamage: 'ANARCHY.common.errors.actorCannotReceiveDamage',\n            actorDoesNotHaveDefense: 'ANARCHY.common.errors.actorDoesNotHaveDefense',\n        },\n        sourceReference: 'ANARCHY.common.sourceReference',\n        sourceReferenceHelp: 'ANARCHY.common.sourceReferenceHelp',\n        description: 'ANARCHY.common.description',\n        gmnotes: 'ANARCHY.common.gmnotes',\n    },\n    actor: {\n        characterSheet: 'ANARCHY.actor.characterSheet',\n        characterTabbedSheet: 'ANARCHY.actor.characterTabbedSheet',\n        characterEnhancedSheet: 'ANARCHY.actor.characterEnhancedSheet',\n        vehicleSheet: 'ANARCHY.actor.vehicleSheet',\n        deviceSheet: 'ANARCHY.actor.deviceSheet',\n        spriteSheet: 'ANARCHY.actor.spriteSheet',\n        icSheet: 'ANARCHY.actor.icSheet',\n        characterNPCSheet: 'ANARCHY.actor.characterNPCSheet',\n        actorName: 'ANARCHY.actor.actorName',\n        genre: 'ANARCHY.actor.genre',\n        noMetatype: 'ANARCHY.actor.noMetatype',\n        celebrity: 'ANARCHY.actor.celebrity',\n        tabs: {\n            main: 'ANARCHY.actor.tabs.main',\n            equipment: 'ANARCHY.actor.tabs.equipment',\n            biography: 'ANARCHY.actor.tabs.biography',\n        },\n        words: {\n            keywords: 'ANARCHY.actor.words.keywords',\n            cues: 'ANARCHY.actor.words.cues',\n            dispositions: 'ANARCHY.actor.words.dispositions',\n        },\n        essence: {\n            adjustments: 'ANARCHY.actor.essence.adjustments',\n            adjustShort: 'ANARCHY.actor.essence.adjustShort',\n        },\n        counters: {\n            essence: 'ANARCHY.actor.counters.essence',\n            karma: 'ANARCHY.actor.counters.karma',\n            karmaTotal: 'ANARCHY.actor.counters.karmaTotal',\n            edge: 'ANARCHY.actor.counters.edge',\n            anarchy: 'ANARCHY.actor.counters.anarchy',\n            sceneAnarchy: 'ANARCHY.actor.counters.sceneAnarchy',\n            plot: 'ANARCHY.actor.counters.plot',\n            social: {\n                credibility: 'ANARCHY.actor.counters.social.credibility',\n                rumor: 'ANARCHY.actor.counters.social.rumor',\n            }\n        },\n        monitors: {\n            conditionMonitors: 'ANARCHY.actor.monitors.conditionMonitors',\n            overflow: 'ANARCHY.actor.monitors.overflow',\n            noMatrixMonitor: 'ANARCHY.actor.monitors.noMatrixMonitor',\n            physical: 'ANARCHY.actor.monitors.physical',\n            stun: 'ANARCHY.actor.monitors.stun',\n            matrix: 'ANARCHY.actor.monitors.matrix',\n            armor: 'ANARCHY.actor.monitors.armor',\n            structure: 'ANARCHY.actor.monitors.structure',\n            resistance: 'ANARCHY.actor.monitors.resistance',\n            marks: 'ANARCHY.actor.monitors.marks',\n            convergence: 'ANARCHY.actor.monitors.convergence',\n        },\n        vehicle: {\n            moves: 'ANARCHY.actor.vehicle.moves',\n            attacks: 'ANARCHY.actor.vehicle.attacks',\n            stealth: 'ANARCHY.actor.vehicle.stealth',\n            category: 'ANARCHY.actor.vehicle.category',\n            skill: 'ANARCHY.actor.vehicle.skill'\n        },\n        ownership: {\n            owner: 'ANARCHY.actor.ownership.owner',\n            unknown: 'ANARCHY.actor.ownership.unknown',\n            owned: 'ANARCHY.actor.ownership.owned',\n        }\n    },\n    actorType: {\n        character: 'ANARCHY.actorType.character',\n        vehicle: 'ANARCHY.actorType.vehicle',\n        device: 'ANARCHY.actorType.device',\n        sprite: 'ANARCHY.actorType.sprite',\n        ic: 'ANARCHY.actorType.ic',\n    },\n    item: {\n        sheet: 'ANARCHY.item.sheet',\n        tabs: {\n            main: 'ANARCHY.item.tabs.main',\n            modifiers: 'ANARCHY.item.tabs.modifiers',\n        },\n        common: {\n            inactive: 'ANARCHY.item.common.inactive',\n        },\n        skill: {\n            code: 'ANARCHY.item.skill.code',\n            copyDefault: 'ANARCHY.item.skill.useDefault',\n            isKnowledge: 'ANARCHY.item.skill.isKnowledge',\n            attribute: 'ANARCHY.item.skill.attribute',\n            value: 'ANARCHY.item.skill.value',\n            specialization: 'ANARCHY.item.skill.specialization',\n            hasDrain: 'ANARCHY.item.skill.isSocial',\n            hasDrain: 'ANARCHY.item.skill.hasDrain',\n            hasConvergence: 'ANARCHY.item.skill.hasConvergence',\n            specializationHelp: 'ANARCHY.item.skill.specializationHelp'\n        },\n        quality: {\n            positive: 'ANARCHY.item.quality.positive'\n        },\n        shadowamp: {\n            category: 'ANARCHY.item.shadowamp.category',\n            capacity: 'ANARCHY.item.shadowamp.capacity',\n            level: 'ANARCHY.item.shadowamp.level',\n            essence: 'ANARCHY.item.shadowamp.essence',\n            levelShort: 'ANARCHY.item.shadowamp.levelShort',\n            essenceShort: 'ANARCHY.item.shadowamp.essenceShort'\n        },\n        weapon: {\n            skill: 'ANARCHY.item.weapon.skill',\n            damage: 'ANARCHY.item.weapon.damage',\n            strength: 'ANARCHY.item.weapon.strength',\n            defense: 'ANARCHY.item.weapon.defense',\n            area: 'ANARCHY.item.weapon.area',\n            noArmor: 'ANARCHY.item.weapon.noArmor',\n            withArmor: 'ANARCHY.item.weapon.withArmor',\n            damageShort: 'ANARCHY.item.weapon.damageShort',\n            areaShort: 'ANARCHY.item.weapon.areaShort',\n            noArmorShort: 'ANARCHY.item.weapon.noArmorShort',\n            weaponWithoutActor: 'ANARCHY.item.weapon.weaponWithoutActor',\n            range: {\n                max: 'ANARCHY.item.weapon.range.max'\n            }\n        },\n        cyberdeck: {\n            programs: 'ANARCHY.item.cyberdeck.programs',\n            processing: 'ANARCHY.item.cyberdeck.processing',\n            processingHelp: 'ANARCHY.item.cyberdeck.processingHelp',\n        }\n    },\n    itemType: {\n        singular: {\n            metatype: 'ANARCHY.itemType.singular.metatype',\n            skill: 'ANARCHY.itemType.singular.skill',\n            quality: 'ANARCHY.itemType.singular.quality',\n            shadowamp: 'ANARCHY.itemType.singular.shadowamp',\n            weapon: 'ANARCHY.itemType.singular.weapon',\n            gear: 'ANARCHY.itemType.singular.gear',\n            cyberdeck: 'ANARCHY.itemType.singular.cyberdeck',\n            contact: 'ANARCHY.itemType.singular.contact'\n        },\n        plural: {\n            metatype: 'ANARCHY.itemType.plural.metatype',\n            skill: 'ANARCHY.itemType.plural.skill',\n            quality: 'ANARCHY.itemType.plural.quality',\n            shadowamp: 'ANARCHY.itemType.plural.shadowamp',\n            weapon: 'ANARCHY.itemType.plural.weapon',\n            gear: 'ANARCHY.itemType.plural.gear',\n            cyberdeck: 'ANARCHY.itemType.plural.cyberdeck',\n            contact: 'ANARCHY.itemType.plural.contact'\n        }\n    },\n    capacity: {\n        mundane: 'ANARCHY.capacity.mundane',\n        awakened: 'ANARCHY.capacity.awakened',\n        emerged: 'ANARCHY.capacity.emerged'\n    },\n    monitor: {\n        physical: 'ANARCHY.monitor.physical',\n        stun: 'ANARCHY.monitor.stun',\n        matrix: 'ANARCHY.monitor.matrix',\n        marks: 'ANARCHY.monitor.marks',\n    },\n    monitorLetter: {\n        physical: 'ANARCHY.monitorLetter.physical',\n        stun: 'ANARCHY.monitorLetter.stun',\n        matrix: 'ANARCHY.monitorLetter.matrix',\n        marks: 'ANARCHY.monitorLetter.marks',\n    },\n    shadowampCategory: {\n        adeptPower: 'ANARCHY.shadowampCategory.adeptPower',\n        bioware: 'ANARCHY.shadowampCategory.bioware',\n        complexForm: 'ANARCHY.shadowampCategory.complexForm',\n        cyberdeck: 'ANARCHY.shadowampCategory.cyberdeck',\n        cyberware: 'ANARCHY.shadowampCategory.cyberware',\n        drone: 'ANARCHY.shadowampCategory.drone',\n        equipment: 'ANARCHY.shadowampCategory.equipment',\n        focus: 'ANARCHY.shadowampCategory.focus',\n        program: 'ANARCHY.shadowampCategory.program',\n        spell: 'ANARCHY.shadowampCategory.spell',\n        special: 'ANARCHY.shadowampCategory.special'\n    },\n    attributes: {\n        noAttribute: 'ANARCHY.attributes.noAttributes',\n        strength: 'ANARCHY.attributes.strength',\n        agility: 'ANARCHY.attributes.agility',\n        willpower: 'ANARCHY.attributes.willpower',\n        logic: 'ANARCHY.attributes.logic',\n        charisma: 'ANARCHY.attributes.charisma',\n        edge: 'ANARCHY.attributes.edge',\n        autopilot: 'ANARCHY.attributes.autopilot',\n        handling: 'ANARCHY.attributes.handling',\n        firewall: 'ANARCHY.attributes.firewall',\n        system: 'ANARCHY.attributes.system',\n        knowledge: 'ANARCHY.attributes.knowledge',\n    },\n    attributeAction: {\n        defense: 'ANARCHY.attributeAction.defense',\n        judgeIntentions: 'ANARCHY.attributeAction.judgeIntentions',\n        perception: 'ANARCHY.attributeAction.perception',\n        resistTorture: 'ANARCHY.attributeAction.resistTorture',\n        composure: 'ANARCHY.attributeAction.composure',\n        memory: 'ANARCHY.attributeAction.memory',\n        catch: 'ANARCHY.attributeAction.catch',\n        lift: 'ANARCHY.attributeAction.lift',\n        matrixDefense: 'ANARCHY.attributeAction.matrixDefense',\n        astralDefense: 'ANARCHY.attributeAction.astralDefense'\n    },\n    defense: {\n        physicalDefense: 'ANARCHY.defense.physicalDefense',\n        physicalResistance: 'ANARCHY.defense.physicalResistance',\n        socialDefense: 'ANARCHY.defense.socialDefense',\n        matrixDefense: 'ANARCHY.defense.matrixDefense',\n        mentalResistance: 'ANARCHY.defense.mentalResistance',\n    },\n    skill: {\n        athletics: 'ANARCHY.skill.athletics',\n        acrobatics: 'ANARCHY.skill.acrobatics',\n        closeCombat: 'ANARCHY.skill.closeCombat',\n        projectileWeapons: 'ANARCHY.skill.projectileWeapons',\n        firearms: 'ANARCHY.skill.firearms',\n        heavyWeapons: 'ANARCHY.skill.heavyWeapons',\n        vehicleWeapons: 'ANARCHY.skill.vehicleWeapons',\n        stealth: 'ANARCHY.skill.stealth',\n        pilotingGround: 'ANARCHY.skill.pilotingGround',\n        pilotingOther: 'ANARCHY.skill.pilotingOther',\n        escapeArtist: 'ANARCHY.skill.escapeArtist',\n        astralCombat: 'ANARCHY.skill.astralCombat',\n        conjuring: 'ANARCHY.skill.conjuring',\n        sorcery: 'ANARCHY.skill.sorcery',\n        survival: 'ANARCHY.skill.survival',\n        biotech: 'ANARCHY.skill.biotech',\n        electronics: 'ANARCHY.skill.electronics',\n        hacking: 'ANARCHY.skill.hacking',\n        engineering: 'ANARCHY.skill.engineering',\n        tracking: 'ANARCHY.skill.tracking',\n        tasking: 'ANARCHY.skill.tasking',\n        con: 'ANARCHY.skill.con',\n        intimidation: 'ANARCHY.skill.intimidation',\n        negotiation: 'ANARCHY.skill.negotiation',\n        disguise: 'ANARCHY.skill.disguise',\n        animals: 'ANARCHY.skill.animals',\n        etiquette: 'ANARCHY.skill.etiquette',\n        knowledge: 'ANARCHY.skill.knowledge',\n    },\n    area: {\n        none: 'ANARCHY.area.none',\n        shotgun: 'ANARCHY.area.shotgun',\n        circle: 'ANARCHY.area.circle',\n        cone: 'ANARCHY.area.cone',\n        rect: 'ANARCHY.area.rect',\n        ray: 'ANARCHY.area.ray'\n    },\n    range: {\n        short: 'ANARCHY.range.short',\n        medium: 'ANARCHY.range.medium',\n        long: 'ANARCHY.range.long',\n    },\n    connectionMode: {\n        disconnected: 'ANARCHY.connectionMode.disconnected',\n        augmented: 'ANARCHY.connectionMode.augmented',\n        virtual: 'ANARCHY.connectionMode.virtual',\n    },\n    vehicleCategory: {\n        miniDrone: 'ANARCHY.vehicleCategory.miniDrone',\n        smallDrone: 'ANARCHY.vehicleCategory.smallDrone',\n        mediumDrone: 'ANARCHY.vehicleCategory.mediumDrone',\n        largeDrone: 'ANARCHY.vehicleCategory.largeDrone',\n        motorcycle: 'ANARCHY.vehicleCategory.motorcycle',\n        smallCar: 'ANARCHY.vehicleCategory.smallCar',\n        largeCar: 'ANARCHY.vehicleCategory.largeCar',\n        van: 'ANARCHY.vehicleCategory.van',\n        truck: 'ANARCHY.vehicleCategory.truck',\n        aircraft: 'ANARCHY.vehicleCategory.aircraft',\n        boat: 'ANARCHY.vehicleCategory.boat',\n    },\n    modifier: {\n        column: {\n            group: 'ANARCHY.modifier.column.group',\n            effect: 'ANARCHY.modifier.column.effect',\n            value: 'ANARCHY.modifier.column.value',\n            category: 'ANARCHY.modifier.column.category',\n            subCategory: 'ANARCHY.modifier.column.subCategory',\n            target: 'ANARCHY.modifier.column.target',\n            condition: 'ANARCHY.modifier.column.condition',\n        },\n        group: {\n            roll: 'ANARCHY.modifier.group.roll',\n            attribute: 'ANARCHY.modifier.group.attribute',\n            monitor: 'ANARCHY.modifier.group.monitor',\n            other: 'ANARCHY.modifier.group.other',\n        },\n        roll: {\n            effect: {\n                pool: 'ANARCHY.modifier.roll.effect.pool',\n                reroll: 'ANARCHY.modifier.roll.effect.reroll',\n                glitch: 'ANARCHY.modifier.roll.effect.glitch',\n                successReroll: 'ANARCHY.modifier.roll.effect.successReroll',\n                opponentPool: 'ANARCHY.modifier.roll.effect.opponentPool',\n                opponentReroll: 'ANARCHY.modifier.roll.effect.opponentReroll',\n            },\n            category: {\n                attribute: 'ANARCHY.modifier.roll.category.attribute',\n                skill: 'ANARCHY.modifier.roll.category.skill',\n                attributeAction: 'ANARCHY.modifier.roll.category.attributeAction',\n            },\n        },\n        monitor: {\n            effect: {\n                armor: 'ANARCHY.modifier.monitor.effect.armor',\n                structure: 'ANARCHY.modifier.monitor.effect.structure',\n                stun: 'ANARCHY.modifier.monitor.effect.stun',\n                physical: 'ANARCHY.modifier.monitor.effect.physical',\n                matrix: 'ANARCHY.modifier.monitor.effect.matrix',\n            },\n            category: {\n                max: 'ANARCHY.modifier.monitor.category.max',\n                resistance: 'ANARCHY.modifier.monitor.category.resistance',\n            }\n        },\n        other: {\n            effect: {\n                ignoreWounds: 'ANARCHY.modifier.other.effect.ignoreWounds',\n                damageArmor: 'ANARCHY.modifier.other.effect.damageArmor',\n                sceneAnarchy: 'ANARCHY.modifier.other.effect.sceneAnarchy',\n                locationAnarchy: 'ANARCHY.modifier.other.effect.locationAnarchy',\n                essenceAdjustment: 'ANARCHY.modifier.other.effect.essenceAdjustment',\n                initiative: 'ANARCHY.modifier.other.effect.initiative',\n                celebrity: 'ANARCHY.modifier.other.effect.celebrity',\n            },\n            category: {\n            }\n        },\n        condition: {\n            always: 'ANARCHY.modifier.condition.always'\n        }\n    }\n};\n\n","export class Misc {\n\n  static isString = value => (typeof value === 'string' || value instanceof String)\n\n  static ascending(orderFunction = x => x) {\n    return (a, b) => Misc.sortingBy(orderFunction(a), orderFunction(b));\n  }\n\n  static descending(orderFunction = x => x) {\n    return (a, b) => Misc.sortingBy(orderFunction(b), orderFunction(a));\n  }\n\n  static sortingBy(a, b) {\n    if (a > b) return 1;\n    if (a < b) return -1;\n    return 0;\n  }\n\n  static bySortedArray(sortedArray) {\n    return it => sortedArray.indexOf(it);\n  }\n\n  static ascendingBySortedArray(sortedArray) {\n    return Misc.ascending(Misc.bySortedArray(sortedArray));\n  }\n\n  static sortedMap(map, compareFunction = (a, b) => 0) {\n    return Object.keys(map)\n      .sort(compareFunction)\n      .reduce((obj, key) => {\n        obj[key] = map[key];\n        return obj;\n      },\n        {});\n\n  }\n\n  static reindexIds(list) {\n    let index = 1;\n    list.forEach(it => it.id = (index++));\n    return list;\n  }\n\n  static distinct(array) {\n    return [...new Set(array)];\n  }\n\n  static sum() {\n    return (a, b) => a + b;\n  }\n\n  static sumValues(list, value = t => t) {\n    return list.map(value).filter(v => v != undefined).reduce(Misc.sum(), 0);\n  }\n\n  static divint(value, divisor) {\n    return Math.floor(value / divisor);\n  }\n\n  static divup(value, divisor) {\n    return Math.ceil(value / divisor);\n  }\n\n  static join(params, separator = '') {\n    return params.reduce(Misc.joiner(separator));\n  }\n\n  static joiner(separator = '') {\n    return (a, b) => a + separator + b;\n  }\n\n  static classify(items, classifier = it => it.type) {\n    let itemsBy = {};\n    Misc.classifyInto(itemsBy, items, classifier);\n    return itemsBy;\n  }\n\n  static classifyFirst(items, classifier) {\n    let itemsBy = {};\n    for (const item of items) {\n      const classification = classifier(item);\n      if (!itemsBy[classification]) {\n        itemsBy[classification] = item;\n      }\n    }\n    return itemsBy;\n  }\n\n  static classifyInto(itemsBy, items, classifier = it => it.type) {\n    for (const item of items) {\n      const classification = classifier(item);\n      let list = itemsBy[classification];\n      if (!list) {\n        list = [];\n        itemsBy[classification] = list;\n      }\n      list.push(item);\n    }\n  }\n\n  static showControlWhen(control, condition) {\n    if (condition) {\n      control.show();\n    }\n    else {\n      control.hide();\n    }\n  }\n  static minmax(value, min, max) {\n    return Math.max(min, Math.min(value, max))\n  }\n}","import { ANARCHY } from \"./config.js\";\nimport { Misc } from \"./misc.js\";\n\nconst actorWordTypes = {\n  keyword: \"keywords\",\n  disposition: \"dispositions\",\n  cue: \"cues\"\n}\n\nexport class Enums {\n  static ENUMS;\n  static hbsAttributes;\n  static hbsItemTypes;\n  static hbsCapacities;\n  static hbsMonitors;\n  static hbsMonitorLetters;\n  static hbsShadowampCategories;\n  static hbsAreas;\n  static hbsRanges;\n\n  static sortedAttributeKeys;\n\n  // this method is the place to add settings-based entries in the enums\n  static init() {\n    Enums.hbsAttributes = Enums.mapObjetToKeyValue(ANARCHY.attributes)\n      .filter(a => a.value != 'knowledge' && a.value != 'noAttribute');\n    Enums.hbsItemTypes = Enums.mapObjetToKeyValue(ANARCHY.itemType);\n    Enums.hbsCapacities = Enums.mapObjetToKeyValue(ANARCHY.capacity);\n    Enums.hbsMonitors = Enums.mapObjetToKeyValue(ANARCHY.monitor);\n    Enums.hbsMonitorLetters = Enums.mapObjetToKeyValue(ANARCHY.monitorLetter);\n    Enums.hbsShadowampCategories = Enums.mapObjetToKeyValue(ANARCHY.shadowampCategory);\n    Enums.hbsAreas = Enums.mapObjetToKeyValue(ANARCHY.area);\n    Enums.hbsRanges = Enums.mapObjetToKeyValue(ANARCHY.range);\n    Enums.hbsVehicleCategories = Enums.mapObjetToKeyValue(ANARCHY.vehicleCategory);\n\n    Enums.sortedAttributeKeys = Object.keys(ANARCHY.attributes);\n\n    Enums.registerHandleBarHelpers();\n  }\n\n  static registerHandleBarHelpers() {\n    Handlebars.registerHelper('sortedAttributes', map => Misc.sortedMap(map, Misc.ascendingBySortedArray(Enums.sortedAttributeKeys)));\n  }\n\n  static getEnums(filterAttributes = it => true, withKnowledge = false) {\n    return {\n      attributes: Enums.getAttributes(filterAttributes),\n      itemTypes: Enums.hbsItemTypes,\n      capacities: Enums.hbsCapacities,\n      monitors: Enums.hbsMonitors,\n      shadowampCategories: Enums.hbsShadowampCategories,\n      skills: game.system.anarchy.skills.getSkills({ withKnowledge })\n        .map(it => { return { value: it.code, label: game.i18n.localize(it.labelkey), labelkey: it.labelkey }; }),\n      areas: Enums.hbsAreas,\n      ranges: Enums.hbsRanges,\n      vehicleCategories: Enums.hbsVehicleCategories\n    };\n  }\n\n  static getAttributes(filterAttributes = it => true) {\n    return Enums.hbsAttributes.filter(it => filterAttributes(it.value));\n  }\n\n  static getActorWordTypes() {\n    return actorWordTypes;\n  }\n\n  static getMonitors() {\n    return Enums.hbsMonitors;\n  }\n\n  static getMonitorLetters() {\n    return Enums.hbsMonitorLetters;\n  }\n\n  static getActorWordTypePlural(wordType) {\n    return actorWordTypes[wordType];\n  }\n\n  static localizeAttribute(attribute) {\n    if (!ANARCHY.attributes[attribute]) {\n      return game.i18n.localize(ANARCHY.attributes['noAttribute']);\n    }\n    return game.i18n.localize(ANARCHY.attributes[attribute]);\n  }\n\n  static getFromList(list, key, keyName = 'value', valueName = 'labelkey') {\n    const found = list.find(m => m[keyName] == key);\n    return found ? found[valueName] : undefined\n  }\n\n  static mapObjetToKeyValue(object, keyName = 'value', valueName = 'labelkey') {\n    return Object.entries(object).map(\n      entry => {\n        const ret = {};\n        ret[keyName] = entry[0];\n        ret[valueName] = entry[1];\n        return ret;\n      });\n  }\n\n}\n\n","/**\n * The constants file contains things that do not change\n *\n * Constants are written in ALL_CAPS_CONSTANTS and should never be changed during runtime.\n */\n// Resolve the system id dynamically with a stable default.\n// Priority order:\n// 1) Build-time Vite env: import.meta.env.VITE_SYSTEM_ID (e.g., \"ninjanarchy\")\n// 2) Runtime (Foundry) game.system.id when available\n// 3) Default fallback: \"anarchy\"\nconst RESOLVED_SYSTEM_NAME = (() => {\n  try {\n    // Build-time (Vite) replacement. Safe in both dev and prod builds.\n    const viteEnv = (typeof import.meta !== 'undefined' && import.meta && import.meta.env)\n      ? import.meta.env.VITE_SYSTEM_ID\n      : undefined;\n    if (viteEnv && String(viteEnv).trim().length > 0) {\n      return String(viteEnv).trim();\n    }\n  } catch (_) {\n    // Ignore if import.meta is not available in this context\n  }\n\n  // Runtime (Foundry) fallback if available during evaluation\n  const runtimeId = (typeof globalThis !== 'undefined'\n    && globalThis.game\n    && globalThis.game.system\n    && globalThis.game.system.id)\n    ? String(globalThis.game.system.id).trim()\n    : undefined;\n  if (runtimeId && runtimeId.length > 0) {\n    return runtimeId;\n  }\n\n  // Final fallback keeps current public id unchanged on main\n  return 'anarchy';\n})();\n\nexport const SYSTEM_NAME = RESOLVED_SYSTEM_NAME;\nexport const SYSTEM_DESCRIPTION = \"Anarchy\";\nexport const SYSTEM_SOCKET = `system.${SYSTEM_NAME}`;\nexport const SYSTEM_SCOPE = SYSTEM_NAME;\nexport const SYSTEM_PATH = `systems/${SYSTEM_NAME}`;\nexport const STYLE_PATH = `${SYSTEM_PATH}/style`;\nexport const TEMPLATES_PATH = `systems/${SYSTEM_NAME}/templates`;\nexport const ICONS_PATH = `${SYSTEM_PATH}/icons`;\nexport const ICONS_SKILLS_PATH = `${ICONS_PATH}/skills`;\nexport const LOG_HEAD = 'Anarchy | ';\n\nexport const ANARCHY_DICE_BONUS = 3;\nexport const SPECIALIZATION_BONUS = 2;\nexport const PLAYER_MAX_ANARCHY = 6;\n\nexport const TARGET_SUCCESS = 5;\nexport const TARGET_SUCCESS_EDGE = 4;\n\nexport const BASE_MONITOR = 8;\n\nexport const TEMPLATE = {\n  actorTypes: {\n    character: 'character',\n    vehicle: 'vehicle',\n    device: 'device',\n    sprite: 'sprite',\n    ic: 'ic',\n  },\n  itemType: {\n    metatype: 'metatype',\n    skill: 'skill',\n    quality: 'quality',\n    shadowamp: 'shadowamp',\n    weapon: 'weapon',\n    gear: 'gear',\n    cyberdeck: 'cyberdeck',\n    contact: 'contact',\n  },\n  attributes: {\n    agility: 'agility',\n    strength: 'strength',\n    willpower: 'willpower',\n    logic: 'logic',\n    charisma: 'charisma',\n    edge: 'edge',\n    autopilot: 'autopilot',\n    handling: 'handling',\n    firewall: 'firewall',\n    system: 'system',\n    knowledge: 'knowledge',\n  },\n  capacities: {\n    mundane: 'mundane',\n    awakened: 'awakened',\n    emerged: 'emerged',\n  },\n  monitors: {\n    stun: 'stun',\n    armor: 'armor',\n    physical: 'physical',\n    structure: 'structure',\n    matrix: 'matrix',\n    marks: 'marks',\n    convergence: 'convergence',\n    anarchy: 'anarchy',\n    plot: 'plot',\n    sceneAnarchy: 'sceneAnarchy',\n  },\n  counters: {\n    edge: 'edge',\n    social: {\n      celebrity: 'celebrity',\n      credibility: 'credibility',\n      rumor: 'rumor'\n    }\n  },\n  area: {\n    none: 'none',\n    shotgun: 'shotgun',\n    circle: 'circle',\n    cone: 'cone',\n    rect: 'rect',\n    ray: 'ray'\n  }\n}\n\nexport const ANARCHY_SYSTEM = {\n  rollType: {\n    attributeAction: 'attributeAction',\n    defense: 'defense',\n    defensePilot: 'defensePilot',\n    attribute: 'attribute',\n    skill: 'skill',\n    weapon: 'weapon',\n  },\n  actions: {\n    defense: \"defense\",\n    resistTorture: \"resistTorture\",\n    judgeIntentions: \"judgeIntentions\",\n    perception: \"perception\",\n    composure: \"composure\",\n    memory: \"memory\",\n    catch: \"catch\",\n    lift: \"lift\",\n    matrixDefense: \"matrixDefense\",\n    astralDefense: \"astralDefense\"\n  },\n  defenses: {\n    physicalDefense: \"physicalDefense\",\n    physicalResistance: \"physicalResistance\",\n    socialDefense: \"socialDefense\",\n    matrixDefense: \"matrixDefense\",\n    mentalResistance: \"mentalResistance\"\n  },\n  fixedDefenseCode: {\n    // fix for old incorrect defense codes\n    mentalDefense: \"physicalResistance\",\n    astralDefense: \"mentalResistance\",\n  }\n}\n\n\n// export constant for JS hacks\nglobalThis.ANARCHY_CONSTANTS = {\n  SYSTEM_NAME,\n  SYSTEM_DESCRIPTION,\n  SYSTEM_SOCKET,\n  SYSTEM_SCOPE,\n  SYSTEM_PATH,\n  STYLE_PATH,\n  TEMPLATES_PATH,\n  ICONS_PATH,\n  ICONS_SKILLS_PATH,\n  LOG_HEAD,\n  ANARCHY_DICE_BONUS,\n  SPECIALIZATION_BONUS,\n  PLAYER_MAX_ANARCHY,\n  TARGET_SUCCESS,\n  TARGET_SUCCESS_EDGE,\n  BASE_MONITOR,\n  TEMPLATE,\n  ANARCHY_SYSTEM\n}","import { ANARCHY } from \"./config.js\";\n\nexport class ErrorManager {\n\n  static checkSufficient(resource, required, available) {\n    if (required > available) {\n      const error = game.i18n.format(ANARCHY.common.errors.insufficient, {\n        resource: game.i18n.localize(resource),\n        required: required,\n        available: available\n      });\n      ui.notifications.error(error);\n      throw error;\n    }\n  }\n\n  static checkOutOfRange(resource, value, min, max) {\n    if (value < min || value > max) {\n      const error = game.i18n.format(ANARCHY.common.errors.outOfRange, {\n        resource: game.i18n.localize(resource),\n        value: value, min: min, max: max\n      });\n      ui.notifications.error(error);\n      throw error;\n    }\n  }\n\n  static checkUserGM() {\n    if (!game.user.isGM) {\n      const error = game.i18n.localize(ANARCHY.common.errors.onlyGM);\n      ui.notifications.error(error);\n      throw error;\n    }\n  }\n\n  static checkItemType(item, expectedType) {\n    if (item.type != expectedType) {\n      const error = game.i18n.format(ANARCHY.common.errors.expectedType, {\n        type: game.i18n.localize(item.type ? (ANARCHY.itemType.singular[item.type]) : item.type),\n        expectedType: game.i18n.localize(expectedType)\n      });\n      ui.notifications.error(error);\n      throw error;\n    }\n  }\n\n  static checkActorCanReceiveDamage(damageType, monitor, actor) {\n    if (!monitor) {\n      const error = game.i18n.format(ANARCHY.common.errors.actorCannotReceiveDamage, {\n        actor: actor.name,\n        damageType: game.i18n.format('ANARCHY.actor.monitors.' + damageType)\n      });\n      ui.notifications.error(error);\n      throw error;\n    }\n  }\n\n  static checkWeaponDefense(weapon, actor) {\n    const defense = weapon.getDefense();\n    if (!defense) {\n      const error = game.i18n.format(ANARCHY.common.errors.noDefenseOnWeapon, { actor: actor.name, weapon: weapon.name });\n      ui.notifications.error(error);\n      throw error;\n    }\n  }\n\n  static checkTargetsCount(maxTargets, targets, area) {\n    if (maxTargets > 0 && targets.length > maxTargets) {\n      const error = game.i18n.format(ANARCHY.common.errors.maxTargetsExceedeed, {\n        weapon: this.name,\n        area: game.i18n.localize(ANARCHY.area[area]),\n        count: targets.length,\n        max: maxTargets\n      });\n      ui.notifications.error(error);\n      throw error;\n    }\n  }\n\n  static checkMatrixMonitor(actor) {\n    if (!actor.hasMatrixMonitor()) {\n      const error = game.i18n.format(ANARCHY.actor.monitors.noMatrixMonitor, {\n        actor: actor.name\n      });\n      ui.notifications.warn(error);\n      throw error;\n    }\n  }\n\n  static checkActorDefenseAction(actorAction, actor, defense) {\n    if (!actorAction) {\n      const error = game.i18n.format(ANARCHY.common.errors.actorDoesNotHaveDefense, {\n        actor: actor.name,\n        defense: game.i18n.localize(defense.labelkey),\n        actorType: game.i18n.localize(ANARCHY.actorType[actor.type])\n      });\n      ui.notifications.error(error);\n      throw error;\n    }\n  }\n}\n","import { ANARCHY } from \"./config.js\";\nimport { ErrorManager } from \"./error-manager.js\";\nimport { Misc } from \"./misc.js\";\nimport { RemoteCall } from \"./remotecall.js\";\n\nconst BLIND_MESSAGE_TO_GM = 'Users.blindMessageToGM';\n\nexport class AnarchyUsers {\n\n  static init() {\n    RemoteCall.register(BLIND_MESSAGE_TO_GM, {\n      callback: data => AnarchyUsers.blindMessageToGM(data),\n      condition: user => user.isGM\n    })\n  }\n\n\n  static blindMessageToGM(message) {\n    if (!RemoteCall.call(BLIND_MESSAGE_TO_GM, message)) {\n      ChatMessage.create({\n        user: message.user,\n        whisper: ChatMessage.getWhisperRecipients('GM'),\n        blind: true,\n        content: game.i18n.format(ANARCHY.chat.blindMessageToGM, {\n          user: game.user.name,\n          message: message.content\n        })\n      });\n    }\n  }\n\n  static getUsers(filter = user => true) {\n    return (game.version ? game.users : game.users.entities).filter(filter);\n  }\n\n  static firstConnectedGM() {\n    return AnarchyUsers.getUsers(u => u.isGM && u.active).sort(Misc.ascending(u => u.id)).at(0) ?? {};\n  }\n\n  /**\n   * @returns true pour un seul utilisateur: le premier GM connecté par ordre d'id\n   */\n  static isUniqueConnectedGM(user = game.user) {\n    return user.id == AnarchyUsers.firstConnectedGM().id;\n  }\n\n  static firstResponsible(document) {\n    if (!document.testUserPermission) {\n      return undefined\n    }\n    return AnarchyUsers.getUsers(u => u.active && document.testUserPermission(u, CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER)) == game.user\n  }\n\n  static getTargetTokens(user) {\n    return Array.from(user.targets);\n  }\n\n  static getSelectedTokens(user) {\n    return Array.from(canvas.tokens.controlled)\n  }\n\n  static getSelectedActors() {\n    return Array.from(canvas.tokens.controlled).map(t => t.actor)\n  }\n\n  static getPlayerActor() {\n    return game.user.character;\n  }\n\n\n}","import { LOG_HEAD, SYSTEM_SOCKET } from \"./constants.js\";\nimport { AnarchyUsers } from \"./users.js\";\n\nexport class RemoteCall {\n\n  constructor() {\n    this.remoteCalls = {};\n    game.socket.on(SYSTEM_SOCKET, async sockMsg => this.onSocketMessage(sockMsg));\n  }\n\n  static async register(msg, remoteCall) {\n    game.system.anarchy.remoteCall._register(msg, remoteCall);\n  }\n\n  async _register(msg, remoteCall) {\n    if (this.remoteCalls[msg]) {\n      throw `RemoteCall msg ${msg} is already registered`;\n    }\n    foundry.utils.mergeObject(remoteCall, {\n      callback: data => { console.log(LOG_HEAD + 'RemoteCall [', msg, '] (', data, ')'); },\n      condition: user => true,\n      multiple: false /* true if multiple users should handle the message */\n    }, { overwrite: false });\n    this.remoteCalls[msg] = remoteCall;\n    console.log(LOG_HEAD + 'RemoteCall registered', msg);\n  }\n\n  static call(msg, data) {\n    return game.system.anarchy.remoteCall._remoteCall(msg, data);\n  }\n\n  _remoteCall(msg, data) {\n    const remoteCall = this.remoteCalls[msg];\n    if (!remoteCall ||\n      remoteCall.condition(game.user) ||\n      (!remoteCall.multiple && AnarchyUsers.isUniqueConnectedGM())\n    ) {\n      return false;\n    }\n    game.socket.emit(SYSTEM_SOCKET, { msg: msg, data: data });\n    return true;\n  }\n\n  async onSocketMessage(sockMsg) {\n    const remoteCall = this.remoteCalls[sockMsg.msg];\n    if (remoteCall) {\n      const userMatchCondition = remoteCall.condition(game.user);\n      const isMultiple = remoteCall.multiple;\n      const isSelectedGM = AnarchyUsers.isUniqueConnectedGM();\n      if (userMatchCondition && (isMultiple || isSelectedGM)) {\n        remoteCall.callback(sockMsg.data);\n      }\n      else {\n        console.log(LOG_HEAD + 'RemoteCall.onSocketMessage(', sockMsg, ') ignored :', userMatchCondition, isMultiple, isSelectedGM);\n      }\n    }\n    else {\n      console.log(LOG_HEAD + 'RemoteCall: No callback registered for', sockMsg);\n    }\n  }\n\n}","import { ANARCHY } from \"../config.js\";\nimport { SYSTEM_SCOPE } from \"../constants.js\";\nimport { RemoteCall } from \"../remotecall.js\";\n\nexport const PARENT_MESSAGE_ID = 'parent-message-id';\nexport const MESSAGE_DATA = 'message-data';\nexport const CAN_USE_EDGE = 'can-use-edge';\nexport const OWNING_ACTOR = 'owning-actor';\n\nconst REMOVE_CHAT_MESSAGE = 'ChatManager.removeChatMessage';\nconst CHAT_MANAGER_REMOVE_FAMILY = 'ChatManager.removeChatMessageFamily';\n\nconst CHAT_MESSAGE_BUTTON_HANDLERS = [\n  { selector: '.anarchy-button.click-edge-reroll', controlVisibility: true, handler: async (chatMsg, event) => await ChatManager.edgeReroll(chatMsg) },\n  { selector: '.anarchy-button.click-defend-attack', controlVisibility: true, handler: async (chatMsg, event) => await ChatManager.defendAttack(chatMsg) },\n  { selector: '.anarchy-button.click-defend-pilot-attack', controlVisibility: true, handler: async (chatMsg, event) => await ChatManager.defendPilotAttack(chatMsg) },\n  { selector: '.anarchy-button.click-apply-attack-damage', controlVisibility: true, handler: async (chatMsg, event) => await ChatManager.applyAttack(chatMsg) },\n  { selector: 'img.open-actor-sheet', controlVisibility: false, handler: async (chatMsg, event) => await ChatManager.openActorSheet(chatMsg, event) },\n]\n\nexport class ChatManager {\n\n  static async init() {\n    Hooks.on('renderChatMessage', async (app, html, msg) => await ChatManager.onRenderChatMessage(app, html, msg));\n\n    RemoteCall.register(CHAT_MANAGER_REMOVE_FAMILY, {\n      callback: data => this.removeFamily(data),\n      condition: user => user.isGM\n    });\n\n    RemoteCall.register(REMOVE_CHAT_MESSAGE, {\n      callback: data => ChatManager.removeChatMessage(data),\n      condition: user => user.isGM\n    });\n  }\n\n  static async onRenderChatMessage(app, html, msg) {\n    const chatMessage = ChatManager.getChatMessageFromHtml(html);\n    const showButtons = ChatManager.hasRight(chatMessage);\n    CHAT_MESSAGE_BUTTON_HANDLERS.forEach(it => {\n      const jQueryButtonSelector = html.find(it.selector);\n      if (!it.controlVisibility || showButtons) {\n        jQueryButtonSelector.show();\n        jQueryButtonSelector.click(async event => await it.handler(ChatManager.getChatMessage(event), event))\n      }\n      else {\n        jQueryButtonSelector.hide();\n        jQueryButtonSelector.click(async event => { })\n      }\n    });\n  }\n\n  static async openActorSheet(chatMsg, event) {\n    const img = $(event.currentTarget).closest('img.open-actor-sheet');\n    const tokenId = img.attr('data-token-id')\n    if (tokenId) {\n      const token = canvas.tokens.get(tokenId);\n      if (token?.actor) {\n        token.actor.sheet.render(true)\n        return\n      }\n    }\n    const actorId = img.attr('data-actor-id')\n    return game.actors.get(actorId)?.sheet.render(true)\n  }\n\n  static async edgeReroll(chatMsg) {\n    if (chatMsg.getFlag(SYSTEM_SCOPE, CAN_USE_EDGE)) {\n      const rollData = chatMsg.getFlag(SYSTEM_SCOPE, MESSAGE_DATA)\n      await game.system.anarchy.rollManager.edgeReroll(rollData);\n      ChatManager.removeFamily(chatMsg.id);\n    }\n    else {\n      ui.notifications.info(game.i18n.localize(ANARCHY.common.errors.cannotUseEdgeAnymore));\n    }\n  }\n\n  static defendAttack(chatMsg) {\n    return game.system.anarchy.combatManager.onClickDefendAttack(chatMsg.getFlag(SYSTEM_SCOPE, MESSAGE_DATA))\n  }\n\n  static defendPilotAttack(chatMsg) {\n    return game.system.anarchy.combatManager.onClickPilotDefendAttack(chatMsg.getFlag(SYSTEM_SCOPE, MESSAGE_DATA))\n  }\n\n  static applyAttack(chatMsg) {\n    return game.system.anarchy.combatManager.onClickApplyAttackDamage(chatMsg.getFlag(SYSTEM_SCOPE, MESSAGE_DATA))\n  }\n\n  static getChatMessage(event) {\n    const chatMessageId = $(event.currentTarget).closest('.chat-message').attr('data-message-id');\n    return game.messages.get(chatMessageId);\n  }\n\n  static getChatMessageFromHtml(html) {\n    const chatMessageId = $(html).closest('.chat-message').attr('data-message-id');\n    return game.messages.get(chatMessageId);\n  }\n\n  /**\n   * Method in charge of preparing ANARCHY flags to be set on Document, for ChatMessage\n   */\n  static prepareFlag(flags, key, data) {\n    if (flags[SYSTEM_SCOPE] == undefined) {\n      flags[SYSTEM_SCOPE] = { [key]: data }\n    }\n    else {\n      flags[SYSTEM_SCOPE][key] = data\n    }\n  }\n\n  static removeFamily(chatMessageId) {\n    if (!RemoteCall.call(CHAT_MANAGER_REMOVE_FAMILY, chatMessageId)) {\n      game.messages.filter(m => m.getFlag(SYSTEM_SCOPE, PARENT_MESSAGE_ID) == chatMessageId)\n        .forEach(m => m.delete());\n      game.messages.get(chatMessageId)?.delete()\n    }\n  }\n\n  static removeChatMessage(chatMessageId) {\n    if (!RemoteCall.call(REMOVE_CHAT_MESSAGE, chatMessageId)) {\n      game.messages.get(chatMessageId)?.delete();\n    }\n  }\n\n  static messageActorRights(actor, right = CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER) {\n    return {\n      actorId: actor?.id,\n      tokenId: actor?.token?.id,\n      right: right ?? CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER\n    }\n  }\n\n  static readActorRights(flag) {\n    const token = flag.tokenId ? ChatManager.getToken(flag.tokenId) : undefined;\n    return {\n      actor: token?.actor ?? game.actors.get(flag.actorId),\n      token: token,\n      right: flag.right\n    }\n  }\n\n  static hasRight(chatMsg, right = CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER) {\n    const flagOwner = chatMsg.getFlag(SYSTEM_SCOPE, OWNING_ACTOR);\n    if (flagOwner) {\n      const neededRights = ChatManager.readActorRights(flagOwner)\n      if (neededRights) {\n        if (neededRights.actor) {\n          return neededRights.actor.testUserPermission(game.user, Math.min(neededRights.right, right))\n        }\n        return true\n      }\n    }\n    return false\n  }\n\n  static getToken(tokenId) {\n    return tokenId ? game.scenes.map(s => s.tokens.find(it => it.id == tokenId)).find(it => it != undefined) : undefined;\n  }\n}","import { STYLE_PATH } from './constants.js';\n\nconst faClassD6 = [\n  'fas fa-dice',\n  'fas fa-dice-one',\n  'fas fa-dice-two',\n  'fas fa-dice-three',\n  'fas fa-dice-four',\n  'fas fa-dice-five',\n  'fas fa-dice-six',\n]\n\nexport class Icons {\n\n  static fontAwesome(faClass) {\n    return `<i class=\"${faClass}\"></i>`;\n  }\n\n  static iconSystemPath(src, cssClasses) {\n    return Icons.iconPath(`${STYLE_PATH}/${src}`, cssClasses);\n  }\n\n  static iconPath(src, cssClasses) {\n    return `<img class=\"${cssClasses}\" src=\"${src}\" />`;\n  }\n\n  static iconD6(dice) {\n    if (dice < 0 || dice > 6) {\n      throw `Dice ${dice} is out of dice range [1..6] or 0 for multidice`;\n    }\n    return Icons.fontAwesome(faClassD6[dice]);\n  }\n\n}\n\n// export Icons for JS plugins\nglobalThis.ANARCHY_ICONS = Icons;\n","import { ErrorManager } from \"../error-manager.js\";\nimport { ANARCHY } from \"../config.js\";\nimport { AnarchyUsers } from \"../users.js\";\nimport { Icons } from \"../icons.js\";\nimport { TEMPLATE } from \"../constants.js\";\n\nconst MONITORS = ANARCHY.actor.monitors;\nconst COUNTERS = ANARCHY.actor.counters;\n\nexport const DEFAULT_CHECKBARS = {\n  armor: {\n    path: 'system.monitors.armor.value',\n    monitor: it => it.system.monitors.armor,\n    iconChecked: Icons.fontAwesome('fas fa-shield-slash'),\n    iconUnchecked: Icons.fontAwesome('fas fa-shield-alt'),\n    iconHit: Icons.fontAwesome('fas fa-bahai'),\n    resource: MONITORS.armor,\n  },\n  stun: {\n    path: 'system.monitors.stun.value',\n    monitor: it => it.system.monitors.stun,\n    iconChecked: Icons.fontAwesome('fas fa-grimace'),\n    iconUnchecked: Icons.fontAwesome('far fa-smile'),\n    iconHit: Icons.fontAwesome('fas fa-bahai'),\n    resource: MONITORS.stun,\n    overflow: actor => TEMPLATE.monitors.physical,\n    useArmor: true\n  },\n  physical: {\n    path: 'system.monitors.physical.value',\n    monitor: it => it.system.monitors.physical,\n    iconChecked: Icons.fontAwesome('fas fa-heartbeat'),\n    iconUnchecked: Icons.fontAwesome('far fa-heart'),\n    iconHit: Icons.fontAwesome('fas fa-bahai'),\n    resource: MONITORS.physical,\n    useArmor: true\n  },\n  structure: {\n    path: 'system.monitors.structure.value',\n    monitor: it => it.system.monitors.structure,\n    iconChecked: Icons.fontAwesome('fas fa-car-crash'),\n    iconUnchecked: Icons.fontAwesome('fas fa-car-alt'),\n    iconHit: Icons.fontAwesome('fas fa-bahai'),\n    resource: MONITORS.structure\n  },\n  matrix: {\n    path: 'system.monitors.matrix.value',\n    monitor: it => it.getMatrixMonitor(),\n    iconChecked: Icons.fontAwesome('fas fa-laptop-medical'),\n    iconUnchecked: Icons.fontAwesome('fas fa-laptop'),\n    iconHit: Icons.fontAwesome('fas fa-laptop-code'),\n    overflow: actor => actor.getMatrixOverflow(),\n    recomputeOverflow: value => 3,\n    resource: MONITORS.matrix\n  },\n  marks: {\n    path: undefined,\n    monitor: it => { return { value: 0, max: 5 } },\n    iconChecked: Icons.fontAwesome('fas fa-bookmark'),\n    iconUnchecked: Icons.fontAwesome('far fa-bookmark'),\n    iconHit: Icons.fontAwesome('fas fa-fingerprint'),\n    resource: MONITORS.marks\n  },\n  convergence: {\n    path: undefined,\n    monitor: it => { return { value: 0, max: 5 } },\n    iconChecked: Icons.fontAwesome('far fa-eye'),\n    iconUnchecked: Icons.fontAwesome('fas fa-eye-slash'),\n    iconHit: Icons.fontAwesome('fas fa-eye'),\n    resource: MONITORS.convergence\n  },\n  anarchy: {\n    path: 'system.counters.anarchy.value',\n    monitor: it => {\n      return {\n        value: it.system.counters.anarchy.value,\n        max: 6\n      };\n    },\n    iconChecked: Icons.iconSystemPath('anarchy-point.webp', 'checkbar-img'),\n    iconUnchecked: Icons.iconSystemPath('anarchy-point-off.webp', 'checkbar-img'),\n    resource: COUNTERS.anarchy\n  },\n  plot: {\n    path: 'system.counters.anarchy.value',\n    monitor: it => {\n      const value = it.system.counters.anarchy.value;\n      return { value: value, max: value + 1 };\n    },\n    iconChecked: Icons.iconSystemPath('danger-point.webp', 'checkbar-img'),\n    iconUnchecked: Icons.iconSystemPath('danger-point-off.webp', 'checkbar-img'),\n    resource: COUNTERS.anarchy\n  },\n  sceneAnarchy: {\n    path: 'system.counters.sceneAnarchy.value',\n    monitor: it => {\n      const value = it.system.counters.sceneAnarchy.value;\n      return { value: value, max: 3 };\n    },\n    iconChecked: Icons.iconSystemPath('anarchy-point-scene.webp', 'checkbar-img'),\n    iconUnchecked: Icons.iconSystemPath('anarchy-point-off.webp', 'checkbar-img'),\n    resource: COUNTERS.sceneAnarchy\n  },\n  edge: {\n    path: 'system.counters.edge.value',\n    monitor: it => {\n      return {\n        value: it.system.counters.edge.value,\n        max: it.getAttributeValue(TEMPLATE.attributes.edge)\n      };\n    },\n    iconChecked: Icons.fontAwesome('fas fa-star'),\n    iconUnchecked: Icons.fontAwesome('far fa-star'),\n    resource: COUNTERS.edge\n  },\n  credibility: {\n    path: 'system.counters.social.credibility.value',\n    monitor: it => {\n      return {\n        value: it.system.counters.social.credibility.value,\n        max: it.system.counters.social.credibility.max\n      };\n    },\n    iconChecked: Icons.fontAwesome('fas fa-handshake'),\n    iconUnchecked: Icons.fontAwesome('far fa-handshake'),\n    resource: COUNTERS.social.credibility\n  },\n  rumor: {\n    path: 'system.counters.social.rumor.value',\n    monitor: it => {\n      return {\n        value: it.system.counters.social.rumor.value,\n        max: it.system.counters.social.rumor.max\n      };\n    },\n    iconChecked: Icons.fontAwesome('fas fa-grimace'),\n    iconUnchecked: Icons.fontAwesome('far fa-grimace'),\n    resource: COUNTERS.social.rumor\n  },\n}\nexport const CHECKBARS = foundry.utils.mergeObject(DEFAULT_CHECKBARS, {});\n\nexport class Checkbars {\n  static init() {\n    Handlebars.registerHelper('iconCheckbar', Checkbars.iconCheckbar);\n    Handlebars.registerHelper('iconCheckbarHit', Checkbars.iconHit);\n  }\n\n  static hackCheckbars(overrides) {\n    if (overrides) {\n      const newBar = foundry.utils.mergeObject(DEFAULT_CHECKBARS, {})\n      foundry.utils.mergeObject(newBar, overrides, { recursive: true });\n      foundry.utils.mergeObject(CHECKBARS, newBar, { overwrite: true })\n    }\n  }\n\n  static iconCheckbar(monitor, checked) {\n    return checked ? Checkbars.iconChecked(monitor) : Checkbars.iconUnchecked(monitor)\n  }\n\n  static iconChecked(monitor) {\n    return CHECKBARS[monitor]?.iconChecked;\n  }\n\n  static iconUnchecked(monitor) {\n    return CHECKBARS[monitor]?.iconUnchecked;\n  }\n\n  static iconHit(monitor) {\n    return CHECKBARS[monitor]?.iconHit ?? CHECKBARS[monitor]?.iconChecked;\n  }\n\n  static useArmor(monitor) {\n    return CHECKBARS[monitor]?.useArmor;\n  }\n\n  static max(target, monitor) {\n    const it = CHECKBARS[monitor]?.monitor(target);\n    return (it?.max ?? 0) + (it?.maxBonus ?? 0);\n  }\n\n  static value(target, monitor) {\n    const it = CHECKBARS[monitor]?.monitor(target);\n    return (it?.value ?? 0);\n  }\n\n  static resistance(target, monitor) {\n    const it = CHECKBARS[monitor]?.monitor(target);\n    return (it?.resistance ?? 0) + (it?.resistanceBonus ?? 0);\n  }\n\n  static newValue(index, checked) {\n    return index + (checked ? 0 : 1);\n  }\n\n  static async switchMonitorCheck(target, monitor, index, checked, sourceActorId = undefined, item = undefined) {\n    await Checkbars.setCounter(target, monitor, Checkbars.newValue(index, checked), sourceActorId, item)\n  }\n\n\n  static async addCounter(target, monitor, value, sourceActorId = undefined) {\n    if (value != 0) {\n      const current = Checkbars.getCounterValue(target, monitor, sourceActorId) ?? 0;\n      await Checkbars.setCounter(target, monitor, current + value, sourceActorId);\n    }\n  }\n\n  static async setCounter(target, monitor, value, sourceActorId = undefined, item = undefined) {\n    switch (monitor) {\n      case TEMPLATE.monitors.marks:\n        return await Checkbars.setActorMarks(target, value, sourceActorId, item);\n      case TEMPLATE.monitors.matrix:\n        ErrorManager.checkMatrixMonitor(target)\n        return await Checkbars.setCheckbar(target, monitor, value, item);\n      case TEMPLATE.monitors.convergence:\n        return await Checkbars.setActorConvergence(target, value);\n      case TEMPLATE.monitors.anarchy:\n        return await Checkbars.setAnarchy(target, value);\n      case TEMPLATE.monitors.sceneAnarchy:\n        return await Checkbars.setSceneAnarchy(target, value);\n    }\n    return await Checkbars.setCheckbar(target, monitor, value);\n  }\n\n  static getCounterValue(target, monitor, sourceActorId) {\n    switch (monitor) {\n      case TEMPLATE.monitors.marks:\n        return Checkbars.getActorMarks(target, sourceActorId);\n      case TEMPLATE.monitors.convergence:\n        return Checkbars.getActorConvergence(target);\n      case TEMPLATE.monitors.anarchy:\n        return Checkbars.getAnarchy(target, monitor);\n    }\n    return Checkbars.value(target, monitor);\n  }\n\n  static async setCheckbar(target, monitor, value) {\n    if (value == Checkbars.getCounterValue(target, monitor)) {\n      return;\n    }\n    const checkbar = CHECKBARS[monitor];\n    if (checkbar.path) {\n      const max = Checkbars.max(target, monitor);\n      if (max <= 0) {\n        return;\n      }\n      await Checkbars._manageOverflow(checkbar, target, monitor, value, max);\n      value = Math.min(value, max);\n      ErrorManager.checkOutOfRange(checkbar.resource, value, 0, max)\n      await target.setCheckbarValue(checkbar.path, value)\n    }\n  }\n\n  static async _manageOverflow(checkbar, target, monitor, value, max) {\n    if (value > max) {\n      const overflowMonitor = checkbar.overflow ? checkbar.overflow(target) : undefined\n      const overflow = checkbar.recomputeOverflow ? checkbar.recomputeOverflow(value - max) : (value - max);\n      if (overflowMonitor && overflow > 0) {\n        Checkbars._notifyOverflow(target, monitor, overflow, overflowMonitor);\n        await Checkbars.addCounter(target, overflowMonitor, overflow);\n      }\n    }\n  }\n\n  static _notifyOverflow(target, monitor, overflow, overflowMonitor) {\n    ui.notifications.warn(game.i18n.format(ANARCHY.actor.monitors.overflow, {\n      actor: target.name,\n      monitor: game.i18n.format('ANARCHY.actor.monitors.' + monitor),\n      overflow: overflow,\n      overflowMonitor: game.i18n.format('ANARCHY.actor.monitors.' + overflowMonitor),\n    }));\n  }\n\n  static async _manageStunOverflow(target, value, max) {\n    await Checkbars.addCounter(target, TEMPLATE.monitors.physical, value - max);\n  }\n\n  static async _manageMatrixOverflow(target, value, max) {\n    await Checkbars.addCounter(target, TEMPLATE.monitors.stun, value - max);\n  }\n  static async setAnarchy(target, newValue) {\n    if (!target.hasOwnAnarchy()) {\n      return;\n    }\n\n    if (target.hasGMAnarchy()) {\n      await game.system.anarchy.gmAnarchy.setAnarchy(newValue);\n      target.render();\n      return;\n    }\n\n    await Checkbars._setAnarchyMonitor(target, TEMPLATE.monitors.anarchy, newValue);\n  }\n\n  static async setSceneAnarchy(target, newValue) {\n    await Checkbars._setAnarchyMonitor(target, TEMPLATE.monitors.sceneAnarchy, newValue);\n  }\n\n  static async _setAnarchyMonitor(target, monitor, newValue) {\n    const current = Checkbars.value(target, monitor);\n    await Checkbars.setCheckbar(target, monitor, newValue);\n    if (!game.user.isGM) {\n      Checkbars.notifyAnarchyChange(target, monitor, current, newValue);\n    }\n  }\n\n  static getAnarchy(target, monitor) {\n    if (!game.user.isGM && (!target.hasOwnAnarchy() || target.hasGMAnarchy())) {\n      return 0; // undisclosed\n    }\n    if (monitor == COUNTERS.anarchy) {\n      if (!target.hasOwnAnarchy()) {\n        return 0;\n      }\n\n      if (target.hasGMAnarchy()) {\n        return 0;\n      }\n    }\n    return Checkbars.value(target, monitor);\n  }\n\n  static notifyAnarchyChange(target, monitor, current, newValue) {\n    AnarchyUsers.blindMessageToGM({\n      from: game.user.id,\n      content: game.i18n.format(ANARCHY.gmManager.playerChangedAnarchy,\n        {\n          user: game.user.name,\n          actor: target.name,\n          monitor: game.i18n.localize(ANARCHY.actor.counters[monitor]),\n          from: current,\n          to: newValue\n        })\n    });\n  }\n\n  static getActorMarks(target, sourceActorId) {\n    return Checkbars._findActorMarks(target.getMatrixMarks(), sourceActorId)?.marks ?? 0;\n  }\n\n  static async addActorMark(target, sourceActorId, item = undefined) {\n    const previous = Checkbars._findActorMarks(target.getMatrixMarks(), sourceActorId);\n    Checkbars.setActorMarks(target, (previous.marks ?? 0) + 1, sourceActorId, item);\n  }\n\n  static async setActorMarks(target, value, sourceActorId, item = undefined) {\n    if (target.canReceiveMarks()) {\n      let marks = deepClone(target.getMatrixMarks())\n      ErrorManager.checkOutOfRange(CHECKBARS.marks.resource, value, 0, Checkbars.max(target, 'marks'))\n      const sourceActorMarks = Checkbars._findActorMarks(marks, sourceActorId)\n      if (sourceActorMarks.marks == undefined) {\n        marks.push(sourceActorMarks)\n      }\n      sourceActorMarks.marks = Math.max(0, value);\n      marks = marks.filter(target => target.marks > 0);\n      await target.setCheckbarValue('system.monitors.matrix.marks', marks)\n    }\n  }\n\n  static _findActorMarks(marks, sourceActorId) {\n    return marks.find(source => source.actorId == sourceActorId) ?? { actorId: sourceActorId };\n  }\n\n  static getActorConvergence(target) {\n    game.system.anarchy.gmConvergence.getConvergence(target);\n  }\n\n  static async setActorConvergence(target, value) {\n    await game.system.anarchy.gmConvergence.setConvergence(target, value);\n  }\n}\n","import { Checkbars } from \"../common/checkbars.js\";\nimport { ANARCHY } from \"../config.js\";\nimport { SYSTEM_NAME, TEMPLATE } from \"../constants.js\";\nimport { ErrorManager } from \"../error-manager.js\";\nimport { RemoteCall } from \"../remotecall.js\";\n\nconst GM_ANARCHY = \"anarchy-gm\";\nconst GM_SCENE_ANARCHY = \"scene-anarchy-gm\";\nconst GM_ADD_ANARCHY = 'GMAnarchy.addAnarchy';\n\nexport class GMAnarchy {\n\n  constructor() {\n    game.settings.register(SYSTEM_NAME, GM_ANARCHY, {\n      scope: \"world\",\n      config: false,\n      default: 1,\n      type: Number\n    });\n    game.settings.register(SYSTEM_NAME, GM_SCENE_ANARCHY, {\n      scope: \"world\",\n      config: false,\n      default: 0,\n      type: Number\n    });\n\n    RemoteCall.register(GM_ADD_ANARCHY, {\n      callback: data => game.system.anarchy.gmAnarchy.addAnarchy(data),\n      condition: user => user.isGM\n    });\n    this.anarchy = game.settings.get(SYSTEM_NAME, GM_ANARCHY);\n  }\n\n  getAnarchy() {\n    return {\n      isGM: true,\n      value: this.anarchy,\n      max: this.anarchy + 1,\n      scene: 0\n    }\n  }\n\n  async actorGivesAnarchyToGM(actor, count) {\n    if (count > 0) {\n      ChatMessage.create({\n        user: game.user,\n        whisper: ChatMessage.getWhisperRecipients('GM'),\n        content: game.i18n.format(ANARCHY.gmManager.gmReceivedAnarchy,\n          {\n            anarchy: count,\n            actor: actor.name\n          })\n      });\n      await this.addAnarchy(count);\n    }\n  }\n\n  async npcConsumesAnarchy(actor, count) {\n    await this.addAnarchy(-count);\n  }\n\n  async addAnarchy(count) {\n    if (!RemoteCall.call(GM_ADD_ANARCHY, count)) {\n      ErrorManager.checkSufficient(ANARCHY.actor.counters.plot, -count, this.anarchy);\n      await this.setAnarchy(this.anarchy + count);\n    }\n  }\n\n  async setAnarchy(newAnarchy) {\n    this.anarchy = newAnarchy;\n    game.settings.set(SYSTEM_NAME, GM_ANARCHY, newAnarchy);\n    await this._rebuild();\n    this._syncGMAnarchySheets();\n  }\n\n  async activateListeners(html) {\n    this.toolbar = html.find(\".gm-anarchy-bar\");\n    await this._rebuild();\n  }\n\n  async _rebuild() {\n    this.toolbar.find('.checkbar-root').replaceWith(await this._renderBar());\n    this.toolbar.find('a.click-checkbar-element').click(async (event) => await this._onClickAnarchyCheckbar(event));\n  }\n\n  async _onClickAnarchyCheckbar(event) {\n    const index = Number.parseInt($(event.currentTarget).attr('data-index'));\n    const isChecked = $(event.currentTarget).attr('data-checked') == 'true';\n    const newAnarchy = Checkbars.newValue(index, isChecked);\n    await this.setAnarchy(newAnarchy);\n  }\n\n  async _renderBar() {\n    return await renderTemplate(\"systems/anarchy/templates/monitors/anarchy.hbs\", {\n      code: 'plot',\n      rowlength: 6,\n      value: this.getAnarchy().value,\n      max: this.getAnarchy().max,\n      scene: 0,\n      labelkey: ANARCHY.actor.counters.plot\n    });\n  }\n\n  _syncGMAnarchySheets() {\n    const linkedActors = game.actors.filter(actor => !actor.token || actor.token.isLinked);\n    const unlinkedActors = (game.canvas?.tokens?.getDocuments() ?? [])\n      .filter(t => !t.isLinked)\n      .map(t => t.actor);\n\n    linkedActors.concat(unlinkedActors)\n      .filter(actor => !actor.hasPlayerOwner)\n      .forEach(actor => actor.render());\n  }\n}","\nexport class HandleDragApplication {\n  constructor(getDocElement, options) {\n    this.getDocElement = getDocElement\n    this.initial = options.initial ?? { left: 200, top: 200 };\n    this.maxPos = options.maxPos ?? { left: 200, top: 100 };\n    this.minPos = options.minPos ?? { left: 2, top: 2 };\n    this.settings = options.settings;\n\n    game.settings.register(this.settings.system, this.settings.keyPosition, {\n      scope: \"client\",\n      config: false,\n      default: this.initial,\n      type: Object\n    });\n    this.position = game.settings.get(this.settings.system, this.settings.keyPosition);\n    this._initDrag();\n  }\n\n  _initDrag() {\n    this.drag = {\n      topPos: 0, leftPos: 0,\n      topEvent: 0, leftEvent: 0,\n    }\n  }\n\n  _savePosition(newPosition) {\n    this.position = newPosition;\n    game.settings.set(this.settings.system, this.settings.keyPosition, this.position);\n  }\n\n  onMouseDown(event) {\n    if (this.isRightMouseButton(event)) {\n      this.handleMoveRightClick();\n    }\n    else {\n      this.handleMoveDrag(event);\n    }\n  }\n\n  isRightMouseButton(event) {\n    event = event || window.event;\n    if (\"which\" in event) { // Gecko (Firefox), WebKit (Safari/Chrome) & Opera\n      return event.which == 3;\n    } else if (\"button\" in event) { // IE, Opera \n      return event.button == 2;\n    }\n    return false;\n  }\n\n  handleMoveRightClick(event) {\n    event.preventDefault();\n    this._savePosition(this.initial);\n  }\n  \n  handleMoveDrag(event) {\n    event.preventDefault();\n    this._initDrag();\n    this._dragElement(this.getDocElement(document));\n  }\n\n  _dragElement(element) {\n    element.onmousedown = e => this._dragMouseDown(element, e);\n  }\n\n  _dragMouseDown(element, e) {\n    e = e || window.event;\n    e.preventDefault();\n    this.drag.leftEvent = e.clientX;\n    this.drag.topEvent = e.clientY;\n    document.onmouseup = e => this._closeDragElement(element, e);\n    document.onmousemove = e => this._elementDrag(element, e);\n  }\n\n  _elementDrag(element, e) {\n    e = e || window.event;\n    e.preventDefault();\n    // calculate the new cursor position:\n    this.drag.leftPos = this.drag.leftEvent - e.clientX;\n    this.drag.topPos = this.drag.topEvent - e.clientY;\n    this.drag.leftEvent = e.clientX;\n    this.drag.topEvent = e.clientY;\n\n    // set the element's new position:\n    this._setPositionStyle(element, {\n      top: element.offsetTop - this.drag.topPos,\n      left: element.offsetLeft - this.drag.leftPos\n    });\n  }\n\n  _closeDragElement(element, e) {\n    // stop moving when mouse button is released:\n    element.onmousedown = null;\n    document.onmouseup = null;\n    document.onmousemove = null;\n\n    const newPosition = {\n      top: element.offsetTop - this.drag.topPos,\n      left: element.offsetLeft - this.drag.leftPos\n    };\n    let newElementPos = this._constrain(newPosition);\n\n    if (newElementPos.left != this.drag.leftPos\n      || newElementPos.top != this.drag.topPos) {\n      this._setPositionStyle(element, newElementPos);\n    }\n    this._savePosition(newElementPos);\n  }\n\n  setPosition(newPosition) {\n    newPosition = newPosition ?? this.position;\n    let application = this;\n    return new Promise(resolve => {\n      // TODO: can be made into class method\n      function check() {\n        let element = application.getDocElement(document);\n        if (element) {\n          application._setPositionStyle(element, application._constrain(newPosition));\n          resolve();\n        } else {\n          setTimeout(check, 30);\n        }\n      }\n      check();\n    });\n  }\n\n  _setPositionStyle(element, position) {\n    element.style.bottom = undefined;\n    element.style.top = position.top + \"px\";\n    element.style.left = position.left + \"px\";\n  }\n\n  _constrain(newPosition) {\n    return {\n      left: Math.max(this.minPos.left, Math.min(window.innerWidth - this.maxPos.left, newPosition.left)),\n      top: Math.max(this.minPos.top, Math.min(window.innerHeight - this.maxPos.top, newPosition.top))\n    };\n  }\n\n}","import { ANARCHY } from \"../config.js\";\nimport { SYSTEM_NAME } from \"../constants.js\";\n\nconst GM_DIFFICULTY_POOLS = \"gm-difficulty-pools\";\nconst SYSTEM_KEY_GM_DIFFICULTY_POOL = `${SYSTEM_NAME}.${GM_DIFFICULTY_POOLS}`;\nexport class GMDifficulty {\n\n  constructor() {\n    Hooks.on('updateSetting', async (setting, update, options, id) => this.onUpdateSetting(setting, update, options, id));\n    Hooks.once('ready', () => this.onReady());\n  }\n\n  onReady() {\n    game.settings.register(SYSTEM_NAME, GM_DIFFICULTY_POOLS, {\n      scope: \"world\",\n      name: game.i18n.localize(ANARCHY.settings.gmDifficulty.name),\n      hint: game.i18n.localize(ANARCHY.settings.gmDifficulty.hint),\n      config: true,\n      default: game.i18n.localize(ANARCHY.settings.gmDifficulty.default),\n      type: String\n    });\n    this.loadDifficultySettings();\n  }\n\n  async onUpdateSetting(setting, update, options, id) {\n    if (game.user.isGM && setting.key == SYSTEM_KEY_GM_DIFFICULTY_POOL) {\n      this.loadDifficultySettings();\n      this._rebuild();\n      game.system.anarchy.gmManager.render(false);\n    }\n  }\n\n  loadDifficultySettings() {\n    const setting = game.settings.get(SYSTEM_NAME, GM_DIFFICULTY_POOLS);\n    this.difficultyPools = setting.split(',').map(it => {\n      const kv = it.split(':');\n      if (kv[1]) {\n        return { difficulty: kv[0], pool: kv[1] };\n      }\n      return { pool: Number(kv[0]) };\n    });\n  }\n\n  getDifficultyData() {\n    return this.difficultyPools;\n  }\n\n  async activateListeners(html) {\n    this.toolbar = html.find(\".gm-difficulty-bar\");\n    await this._rebuild();\n  }\n\n  async _rebuild() {\n    this.toolbar.find('.gm-difficulty-bar').replaceWith(await this._renderBar());\n    this.toolbar.find('a.click-roll-difficuty-pool').click(async (event) => await this._onClickDifficulty(event));\n  }\n\n  async _renderBar() {\n    return await renderTemplate(\"systems/anarchy/templates/app/gm-difficulty-buttons.hbs\", {\n      difficultyPools: this.difficultyPools\n    });\n  }\n\n  async _onClickDifficulty(event) {\n    const pool = $(event.currentTarget).attr('data-pool');\n    const difficulty = $(event.currentTarget).attr('data-difficulty');\n    const roll = new Roll(`${pool}d6cs>=5`);\n    await roll.evaluate();\n    const flavor = game.i18n.format(ANARCHY.settings.gmDifficulty.chatMessage, {\n      pool: pool,\n      difficulty: difficulty ?? pool,\n      success: roll.total\n    });\n    const message = await roll.toMessage({ flavor: flavor }, { create: false });\n    ChatMessage.create(message);\n  }\n}","import { HandleDragApplication } from \"./handle-drag.js\";\nimport { ANARCHY } from \"../config.js\";\nimport { SYSTEM_NAME } from \"../constants.js\";\nimport { GMDifficulty } from \"./gm-difficulty.js\";\nimport \"../../styles/gm-manager.scss\";\n\n\nconst GM_MANAGER = \"gm-manager\";\nconst GM_MANAGER_POSITION = \"gm-manager-position\";\nconst GM_MANAGER_INITIAL_POSITION = { top: 200, left: 200 };\nconst GM_MANAGER_TEMPLATE = 'systems/anarchy/templates/app/gm-manager.hbs';\n\nexport class GMManager extends Application {\n\n  constructor(gmAnarchy, gmConvergence) {\n    super();\n    this.gmAnarchy = gmAnarchy;\n    this.gmConvergence = gmConvergence;\n    this.gmDifficulty = new GMDifficulty();\n    this.handleDrag = new HandleDragApplication(\n      doc => doc.getElementById(\"gm-manager\"),\n      {\n        initial: GM_MANAGER_INITIAL_POSITION,\n        maxPos: { left: 200, top: 100 },\n        settings: {\n          system: SYSTEM_NAME,\n          keyPosition: GM_MANAGER_POSITION\n        }\n      })\n    Hooks.once('ready', () => this.onReady());\n    Hooks.on(\"renderChatLog\", async (app, html, data) => {\n      const templatePath = \"systems/anarchy/templates/app/chat-tools.hbs\";\n      const templateData = {\n        title: game.i18n.localize(\"ANARCHY.gmManager.title\"),\n        rollDice: game.i18n.localize(\"ANARCHY.chat_actions.rollDice.title\"),\n        isGM: game.user.isGM,\n      };\n      const templateHTML = await renderTemplate(templatePath, templateData);\n      const template = $(templateHTML)\n      $(html).find('form.chat-form').append(template[0]);\n\n      const buttonDICE = $(html).find('form.chat-form .rolldice')\n\n      buttonDICE.on(\"click\", event => {\n        event.preventDefault();\n        new Dialog({\n          title: game.i18n.localize(\"ANARCHY.chat_actions.rollDice.title\"),\n          content: \"<div style=\\\"display:flex;margin:4px 0 8px 0;align-items:center;gap:8px\\\">\" +\n            game.i18n.localize(\"ANARCHY.chat_actions.rollDice.instruction\") +\n            '<input class=\"roll-dice-value\" name=\"macro-roll-count-dice\" type=\"number\" value=\"3\" /></div>',\n          buttons: {\n            cancel: { label: game.i18n.localize(\"ANARCHY.common.cancel\"), icon: '<i class=\"fas fa-times\"></i>' },\n            submit: {\n              label: game.i18n.localize(\"ANARCHY.common.roll.button\"), icon: '<i class=\"fas fa-dice\"></i>',\n              callback: async (html) => {\n                const count = $(html).find('input[name=\"macro-roll-count-dice\"]').val();\n                if (!count || isNaN(count) || count <= 0) {\n                  ui.notifications.warn(game.i18n.localize(\"ANARCHY.chat_actions.rollDice.error\"));\n                  return;\n                }\n\n                const roll = new Roll(`${count}d6cs>4`);\n                await roll.evaluate({ async: true });\n\n                const results = roll.terms[0].results;\n                const ones = results.filter(it => it.result == 1).length;\n\n                const flavor = game.i18n.format(\"ANARCHY.chat_actions.rollDice.result\", {\n                  count: count,\n                  success: roll.total,\n                  ones: ones\n                });\n                const message = await roll.toMessage({ flavor: flavor }, { create: false });\n\n                ChatMessage.create(message);\n              }\n            }\n          },\n          default: \"submit\"\n        }).render(true);\n      })\n\n      const buttonGM = $(html).find('form.chat-form .gmmanager')\n      buttonGM.on(\"click\", event => {\n        event.preventDefault();\n        if (this._element) {\n          this.close();\n        } else {\n          this.render(true);\n        }\n      })\n\n    })\n  }\n\n  onReady() {\n    if (game.user.isGM) {\n      this.render(true);\n    }\n  }\n\n  /* -------------------------------------------- */\n  static get defaultOptions() {\n    let options = super.defaultOptions;\n    options.id = GM_MANAGER;\n    options.title = game.i18n.localize(ANARCHY.gmManager.title);\n    options.template = GM_MANAGER_TEMPLATE;\n    options.popOut = false;\n    options.resizable = false;\n    options.height = \"auto\";\n    options.width = \"auto\";\n    return options;\n  }\n  async render(force, options) {\n    if (game.user.isGM) {\n      await super.render(force, options);\n    }\n  }\n\n  getData() {\n    this.handleDrag.setPosition();\n    return {\n      anarchy: this.gmAnarchy.getAnarchy(),\n      convergences: this.gmConvergence.getConvergences(),\n      difficultyPools: this.gmDifficulty.getDifficultyData(),\n      ANARCHY: ANARCHY,\n      options: {\n        classes: [game.system.anarchy.styles.selectCssClass()]\n      }\n    }\n  }\n\n  async activateListeners(html) {\n    super.activateListeners(html);\n\n    html.find('.app-title-bar').mousedown(event => this.handleDrag.onMouseDown(event));\n    html.find('.gm-manager-hide-button').mousedown(event => this.close());\n\n    this.gmAnarchy.activateListeners(html);\n    this.gmConvergence.activateListeners(html);\n    this.gmDifficulty.activateListeners(html);\n  }\n\n}","import { ANARCHY } from \"./config.js\";\nimport { ANARCHY_SYSTEM, TEMPLATE } from \"./constants.js\";\nimport { ErrorManager } from \"./error-manager.js\";\nimport { Icons } from \"./icons.js\";\n\nfunction action(code, attributeFunction1, attributeFunction2, icon, actorTypes, condition = actor => true) {\n  return {\n    code: code,\n    labelkey: ANARCHY.attributeAction[code],\n    attributeFunction1: attributeFunction1 ?? (__ => undefined),\n    attributeFunction2: attributeFunction2 ?? (__ => undefined),\n    icon: icon,\n    actorTypes: actorTypes,\n    condition: condition\n  }\n}\n\nfunction defense(code, actionCode) {\n  return {\n    code: code,\n    labelkey: ANARCHY.defense[code],\n    actionCode: actionCode\n  }\n}\n\nconst ATTR = TEMPLATE.attributes;\nconst ACTOR = TEMPLATE.actorTypes;\nconst ACTION = ANARCHY_SYSTEM.actions;\nconst DEFENSE = ANARCHY_SYSTEM.defenses;\n\nconst ATTRIBUTE_ACTIONS = [\n  action(ACTION.defense, __ => ATTR.agility, __ => ATTR.logic, Icons.fontAwesome('fas fa-shield-alt'), [ACTOR.character]),\n  action(ACTION.defense, __ => ATTR.autopilot, __ => ATTR.handling, Icons.fontAwesome('fas fa-tachometer-alt'), [ACTOR.vehicle]),\n  // TODO: add a way to pilot a vehicle to fallback defense of controled vehicle\n  action(ACTION.resistTorture, __ => ATTR.strength, __ => ATTR.willpower, Icons.fontAwesome('fas fa-angry'), [ACTOR.character]),\n\n  action(ACTION.perception, __ => ATTR.logic, __ => ATTR.willpower, Icons.fontAwesome('fas fa-eye'), [ACTOR.character]),\n  action(ACTION.perception, __ => ATTR.autopilot, undefined, Icons.fontAwesome('fas fa-video'), [ACTOR.vehicle]),\n  action(ACTION.perception, actor => actor.getMatrixLogic(), actor => actor.getMatrixLogic(), Icons.fontAwesome('fas fa-video'), [ACTOR.device, ACTOR.sprite, ACTOR.ic]),\n\n  action(ACTION.composure, __ => ATTR.charisma, __ => ATTR.willpower, Icons.fontAwesome('fas fa-meh'), [ACTOR.character]),\n  action(ACTION.judgeIntentions, __ => ATTR.charisma, __ => ATTR.charisma, Icons.fontAwesome('fas fa-theater-masks'), [ACTOR.character]),\n  action(ACTION.memory, __ => ATTR.logic, __ => ATTR.logic, Icons.fontAwesome('fas fa-brain'), [ACTOR.character]),\n  action(ACTION.catch, __ => ATTR.agility, __ => ATTR.agility, Icons.fontAwesome('fas fa-baseball-ball'), [ACTOR.character]),\n  action(ACTION.lift, __ => ATTR.strength, __ => ATTR.strength, Icons.fontAwesome('fas fa-dumbbell'), [ACTOR.character]),\n\n  action(ACTION.matrixDefense, actor => actor.getMatrixLogic(), actor => actor.getMatrixFirewall(), Icons.fontAwesome('fas fa-shield-virus'), [ACTOR.character, ACTOR.sprite, ACTOR.ic, ACTOR.device, ACTOR.vehicle]),\n  action(ACTION.astralDefense, ___ => ATTR.logic, ___ => ATTR.willpower, Icons.fontAwesome('fas fa-shield-virus'), [ACTOR.character]),\n\n]\n\nconst DEFENSES = [\n  defense(DEFENSE.physicalDefense, ACTION.defense),\n  defense(DEFENSE.physicalResistance, ACTION.resistTorture),\n  defense(DEFENSE.socialDefense, ACTION.composure),\n  defense(DEFENSE.matrixDefense, ACTION.matrixDefense),\n  defense(DEFENSE.mentalResistance, ACTION.perception),\n]\n\nexport class AttributeActions {\n  static init() {\n    Handlebars.registerHelper('fixedDefenseCode', code => AttributeActions.fixedDefenseCode(code));\n  }\n\n  static all(filter = undefined) {\n    return filter\n      ? ATTRIBUTE_ACTIONS.filter(filter)\n      : ATTRIBUTE_ACTIONS;\n  }\n\n  static getActorActions(actor) {\n    return ATTRIBUTE_ACTIONS.filter(it => it.actorTypes.includes(actor.type) && it.condition(actor));\n  }\n\n  static fixedDefenseCode(code) {\n    return ANARCHY_SYSTEM.fixedDefenseCode[code] ?? code;\n  }\n  static getActorDefenses(actor) {\n    return DEFENSES\n      .map(defense => {\n        const actorAction = AttributeActions.getActorAction(actor, defense.actionCode);\n        return AttributeActions._convertToDefense(actorAction, defense);\n      })\n      .filter(it => it?.code);\n  }\n\n  static getDefenseAttributeAction(defenseCode) {\n    return DEFENSES.find(it => it.code == defenseCode)?.actionCode\n  }\n\n  static getActorAction(actor, actionCode) {\n    return AttributeActions.getActorActions(actor).find(it => it.code == actionCode);\n  }\n\n  static getActorDefense(actor, defenseCode) {\n    defenseCode = AttributeActions.fixedDefenseCode(defenseCode);\n    const defense = DEFENSES.find(it => it.code == defenseCode);\n    const actorAction = AttributeActions.getActorAction(actor, defense.actionCode);\n    ErrorManager.checkActorDefenseAction(actorAction, actor, defense);\n    return AttributeActions._convertToDefense(actorAction, defense);\n  }\n\n  static _convertToDefense(actorAction, defense) {\n    return actorAction ? foundry.utils.mergeObject(defense,\n      actorAction ?? {},\n      { overwrite: false, inplace: false }\n    ) : undefined;\n  }\n\n  static getDefenses() {\n    return DEFENSES;\n  }\n\n  static prepareShortcut(actor, actionCode) {\n    const action = AttributeActions.getActorActions(actor).find(a => a.code == actionCode);\n    if (action) {\n      return {\n        icon: action.icon,\n        label: game.i18n.localize(action.labelkey),\n        callback: (token) => token.actor.rollAttributeAction(actionCode),\n      };\n    }\n    return undefined;\n  }\n}","\nexport const NO_MATRIX_MONITOR = {\n  canMark: false,\n  marks: [],\n  value: 0,\n  max: 0,\n  resistance: 0\n}\n\nexport const MATRIX = {\n  connectionMode: {\n    disconnected: 'disconnected',\n    augmented: 'augmented',\n    virtual: 'virtual'\n  }\n}\n\nexport class Matrix {\n  static resolveConnectionMode(connectionMode) {\n    switch (connectionMode) {\n      case MATRIX.connectionMode.disconnected:\n      case MATRIX.connectionMode.augmented:\n      case MATRIX.connectionMode.virtual:\n        return connectionMode\n      case undefined:\n      default:\n        return MATRIX.connectionMode.disconnected\n    }\n  }\n\n  static getNextConnectionMode(connectionMode) {\n    switch (connectionMode) {\n      case MATRIX.connectionMode.disconnected: return MATRIX.connectionMode.augmented\n      case MATRIX.connectionMode.augmented: return MATRIX.connectionMode.virtual\n      default:\n      case MATRIX.connectionMode.virtual: return MATRIX.connectionMode.disconnected\n    }\n  }\n}\n","import { AttributeActions } from \"../attribute-actions.js\";\nimport { ANARCHY } from \"../config.js\";\nimport { TEMPLATE } from \"../constants.js\";\nimport { Enums } from \"../enums.js\";\nimport { Misc } from \"../misc.js\";\n\nconst SHADOWAMP_TYPES = [TEMPLATE.itemType.shadowamp, TEMPLATE.itemType.weapon, TEMPLATE.itemType.cyberdeck];\n/**\n * Modifier: {group, effect, category, subCategory, value, condition, id}\n */\nexport class Modifiers {\n  constructor() {\n    this.modifiers = {\n      groups: Enums.mapObjetToKeyValue(ANARCHY.modifier.group, 'key', 'label'),\n      roll: Modifiers._buildGroupOptions('roll'),\n      attribute: Modifiers._buildGroupOptions('attribute'),\n      monitor: Modifiers._buildGroupOptions('monitor'),\n      other: Modifiers._buildGroupOptions('other'),\n    }\n    Hooks.once('ready', () => this.onReady());\n  }\n\n  static _buildGroupOptions(group) {\n    switch (group) {\n      case 'attribute':\n        return {\n          label: ANARCHY.modifier.group[group],\n          effects: Enums.hbsAttributes.map(it => { return { key: it['value'], label: it['labelkey'] } }),\n          categories: [],\n        }\n    }\n    return {\n      label: ANARCHY.modifier.group[group],\n      effects: Enums.mapObjetToKeyValue(ANARCHY.modifier[group].effect, 'key', 'label'),\n      categories: Enums.mapObjetToKeyValue(ANARCHY.modifier[group].category, 'key', 'label'),\n    };\n  }\n\n  async onReady() {\n    Handlebars.registerHelper('modifierHasSubCategory', (group, effect, category) => this.hasSubCategory(group, effect, category));\n    Handlebars.registerHelper('modifierSelectOption', (value, options) => this.getSelectOptions(value, options));\n  }\n\n  hasSubCategory(group, effect, category) {\n    switch (group) {\n      case 'roll':\n        return true;\n    }\n    return false;\n  }\n\n  getSelectOptions(select, options) {\n    switch (select) {\n      case 'group': return this.modifiers.groups;\n      case 'effect': return this.modifiers[options.hash.group]?.effects;\n      case 'category': return this.modifiers[options.hash.group]?.categories;\n      case 'subCategory':\n        switch (options.hash.group) {\n          case 'roll': {\n            return this.getSelectRollSubCategories(options.hash.category);\n          }\n        }\n        return [];\n    }\n    return [];\n  }\n\n  getSelectRollSubCategories(category) {\n    switch (category) {\n      case 'attribute':\n        return Enums.getAttributes().map(attr => { return { key: attr.value, label: attr.labelkey } });\n      case 'skill':\n        return game.system.anarchy.skills.getSkills()\n          .map(it => { return { key: it.code, label: it.labelkey } });\n      case 'attributeAction':\n        const actions = AttributeActions.all().map(action => { return { key: action.code, label: action.labelkey }; });\n        return Misc.distinct(actions.map(it => it.key)).map(key => actions.find(it => it.key == key))\n    }\n    return [];\n  }\n\n  getEnums() {\n    return { modifiers: this.modifiers };\n  }\n\n  static buildRollModifiersFilter(context, effect) {\n    return m => {\n      if (m.group == 'roll' && m.effect == effect) {\n        switch (m.category) {\n          case 'attribute': return [context.attribute1, context.attribute2].includes(m.subCategory);\n          case 'skill': return m.subCategory == context.skill?.system.code;\n          case 'attributeAction': return m.subCategory == context.attributeAction || m.subCategory == AttributeActions.getDefenseAttributeAction(context.defenseAction)\n        }\n      }\n      return false\n    }\n  }\n\n  static computeRollModifiers(items, context, effect) {\n    const contextFilter = Modifiers.buildRollModifiersFilter(context, effect)\n    const filter = m => m.group == 'roll' && m.effect == effect && contextFilter(m)\n\n    const itemModifiers = Modifiers._activeItems(items).map(item => Modifiers.itemModifiers(item, filter))\n      .reduce((a, b) => a.concat(b), [])\n      .sort(Misc.descending(im => im.modifier.value))\n\n    const sumShadowamp = Modifiers.$sumShadowampModifiers(itemModifiers.filter(it => SHADOWAMP_TYPES.includes(it.item.type)).map(im => im.modifier.value))\n    const sumOthers = Misc.sumValues(itemModifiers.filter(it => !SHADOWAMP_TYPES.includes(it.item.type)).map(im => im.modifier.value))\n    return {\n      value: sumShadowamp + sumOthers,\n      sources: itemModifiers\n    }\n  }\n\n  static $sumShadowampModifiers(shadowampModifiers) {\n    const maxPositive = shadowampModifiers.find(v => v > 3) ?? 0\n    const negative = Misc.sumValues(shadowampModifiers.filter(v => v < 0))\n    const positive = Math.min(3, Misc.sumValues(shadowampModifiers.filter(v => v > 0 && v <= 3)))\n    // allow only one item with modifier above 3 that replaces usual max of 3 to positive modifiers (for deltaware option in French rulebook)\n    return negative + Math.max(positive, maxPositive)\n  }\n\n  static computeModifiers(items, group, effect = undefined, category = undefined) {\n    const filter = Modifiers._createFilter(group, effect, category);\n    const itemModifiers = Modifiers._activeItems(items).map(item => Modifiers.itemModifiers(item, filter))\n      .reduce((a, b) => a.concat(b), []);\n    const value = Misc.sumValues(itemModifiers, m => m.modifier.value);\n    return {\n      value: value,\n      sources: itemModifiers\n    }\n  }\n\n  static sumMonitorModifiers(items, monitor, category) {\n    return Modifiers.sumModifiers(Modifiers._activeItems(items), 'monitor', monitor, category);\n  }\n\n  static sumModifiers(items, group, effect, category) {\n    const filter = Modifiers._createFilter(group, effect, category);\n    const itemModifiers = Modifiers._activeItems(items).map(item => Modifiers.itemModifiers(item, filter))\n      .reduce((a, b) => a.concat(b), []);\n\n    return Misc.sumValues(itemModifiers, m => m.modifier.value);\n  }\n\n  static _createFilter(group, effect, category) {\n    return m => m.group == group\n      && m.effect == (effect == undefined ? m.effect : effect)\n      && m.category == (category == undefined ? m.category : category);\n  }\n\n  static countModifiers(items, group, effect = undefined, category = undefined) {\n    const filter = Modifiers._createFilter(group, effect, category);\n    const itemModifiers = Modifiers._activeItems(items).map(item => Modifiers.itemModifiers(item, filter))\n      .reduce((a, b) => a.concat(b), []);\n\n    return itemModifiers.count;\n  }\n\n  static itemModifiers(item, filter) {\n    return Modifiers._listItemModifiers(item, filter).map(m => Modifiers._itemModifier(item, m));\n  }\n\n  static _listItemModifiers(item, filter = m => true) {\n    return (item.system.modifiers ?? []).filter(filter);\n  }\n\n  static _itemModifier(item, modifier) {\n    return {\n      item: item,\n      modifier: modifier\n    };\n  }\n\n  static _activeItems(items) {\n    return items.filter(it => it.isActive());\n  }\n\n}","import { Misc } from \"../misc.js\";\n\n\nconst DICE_FAS_ICONS = {\n  highlighted: ['far fa-times-circle', 'fas fa-dice-one', 'fas fa-dice-two', 'fas fa-dice-three', 'fas fa-dice-four', 'fas fa-dice-five', 'fas fa-dice-six'],\n  dimmed: ['far fa-times-circle', 'far fa-dice-one', 'far fa-dice-two', 'far fa-dice-three', 'far fa-dice-four', 'far fa-dice-five', 'far fa-dice-six'],\n}\n\nexport class DiceCursor {\n  static init() {\n    Hooks.once('ready', async () => await this.onReady());\n    Handlebars.registerHelper('dice-cursor-array', (min, max) => DiceCursor.array(min ?? 0, max ?? 5));\n    Handlebars.registerHelper('dice-cursor-fas', (dice, value) => DiceCursor.fasClass(dice, value));\n    Handlebars.registerHelper('dice-cursor-active', (dice, value) => DiceCursor.activeClass(dice, value));\n    Handlebars.registerHelper('dice-cursor-color', (dice, editable) => DiceCursor.colorClass(dice, editable));\n  }\n\n  static async onReady() {\n    await loadTemplates([\n      'systems/anarchy/templates/roll/parts/dice-cursor.hbs',\n    ]);\n  }\n\n  static array(min, max) {\n    if (min > max) throw `min>max: ${min} > ${max}`\n    return Array(max - min + 1).fill().map((item, index) => min + index)\n  }\n\n  static isActive(dice, value) {\n    return (value <= dice && dice < 0) || (0 < dice && dice <= value);\n  }\n\n  static activeClass(dice, value) {\n    return DiceCursor.isActive(dice, value) ? 'active' : 'inactive';\n  }\n\n  static fasClass(dice, value) {\n    const fasSource = DiceCursor.isActive(dice, value) ? DICE_FAS_ICONS.highlighted : DICE_FAS_ICONS.dimmed;\n    return DiceCursor.$getFas(fasSource, Math.abs(dice));\n    return fas;\n  }\n\n  static colorClass(dice, editable) {\n    if (dice == 0 || !editable) {\n      return dice < 0 ? 'fixed-dice-malus' : 'fixed-dice-bonus';\n    }\n    return dice < 0 ? 'variable-dice-malus' : 'variable-dice-bonus';\n  }\n\n  static $getFas(fasArray, dice) {\n    return fasArray[dice > 6 ? dice % 6 : dice];\n  }\n\n  static async diceCursor({ value, min, max, editable }) {\n    return await renderTemplate('systems/anarchy/templates/roll/parts/dice-cursor.hbs', {\n      value, min, max, editable\n    })\n  }\n}","\nexport class CharacterActorEssence {\n  static getMalus(actor, essence) {\n    const max = 6;\n    const malus = Math.min(0, -Math.floor((1 + max - essence) / 2));\n    return malus\n  }\n}\n","import { CharacterActorEssence } from \"./actor/character-actor-essence.js\";\nimport { CHECKBARS, Checkbars } from \"./common/checkbars.js\";\nimport { ANARCHY } from \"./config.js\";\nimport { LOG_HEAD, SYSTEM_NAME } from \"./constants.js\";\n\nexport const ANARCHY_HOOKS = {\n  /**\n   * Hook to declare template data migrations\n   */\n  DECLARE_MIGRATIONS: 'anarchy-declareMigration',\n  /**\n   * Hook used to declare additional styles available\n   */\n  REGISTER_STYLES: 'anarchy-registerStyles',\n  /**\n   * Hook allowing to register additional roll parameters\n   */\n  REGISTER_ROLL_PARAMETERS: 'anarchy-registerRollParameters',\n  /**\n   * Hook allowing to modify some parameters (from Anarchy hacks modules).\n   * Setting property ignore=true allows to remove the parameter.\n   */\n  MODIFY_ROLL_PARAMETER: 'anarchy-forbidRollParameter',\n  /**\n   * Hook allowing to provide alternate skill sets for Anarchy hack modules\n   */\n  PROVIDE_SKILL_SET: 'anarchy-provideSkillSet',\n  /**\n   * Hook allowing to provide alternate way to apply damages for Anarchy hack modules\n   */\n  PROVIDE_DAMAGE_MODE: 'anarchy-provideDamageMode',\n  /**\n   * Hook allowing to define base essence\n   */\n  PROVIDE_BASE_ESSENCE: 'anarchy-provideBaseEssence',\n  /**\n   * Hook allowing to define base essence\n   */\n  PROVIDE_MALUS_ESSENCE: 'anarchy-provideMalusEssence',\n  /**\n   * Hook allowing to provide alternate anarchy hack (TODO: document)\n   */\n  ANARCHY_HACK: 'anarchy-hack',\n}\n\nconst SETTING_KEY_ANARCHY_HACK = `${SYSTEM_NAME}.${ANARCHY_HOOKS.ANARCHY_HACK}`;\n\nconst SHADOWRUN_ANARCHY_NO_HACK = {\n  id: SYSTEM_NAME,\n  name: 'Standard Shadowrun Anarchy',\n  hack: {\n    checkbars: () => CHECKBARS\n  }\n};\n\n// export hooks and settings for JS hacks\nglobalThis.ANARCHY_HOOKS = ANARCHY_HOOKS;\nglobalThis.SETTING_KEY_ANARCHY_HACK = SETTING_KEY_ANARCHY_HACK;\nglobalThis.SHADOWRUN_ANARCHY_NO_HACK = SHADOWRUN_ANARCHY_NO_HACK;\n\nexport class HooksManager {\n\n  constructor() {\n    this.hooks = [];\n    this.hacks = {};\n    this.hackNames = {};\n    this.hookMethods = {}\n    this._register(ANARCHY_HOOKS.ANARCHY_HACK);\n    this._register(ANARCHY_HOOKS.PROVIDE_BASE_ESSENCE);\n    Hooks.on(ANARCHY_HOOKS.ANARCHY_HACK, register => register(SHADOWRUN_ANARCHY_NO_HACK));\n    Hooks.on(ANARCHY_HOOKS.PROVIDE_BASE_ESSENCE, provide => provide(SHADOWRUN_ANARCHY_NO_HACK, actor => 6));\n    Hooks.on(ANARCHY_HOOKS.PROVIDE_MALUS_ESSENCE, provide => provide(SHADOWRUN_ANARCHY_NO_HACK, (actor, essence) => CharacterActorEssence.getMalus(actor, essence)));\n    Hooks.on('updateSetting', async (setting, update, options, id) => this.onUpdateSetting(setting, update, options, id));\n    Hooks.once('ready', () => this.onReady());\n  }\n\n  async onReady() {\n    Hooks.callAll(ANARCHY_HOOKS.ANARCHY_HACK, (hack) => {\n      this.hacks[hack.id] = hack;\n      this.hackNames[hack.id] = hack.name;\n    });\n    game.settings.register(SYSTEM_NAME, ANARCHY_HOOKS.ANARCHY_HACK, {\n      scope: \"world\",\n      name: game.i18n.localize(ANARCHY.settings.anarchyHack.name),\n      hint: game.i18n.localize(ANARCHY.settings.anarchyHack.hint),\n      config: true,\n      default: SHADOWRUN_ANARCHY_NO_HACK.id,\n      choices: this.hackNames,\n      type: String\n    });\n    this.applySelectedAnarchyHack();\n  }\n\n  async onUpdateSetting(setting, update, options, id) {\n    if (setting.key == SETTING_KEY_ANARCHY_HACK) {\n      this.applySelectedAnarchyHack();\n    }\n  }\n\n  applySelectedAnarchyHack() {\n    const selectedHack = this.getSelectedHack();\n    if (selectedHack) {\n      Checkbars.hackCheckbars(selectedHack.hack.checkbars());\n      const overridableMethods = [\n        ANARCHY_HOOKS.PROVIDE_BASE_ESSENCE,\n        ANARCHY_HOOKS.PROVIDE_MALUS_ESSENCE\n      ];\n      overridableMethods.forEach(hookMethod => this.selectHookMethod(selectedHack, hookMethod))\n    }\n  }\n\n  selectHookMethod(selectedHack, hookMethod) {\n    Hooks.callAll(hookMethod, (hack, callback) => {\n      if (hack == selectedHack) {\n        this.hookMethods[hookMethod] = callback\n      }\n    });\n  }\n\n  getSelectedHack() {\n    return this.hacks[game.settings.get(SYSTEM_NAME, ANARCHY_HOOKS.ANARCHY_HACK)];\n  }\n\n  getHookMethod(hookMethod, fallback) {\n    return this.hookMethods[hookMethod] ?? fallback;\n  }\n\n  callHookMethod(hookMethod, ...args) {\n    const method = this.hookMethods[hookMethod];\n    return method ? method(...args) : undefined;\n  }\n\n  static instance() {\n    return game.system.anarchy.hooks;\n  }\n\n  static register(name) {\n    HooksManager.instance()._register(name);\n  }\n\n  _register(name) {\n    console.log(LOG_HEAD + 'HooksManager.register', name);\n    if (!name.startsWith(SYSTEM_NAME + '-')) {\n      throw \"For safety Anarchy Hooks names must be prefixed by anarchy'-'\"\n    }\n    this.hooks.push(name);\n  }\n\n}","import { ANARCHY } from \"../config.js\";\nimport { ANARCHY_SYSTEM, LOG_HEAD, TEMPLATE, TEMPLATES_PATH } from \"../constants.js\";\nimport { Enums } from \"../enums.js\";\nimport { ANARCHY_HOOKS, HooksManager } from \"../hooks-manager.js\";\nimport { MATRIX } from \"../matrix-helper.js\";\nimport { Misc } from \"../misc.js\";\nimport { Modifiers } from \"../modifiers/modifiers.js\";\n\nexport const ROLL_PARAMETER_CATEGORY = {\n  title: 'title',\n  pool: 'pool',\n  reroll: 'reroll',\n  rerollForced: 'rerollForced',\n  successReroll: 'successReroll',\n  glitch: 'glitch',\n  drain: 'drain',\n  convergence: 'convergence',\n  edge: 'edge',\n  risk: 'risk',\n  opponentPool: 'opponentPool',\n  opponentReroll: 'opponentReroll'\n}\n\nconst DEFAULT_ROLL_PARAMETERS = [\n  // attribute1\n  {\n    code: 'attribute1',\n    options: {\n      order: 1, category: ROLL_PARAMETER_CATEGORY.pool,\n      hbsTemplateRoll: `${TEMPLATES_PATH}/roll/parts/select-attribute.hbs`,\n    },\n    condition: context => Object.values(ANARCHY_SYSTEM.rollType).includes(context.mode),\n    isUsed: (p) => true,\n    factory: context => {\n      const attribute = context.attribute1 ?? context.skill?.system.attribute;\n      return {\n        labelkey: attribute ? ANARCHY.attributes[attribute] : ANARCHY.attributes.noAttributes,\n        value: context.actor.getAttributeValue(attribute, context.activeItem),\n        flags: { editable: context.skill },\n        selected: attribute,\n        choices: Enums.getAttributes(it => context.attributes.includes(it))\n      }\n    }\n  },\n\n  // attribute2\n  {\n    code: 'attribute2',\n    options: {\n      order: 1, category: ROLL_PARAMETER_CATEGORY.pool,\n      hbsTemplateRoll: `${TEMPLATES_PATH}/roll/parts/select-attribute.hbs`,\n      hbsTemplateChat: `${TEMPLATES_PATH}/chat/parts/pool-attribute2.hbs`,\n    },\n    condition: context => [ANARCHY_SYSTEM.rollType.attribute, ANARCHY_SYSTEM.rollType.attributeAction, ANARCHY_SYSTEM.rollType.defense].includes(context.mode),\n    isUsed: (p) => p.used,\n    onChecked: (p, selected) => p.used = selected ? true : false,\n    factory: context => {\n      const attribute = context.attribute2\n      return {\n        labelkey: attribute ? ANARCHY.attributes[attribute] : ANARCHY.attributes.noAttributes,\n        value: context.actor.getAttributeValue(attribute, context.activeItem),\n        flags: { editable: ANARCHY_SYSTEM.rollType.attribute == context.mode },\n        selected: attribute,\n        choices: Enums.getAttributes(it => context.attributes.includes(it))\n      };\n    }\n  },\n\n  // skill\n  {\n    code: 'skill',\n    options: {\n      flags: {},\n      order: 3, category: ROLL_PARAMETER_CATEGORY.pool,\n      hbsTemplateRoll: `${TEMPLATES_PATH}/roll/parts/input-numeric.hbs`,\n    },\n    condition: context => ['skill', 'weapon'].includes(context.mode),\n    factory: context => {\n      return {\n        label: context.skill?.name,\n        value: context.skill?.system.value ?? 0,\n      };\n    }\n  },\n  // specialization\n  {\n    code: 'specialization',\n    options: {\n      flags: { optional: true, },\n      value: 2,\n      order: 4, category: ROLL_PARAMETER_CATEGORY.pool,\n      hbsTemplateRoll: `${TEMPLATES_PATH}/roll/parts/check-option.hbs`,\n    },\n    isUsed: (p) => p.used,\n    condition: context => (context.mode == 'skill' && context.specialization)\n      || (context.mode == 'weapon' && context.skill?.system.specialization),\n    onChecked: (p, checked) => {\n      p.used = checked;\n      p.value = checked ? 2 : 0;\n    },\n    factory: context => {\n      return {\n        label: context.specialization ?? context.skill.system.specialization,\n        used: context.specialization != undefined,\n        value: 2\n      }\n    }\n  },\n  // credibility usage\n  {\n    code: 'credibility',\n    options: {\n      flags: { editDice: true, editable: true },\n      order: 5, category: ROLL_PARAMETER_CATEGORY.pool,\n      value: 0,\n      labelkey: ANARCHY.common.roll.modifiers.social.credibility,\n      hbsTemplateRoll: `${TEMPLATES_PATH}/roll/parts/input-numeric.hbs`,\n    },\n    condition: context => context.skill?.system.isSocial && context.actor.getCredibilityValue() > 0,\n    factory: context => {\n      return {\n        min: 0,\n        max: Math.min(context.actor.getCredibilityValue(), 3),\n      }\n    }\n  },\n  // modifiers bonus\n  {\n    code: 'poolModifiers',\n    options: {\n      flags: { editDice: true, editable: true, },\n      labelkey: ANARCHY.common.roll.modifiers.poolModifiers,\n      order: 5, category: ROLL_PARAMETER_CATEGORY.pool,\n      hbsTemplateRoll: `${TEMPLATES_PATH}/roll/parts/input-numeric.hbs`,\n      min: -4, max: 4\n    },\n    factory: context => RollParameters.computeRollModifiers(ROLL_PARAMETER_CATEGORY.pool, context)\n  },\n  // wounds\n  {\n    code: 'wounds',\n    options: {\n      flags: { optional: true, },\n      order: 10, category: ROLL_PARAMETER_CATEGORY.pool,\n      labelkey: ANARCHY.common.roll.modifiers.wounds,\n      hbsTemplateRoll: `${TEMPLATES_PATH}/roll/parts/input-numeric.hbs`,\n    },\n    isUsed: (p) => p.used,\n    condition: context => context.actor.getWounds(),\n    onChecked: (p, checked) => {\n      p.used = checked\n      p.value = checked ? - p.wounds : 0\n    },\n    factory: context => {\n      const wounds = context.actor.getWounds();\n      return {\n        wounds: wounds,\n        min: - wounds, max: 0,\n        value: - wounds,\n        used: true,\n      }\n    }\n  },\n  // modifier for deckers/technomancers connected in virtual reality\n  {\n    code: 'virtualReality',\n    options: {\n      flags: { editDice: false, editable: false },\n      order: 24, category: ROLL_PARAMETER_CATEGORY.pool,\n      value: 1,\n      labelkey: ANARCHY.common.roll.modifiers.virtualReality,\n      hbsTemplateRoll: `${TEMPLATES_PATH}/roll/parts/input-numeric.hbs`,\n      min: 1, max: 1,\n    },\n    condition: context => context.actor.isMatrixSkill(context.skill) && context.actor.isMatrixConnected(MATRIX.connectionMode.virtual),\n    factory: context => {\n      return {\n        flags: { used: context.actor.isMatrixSkill(context.skill) && context.actor.isMatrixConnected(MATRIX.connectionMode.virtual) },\n      }\n    }\n  },\n  // other modifiers\n  {\n    code: 'other',\n    options: {\n      flags: { editDice: true, editable: true },\n      order: 25, category: ROLL_PARAMETER_CATEGORY.pool,\n      value: 0,\n      labelkey: ANARCHY.common.roll.modifiers.other,\n      hbsTemplateRoll: `${TEMPLATES_PATH}/roll/parts/input-numeric.hbs`,\n      min: -5, max: 5\n    }\n  },\n  // Drain\n  {\n    code: 'drain',\n    options: {\n      flags: { editDice: true, editable: true, forceDisplay: true, },\n      order: 40, category: ROLL_PARAMETER_CATEGORY.drain,\n      labelkey: ANARCHY.common.roll.modifiers.drain,\n      hbsTemplateRoll: `${TEMPLATES_PATH}/roll/parts/input-numeric.hbs`,\n      min: 0, max: 6\n    },\n    condition: context => (context.mode == 'skill' || context.mode == 'weapon') && context.skill?.system.hasDrain,\n    factory: context => {\n      return {\n        value: context.mode == 'weapon' && context.weapon.hasDrain ? context.weapon.system.drain : 1\n      }\n    }\n  },\n  // convergence\n  {\n    code: 'convergence',\n    options: {\n      flags: { editDice: false, optional: true, used: true, hideParameter: true },\n      order: 40, category: ROLL_PARAMETER_CATEGORY.convergence,\n      value: 1,\n      labelkey: ANARCHY.common.roll.modifiers.convergence,\n      hbsTemplateRoll: `${TEMPLATES_PATH}/roll/parts/check-option.hbs`\n    },\n    isUsed: (p) => p.used,\n    condition: context => (context.mode == 'skill' || context.mode == 'weapon') && context.skill?.system.hasConvergence,\n    onChecked: (p, checked) => {\n      p.used = checked;\n      p.value = checked ? 1 : 0;\n    },\n  },\n  // glitch\n  {\n    code: 'glitch',\n    options: {\n      flags: { editDice: true, editable: true, forceDisplay: true, },\n      order: 50, category: ROLL_PARAMETER_CATEGORY.glitch,\n      labelkey: ANARCHY.common.roll.modifiers.glitch,\n      hbsTemplateRoll: `${TEMPLATES_PATH}/roll/parts/input-numeric.hbs`,\n      hbsTemplateChat: `${TEMPLATES_PATH}/chat/parts/glitch.hbs`,\n      min: 0, max: 5\n    },\n    isUsed: (p) => p.value > 0,\n    factory: context => {\n      const wounds = context.actor.getWounds();\n      const glitchModifiers = RollParameters.computeRollModifiers(ROLL_PARAMETER_CATEGORY.glitch, context);\n      return {\n        value: (wounds == 0 ? 0 : 1) + (context.glitch ?? 0) + glitchModifiers.value,\n      }\n    }\n  },\n  // social rumor\n  {\n    code: 'rumor',\n    options: {\n      flags: { editDice: true, editable: true },\n      order: 50, category: ROLL_PARAMETER_CATEGORY.glitch,\n      value: 0,\n      labelkey: ANARCHY.common.roll.modifiers.social.rumor,\n      hbsTemplateRoll: `${TEMPLATES_PATH}/roll/parts/input-numeric.hbs`,\n      hbsTemplateChat: `${TEMPLATES_PATH}/chat/parts/glitch.hbs`,\n      min: 0, max: 1,\n    },\n    condition: context => context.skill?.system.isSocial && context.actor.getRumorValue() > 0\n  },\n  // rerolls\n  {\n    code: 'reroll',\n    options: {\n      flags: { editDice: true, editable: true, },\n      order: 30, category: ROLL_PARAMETER_CATEGORY.reroll,\n      labelkey: ANARCHY.common.roll.modifiers.reroll,\n      hbsTemplateRoll: `${TEMPLATES_PATH}/roll/parts/input-numeric.hbs`,\n      min: 0, max: 4\n    },\n    factory: context => RollParameters.computeRollModifiers(ROLL_PARAMETER_CATEGORY.reroll, context)\n  },\n  // reduction from opponent\n  {\n    code: 'reduced',\n    options: {\n      order: 29, category: ROLL_PARAMETER_CATEGORY.pool,\n      labelkey: ANARCHY.common.roll.modifiers.reduced,\n      hbsTemplateRoll: `${TEMPLATES_PATH}/roll/parts/input-numeric.hbs`,\n      min: -4, max: 0\n    },\n    condition: context => (context.attackRoll?.param.opponentPool ?? 0) != 0,\n    factory: context => {\n      const reduced = -(context.attackRoll?.param.opponentPool ?? 0);\n      return {\n        flags: { editDice: true, used: true },\n        value: reduced,\n      }\n    }\n  },\n  // forced success rerolls\n  {\n    code: 'rerollForced',\n    options: {\n      order: 31, category: ROLL_PARAMETER_CATEGORY.rerollForced,\n      labelkey: ANARCHY.common.roll.modifiers.rerollForced,\n      hbsTemplateRoll: `${TEMPLATES_PATH}/roll/parts/input-numeric.hbs`,\n      min: -5, max: 0\n    },\n    factory: context => {\n      const rerollForced = RollParameters.computeRollModifiers(ROLL_PARAMETER_CATEGORY.successReroll, context);\n      rerollForced.value = -rerollForced.value - (context.attackRoll?.param.opponentReroll ?? 0);\n      return foundry.utils.mergeObject(rerollForced, {\n        flags: { editDice: true, used: true, editable: true },\n      });\n    }\n  },\n  // anarchy dispositions\n  {\n    code: 'anarchyDisposition',\n    options: {\n      flags: { optional: true, isAnarchy: true, forceDisplay: true, },\n      order: 70, category: ROLL_PARAMETER_CATEGORY.pool,\n      value: 0,\n      min: 0, max: 3,\n      labelkey: ANARCHY.common.roll.modifiers.anarchyDisposition,\n      hbsTemplateRoll: `${TEMPLATES_PATH}/roll/parts/check-option.hbs`,\n    },\n    isUsed: (p) => p.used,\n    condition: context => context.actor.getAnarchyValue() > 0,\n    onChecked: (p, checked) => {\n      p.used = checked;\n      p.value = checked ? 3 : 0;\n    },\n  },\n  // anarchy take risks\n  {\n    code: 'anarchyRisk',\n    options: {\n      flags: { optional: true, isAnarchy: true, forceDisplay: true, },\n      order: 70, category: ROLL_PARAMETER_CATEGORY.risk,\n      value: 0,\n      labelkey: ANARCHY.common.roll.modifiers.anarchyRisk,\n      hbsTemplateRoll: `${TEMPLATES_PATH}/roll/parts/check-option.hbs`,\n      hbsTemplateChat: `${TEMPLATES_PATH}/chat/parts/anarchy-risk.hbs`,\n    },\n    isUsed: (p) => p.used,\n    condition: context => context.actor.getAnarchyValue() > 0,\n    onChecked: (p, checked) => {\n      p.used = checked;\n      p.value = checked ? 1 : 0;\n    },\n  },\n  // edge\n  {\n    code: 'edge',\n    options: {\n      flags: { optional: true, forceDisplay: true, },\n      value: 0,\n      order: 70, category: ROLL_PARAMETER_CATEGORY.edge,\n      labelkey: ANARCHY.common.roll.modifiers.edge,\n      hbsTemplateRoll: `${TEMPLATES_PATH}/roll/parts/check-option.hbs`,\n    },\n    isUsed: (p) => p.used,\n    condition: context => context.options.canUseEdge && context.actor.getRemainingEdge(),\n    onChecked: (p, checked) => {\n      p.used = checked;\n      p.value = checked ? 1 : 0;\n    },\n  },\n  // reduce opponent pool\n  {\n    code: 'opponentPool',\n    options: {\n      flags: { editDice: true, editable: true, forceDisplay: true, },\n      order: 100, category: ROLL_PARAMETER_CATEGORY.opponentPool,\n      labelkey: ANARCHY.common.roll.modifiers.opponentPool,\n      hbsTemplateRoll: `${TEMPLATES_PATH}/roll/parts/input-numeric.hbs`,\n      min: 0, max: 4\n    },\n    factory: context => RollParameters.computeRollModifiers(ROLL_PARAMETER_CATEGORY.opponentPool, context),\n    condition: context => !context.attributeAction\n  },\n  // force opponent rerolls\n  {\n    code: 'opponentReroll',\n    options: {\n      flags: { editDice: true, editable: true, forceDisplay: true, },\n      order: 100, category: ROLL_PARAMETER_CATEGORY.opponentReroll,\n      value: 0,\n      labelkey: ANARCHY.common.roll.modifiers.opponentReroll,\n      hbsTemplateRoll: `${TEMPLATES_PATH}/roll/parts/input-numeric.hbs`,\n      min: 0, max: 4\n    },\n    factory: context => RollParameters.computeRollModifiers(ROLL_PARAMETER_CATEGORY.opponentReroll, context),\n    condition: context => !context.attributeAction\n  },\n\n]\n\nexport class RollParameters {\n  constructor() {\n    this.registeredParameters = {};\n    HooksManager.register(ANARCHY_HOOKS.REGISTER_ROLL_PARAMETERS);\n    HooksManager.register(ANARCHY_HOOKS.MODIFY_ROLL_PARAMETER);\n    Hooks.on(ANARCHY_HOOKS.MODIFY_ROLL_PARAMETER, p => this._validate(p));\n    Hooks.once(ANARCHY_HOOKS.REGISTER_ROLL_PARAMETERS, register => DEFAULT_ROLL_PARAMETERS.forEach(\n      parameter => register(parameter)\n    ));\n    Hooks.once('ready', () => this.onReady());\n  }\n\n  async onReady() {\n    Hooks.callAll(ANARCHY_HOOKS.REGISTER_ROLL_PARAMETERS, async rollParameter => {\n      Hooks.callAll(ANARCHY_HOOKS.MODIFY_ROLL_PARAMETER, rollParameter);\n      if (!rollParameter.ignore) {\n        await this._register(rollParameter);\n      }\n    });\n    const templates = Misc.distinct([]\n      .concat(Object.values(this.registeredParameters).map(p => p.options.hbsTemplateRoll))\n      .concat(Object.values(this.registeredParameters).map(p => p.options.hbsTemplateChat))\n      .filter(it => it != undefined));\n    await loadTemplates(Misc.distinct(templates));\n    await loadTemplates([`${TEMPLATES_PATH}/roll/parts/parameter-label.hbs`]);\n  }\n\n  _validate(parameter) {\n    if (!parameter.code) {\n      console.error(`${LOG_HEAD} RollParameter does not have a code`, parameter);\n      parameter.ignore = true;\n    }\n  }\n\n  async _register(parameter) {\n    if (this.registeredParameters[parameter.code]) {\n      console.error(`${LOG_HEAD} RollParameter ${parameter.code} is already registered`, parameter);\n      return;\n    }\n\n    if (!parameter.onChecked) {\n      parameter.onChecked = (p, checked) => p.used = checked;\n    }\n    parameter.onValue = (p, value) => p.value = value;\n    this.registeredParameters[parameter.code] = parameter;\n  }\n\n  async _optionalLoadTemplate(hbsTemplate) {\n    if (hbsTemplate) {\n      await loadTemplates([hbsTemplate]);\n    }\n  }\n\n  build(context) {\n    return Object.values(this.registeredParameters)\n      .filter(p => !p.condition || p.condition(context))\n      .map(p => this._computeParameter(p, context));\n  }\n\n  compute(parameters) {\n    const actual = parameters.filter(it => this.isParameterUsed(it));\n    const byCategory = Misc.classify(actual, it => it.category);\n    const sums = {}\n    Object.values(byCategory)\n      .forEach(list => sums[list[0].category] = Misc.sumValues(list, it => it.value ?? (it.optional ? 1 : 0)));\n    return sums;\n  }\n\n  isParameterUsed(it) {\n    const registeredParameter = this.findParameter(it.code);\n    if (registeredParameter?.isUsed != undefined) {\n      return registeredParameter.isUsed(it);\n    }\n    if (it.value != undefined) {\n      return it.value != 0\n    }\n    console.error(`registered parameter ${registeredParameter.code} does not have isUsed method`, registeredParameter)\n    return false\n  }\n\n  findParameter(code) {\n    return this.registeredParameters[code];\n  }\n\n  _computeParameter(param, context) {\n    const computed = {\n      code: param.code,\n      onChecked: param.onChecked,\n      onValue: param.onValue,\n      isUsed: param.isUsed\n    };\n    foundry.utils.mergeObject(computed, param.options);\n    if (param.factory) {\n      foundry.utils.mergeObject(computed, param.factory(context, param.options));\n    }\n    foundry.utils.mergeObject(computed, {\n      used: computed.used || computed.value,\n      min: computed.min ?? 0,\n      max: computed.max ?? computed.value ?? 0\n    })\n\n    return computed;\n  }\n\n  static computeRollModifiers(effect, context) {\n    const itemsFilter = it => it.type != TEMPLATE.itemType.weapon || (context.weapon && it.id == context.weapon.id)\n    const items = context.actor.items.filter(itemsFilter)\n    return Modifiers.computeRollModifiers(items, context, effect);\n  }\n\n}\n","import { ANARCHY } from \"../config.js\";\nimport { ANARCHY_SYSTEM, TEMPLATE, TEMPLATES_PATH } from \"../constants.js\";\nimport { Enums } from \"../enums.js\";\nimport { Misc } from \"../misc.js\";\nimport { DiceCursor } from \"./dice-cursor.js\";\nimport { ROLL_PARAMETER_CATEGORY } from \"./roll-parameters.js\";\n\n/**\n * Extend the base Dialog to select roll parameters\n * @extends {Dialog}\n */\nexport class RollDialog extends Dialog {\n\n  static init() {\n    Hooks.once('ready', async () => await this.onReady());\n  }\n\n  static async onReady() {\n    await loadTemplates([\n      'systems/anarchy/templates/roll/roll-parameters-category.hbs',\n      'systems/anarchy/templates/roll/parts/generic.hbs',\n      'systems/anarchy/templates/roll/parts/image-attribute.hbs',\n      'systems/anarchy/templates/roll/parts/image-attributeAction.hbs',\n      'systems/anarchy/templates/roll/parts/image-defense.hbs',\n      'systems/anarchy/templates/roll/parts/image-skill.hbs',\n      'systems/anarchy/templates/roll/parts/image-weapon.hbs',\n    ]);\n  }\n\n  static prepareActorRoll(actor, item = undefined) {\n    return {\n      actor: actor,\n      tokenId: actor.token?.id,\n      attributes: actor.getUsableAttributes(item),\n      options: {\n        canUseEdge: actor.canUseEdge()\n      }\n    }\n  }\n\n  static async rollAttribute(actor, attribute) {\n    const rollData = foundry.utils.mergeObject(RollDialog.prepareActorRoll(actor), {\n      mode: ANARCHY_SYSTEM.rollType.attribute,\n      attribute1: attribute\n    });\n    await RollDialog.create(rollData);\n  }\n\n  static async rollAttributeAction(actor, action) {\n    const rollData = foundry.utils.mergeObject(RollDialog.prepareActorRoll(actor), {\n      mode: ANARCHY_SYSTEM.rollType.attributeAction,\n      attributeAction: action.code,\n      attribute1: action.attributeFunction1(actor),\n      attribute2: action.attributeFunction2(actor),\n    });\n    await RollDialog.create(rollData);\n  }\n\n  static async rollAttribute(actor, attribute) {\n    const rollData = foundry.utils.mergeObject(RollDialog.prepareActorRoll(actor), {\n      mode: ANARCHY_SYSTEM.rollType.attribute,\n      attribute1: attribute\n    });\n    await RollDialog.create(rollData);\n  }\n\n  static async rollSkill(actor, skill, specialization) {\n    const rollData = foundry.utils.mergeObject(RollDialog.prepareActorRoll(actor), {\n      mode: ANARCHY_SYSTEM.rollType.skill,\n      skill: skill,\n      attribute1: skill?.system.attribute ?? TEMPLATE.attributes.agility,\n      specialization: specialization,\n    });\n    await RollDialog.create(rollData);\n  }\n\n  static async rollWeapon(actor, skill, weapon, targeting) {\n    const rollData = foundry.utils.mergeObject(RollDialog.prepareActorRoll(actor), {\n      mode: ANARCHY_SYSTEM.rollType.weapon,\n      weapon: weapon,\n      skill: skill,\n      attribute1: skill?.system.attribute ?? actor.getPhysicalAgility(),\n      specialization: skill?.system.specialization,\n      targeting: targeting\n    });\n    await RollDialog.create(rollData);\n  }\n\n  static async rollDefense(actor, action, attack, pilot = undefined) {\n    const rollData = foundry.utils.mergeObject(RollDialog.prepareActorRoll(actor), {\n      mode: ANARCHY_SYSTEM.rollType.defense,\n      attribute1: action.attributeFunction1(actor),\n      attribute2: action.attributeFunction2(actor),\n      defenseAction: action.code,\n      attackRoll: attack.attackRoll,\n      tokenId: attack.defenderTokenId,\n      choiceChatMessageId: attack.choiceChatMessageId,\n    });\n    await RollDialog.create(rollData);\n  }\n\n  static async itemAttributeRoll(item, attribute) {\n    const rollData = foundry.utils.mergeObject(RollDialog.prepareActorRoll(item.actor), {\n      mode: ANARCHY_SYSTEM.rollType.attribute,\n      item: item,\n      attribute1: attribute,\n      attributes: item.actor.getUsableAttributes(item)\n    });\n    await RollDialog.create(rollData);\n  }\n\n  static async create(roll) {\n    const rollParameters = game.system.anarchy.rollParameters.build(roll).sort(Misc.ascending(p => p.order ?? 200));\n    foundry.utils.mergeObject(roll, {\n      ENUMS: Enums.getEnums(attributeName => roll.attributes.includes(attributeName)),\n      ANARCHY: ANARCHY,\n      parameters: rollParameters\n    });\n\n    const title = await renderTemplate(`${TEMPLATES_PATH}/roll/roll-dialog-title.hbs`, roll);\n    const html = await renderTemplate(`${TEMPLATES_PATH}/roll/roll-dialog.hbs`, roll);\n    new RollDialog(title, html, roll).render(true);\n  }\n\n\n  constructor(title, html, roll) {\n    const config = {\n      title: title,\n      content: html,\n      default: 'roll',\n      buttons: {\n        'roll': {\n          label: game.i18n.localize(ANARCHY.common.roll.button),\n          callback: async () => await game.system.anarchy.rollManager.roll(roll)\n        }\n      },\n    };\n    const options = {\n      classes: [game.system.anarchy.styles.selectCssClass(), \"anarchy-dialog\"],\n      width: 500,\n      height: 'fit-content',\n      'z-index': 99999,\n    };\n\n    super(config, options);\n\n    this.roll = roll;\n  }\n\n  activateListeners(html) {\n    super.activateListeners(html);\n    this.html = html\n    this.bringToTop();\n\n    this.html.find('.select-attribute-parameter').change(async event => {\n      const parameter = this._getRollParameter(event);\n      const item = this._getEventItem(event, this.roll.actor);\n      const selected = event.currentTarget.value;\n      const value = this.roll.actor.getAttributeValue(selected, item);\n      this.roll[parameter.code] = selected;\n      await this._setParameterSelectedOption(parameter, selected, value);\n    });\n\n    this.html.find('.check-optional').click(async event => {\n      const parameter = this._getRollParameter(event);\n      parameter.onChecked(parameter, event.currentTarget.checked);\n      if (parameter.category == ROLL_PARAMETER_CATEGORY.pool) {\n        await this._updateParameterValue(parameter, parameter.value)\n      }\n    });\n\n    this.activateDiceParameterClick();\n\n    this.html.find('input.parameter-value:not(:disabled)').on('input', async event => {\n      const parameter = this._getRollParameter(event);\n      const value = Number.parseInt(event.currentTarget.value) ?? 0;\n      await this._updateParameterValue(parameter, value);\n    });\n\n    this.html.find('.select-option-parameter').change(async event => {\n      const parameter = this._getRollParameter(event);\n      const selected = event.currentTarget.value;\n      const value = Number.parseInt(selected);\n      await this._setParameterSelectedOption(parameter, selected, value);\n    });\n  }\n\n  activateDiceParameterClick() {\n    this.html.find('.input-cursor-parameter a').click(async (event) => {\n      const parameter = this._getRollParameter(event);\n      if (parameter.flags?.editDice) {\n        const clickedValue = Number.parseInt(this.html.find(event.currentTarget).attr('data-dice')) ?? 0;\n        const value = (parameter.value != clickedValue || clickedValue == 0)\n          ? clickedValue\n          : (clickedValue > 0 ? clickedValue - 1 : clickedValue + 1)\n        await this._updateParameterValue(parameter, value);\n      }\n    });\n  }\n\n  async _setParameterSelectedOption(parameter, selected, value) {\n    parameter.onChecked(parameter, selected);\n    parameter.max = value;\n    await this._updateParameterValue(parameter, value);\n  }\n\n  async _updateParameterValue(parameter, value) {\n    parameter.onValue(parameter, value);\n\n    this.html.find(`.parameter[data-parameter-code='${parameter.code}'] .parameter-value`)\n      .text(value);\n\n    const diceCursorHtml = await this.renderDiceCursor(parameter);\n    const diceCursor = this.html.find(`.parameter[data-parameter-code='${parameter.code}'] .input-cursor-parameter`);\n    diceCursor\n      .empty()\n      .append(diceCursorHtml);\n    this.activateDiceParameterClick();\n\n    const inputs = this.html.find(`.parameter[data-parameter-code='${parameter.code}'] input.parameter-value`);\n    inputs.val(parameter.value);\n  }\n\n  async renderDiceCursor(parameter) {\n    return await DiceCursor.diceCursor({ value: parameter.value, min: parameter.min, max: parameter.max, editable: parameter.flags?.editDice });\n  }\n\n  _getSelectedOption(parameter) {\n    return this.html.find(`.parameter[data-parameter-code='${parameter.code}'] select.select-option-parameter option:selected`)\n      .text();\n  }\n\n  _getEventItem(event, actor) {\n    const itemId = this.html.find(event.currentTarget).closest('.parameter').attr('data-item-id');\n    return itemId ? actor.items.get(itemId) : undefined;\n  }\n\n  _getRollParameter(event) {\n    const code = this.html.find(event.currentTarget).closest('.parameter').attr('data-parameter-code');\n    return this.roll.parameters.find(it => it.code == code);\n  }\n}","import { ANARCHY } from \"./config.js\";\nimport { ANARCHY_SYSTEM, ICONS_SKILLS_PATH, SYSTEM_NAME, SYSTEM_PATH, TEMPLATE } from \"./constants.js\";\nimport { ANARCHY_HOOKS, HooksManager } from \"./hooks-manager.js\";\nimport { Misc } from \"./misc.js\";\n\nconst SELECTED_SKILL_LIST = \"selected-skill-list\";\nconst SETTING_KEY_SELECTED_SKILL_LIST = `${SYSTEM_NAME}.${SELECTED_SKILL_LIST}`;\n\nconst ATTR = TEMPLATE.attributes;\nconst DEFENSE = ANARCHY_SYSTEM.defenses;\n\nconst DEFAULT_SKILLSET_ANARCHY = 'shadowrun-anarchy-en';\nconst KNOWLEDGE = { code: 'knowledge', attribute: ATTR.knowledge, icon: `${ICONS_SKILLS_PATH}/knowledge.svg` };\n\nexport const ANARCHY_SKILLS = [\n  { code: 'athletics', attribute: ATTR.strength, icon: `${ICONS_SKILLS_PATH}/athletics.svg` },\n  { code: 'acrobatics', attribute: ATTR.agility, icon: `${ICONS_SKILLS_PATH}/escape-artist.svg`, lang: 'fr' },\n  { code: 'closeCombat', attribute: ATTR.agility, icon: `${ICONS_SKILLS_PATH}/close-combat.svg`, defense: DEFENSE.physicalDefense },\n  { code: 'projectileWeapons', attribute: ATTR.agility, icon: `${ICONS_SKILLS_PATH}/projectile-weapons.svg`, defense: DEFENSE.physicalDefense },\n  { code: 'firearms', attribute: ATTR.agility, icon: `${ICONS_SKILLS_PATH}/firearms.svg`, defense: DEFENSE.physicalDefense },\n  { code: 'heavyWeapons', attribute: ATTR.agility, icon: `${ICONS_SKILLS_PATH}/heavy-weapons.svg`, defense: DEFENSE.physicalDefense },\n  { code: 'vehicleWeapons', attribute: ATTR.agility, icon: `${ICONS_SKILLS_PATH}/vehicle-weapons.svg`, defense: DEFENSE.physicalDefense },\n  { code: 'stealth', attribute: ATTR.agility, icon: `${ICONS_SKILLS_PATH}/stealth.svg` },\n  { code: 'pilotingGround', attribute: ATTR.agility, icon: `${ICONS_SKILLS_PATH}/piloting-ground-steering-wheel.svg` },\n  { code: 'pilotingOther', attribute: ATTR.agility, icon: `${ICONS_SKILLS_PATH}/piloting-other.svg` },\n  { code: 'escapeArtist', attribute: ATTR.agility, icon: `${ICONS_SKILLS_PATH}/escape-artist.svg`, lang: 'en' },\n  { code: 'conjuring', attribute: ATTR.willpower, hasDrain: true, icon: `${ICONS_SKILLS_PATH}/conjuring.svg` },\n  { code: 'sorcery', attribute: ATTR.willpower, hasDrain: true, icon: `${ICONS_SKILLS_PATH}/sorcery.svg` },\n  { code: 'astralCombat', attribute: ATTR.willpower, icon: `${ICONS_SKILLS_PATH}/astral-combat.svg`, defense: DEFENSE.astralDefense },\n  { code: 'survival', attribute: ATTR.willpower, icon: `${ICONS_SKILLS_PATH}/survival.svg` },\n  { code: 'biotech', attribute: ATTR.logic, icon: `${ICONS_SKILLS_PATH}/biotech.svg` },\n  { code: 'hacking', attribute: ATTR.logic, hasConvergence: true, icon: `${ICONS_SKILLS_PATH}/hacking.svg`, defense: DEFENSE.matrixDefense },\n  { code: 'electronics', attribute: ATTR.logic, icon: `${ICONS_SKILLS_PATH}/electronics.svg` },\n  { code: 'engineering', attribute: ATTR.logic, icon: `${ICONS_SKILLS_PATH}/engineering.svg` },\n  { code: 'tasking', attribute: ATTR.logic, hasDrain: true, icon: `${ICONS_SKILLS_PATH}/tasking.svg` },\n  { code: 'tracking', attribute: ATTR.logic, icon: `${ICONS_SKILLS_PATH}/tracking.svg` },\n  { code: 'animals', attribute: ATTR.charisma, icon: `${ICONS_SKILLS_PATH}/animals.svg`, lang: 'fr' },\n  { code: 'con', attribute: ATTR.charisma, isSocial: true, icon: `${ICONS_SKILLS_PATH}/con-art.svg` },\n  { code: 'etiquette', attribute: ATTR.charisma, isSocial: true, icon: `${ICONS_SKILLS_PATH}/etiquette.svg`, lang: 'fr' },\n  { code: 'intimidation', attribute: ATTR.charisma, isSocial: true, icon: `${ICONS_SKILLS_PATH}/intimidation.svg` },\n  { code: 'negotiation', attribute: ATTR.charisma, isSocial: true, icon: `${ICONS_SKILLS_PATH}/negotiation.svg` },\n  { code: 'disguise', attribute: ATTR.charisma, icon: `${ICONS_SKILLS_PATH}/disguise.svg`, lang: 'en' },\n]\nexport const MATRIX_SKILLS = ['tasking', 'hacking']\n\nexport class Skills {\n\n  constructor() {\n    this.skillSets = {};\n    HooksManager.register(ANARCHY_HOOKS.PROVIDE_SKILL_SET);\n    Hooks.on(ANARCHY_HOOKS.PROVIDE_SKILL_SET, provide =>\n      provide(DEFAULT_SKILLSET_ANARCHY, 'Shadowrun Anarchy EN', ANARCHY_SKILLS.filter(it => !it.lang || it.lang == 'en'), { lang: 'en' })\n    );\n    Hooks.on(ANARCHY_HOOKS.PROVIDE_SKILL_SET, provide =>\n      provide('shadowrun-anarchy-fr', 'Shadowrun Anarchy FR', ANARCHY_SKILLS.filter(it => !it.lang || it.lang == 'fr'), { lang: 'fr' })\n    );\n    Hooks.on('updateSetting', async (setting, update, options, id) => this.onUpdateSetting(setting, update, options, id));\n    Hooks.once('ready', () => this.onReady());\n  }\n\n  async onReady() {\n    this.$prepareSkill(KNOWLEDGE)\n    Hooks.callAll(ANARCHY_HOOKS.PROVIDE_SKILL_SET, (id, name, skills, details) => {\n      const skillSet = this.$prepareSkillSet(id, name, skills, details)\n      if (skillSet) {\n        this.skillSets[skillSet.id] = skillSet;\n      }\n    });\n\n    const skillSetChoices = Object.fromEntries(Object.values(this.skillSets).map(e => [e.id, e.name]));\n    game.settings.register(SYSTEM_NAME, SELECTED_SKILL_LIST, {\n      scope: \"world\",\n      name: game.i18n.localize(ANARCHY.settings.skillSet.name),\n      hint: game.i18n.localize(ANARCHY.settings.skillSet.hint),\n      config: true,\n      default: DEFAULT_SKILLSET_ANARCHY,\n      choices: skillSetChoices,\n      type: String\n    });\n    this.selectedSkills = game.settings.get(SYSTEM_NAME, SELECTED_SKILL_LIST);\n  }\n\n  async onUpdateSetting(setting, update, options, id) {\n    if (setting.key == SETTING_KEY_SELECTED_SKILL_LIST) {\n      this.selectedSkills = game.settings.get(SYSTEM_NAME, SELECTED_SKILL_LIST);\n    }\n  }\n\n  get(code) {\n    return this.getSkills({ withKnowledge: true }).find(it => it.code == code);\n  }\n\n  getSkills(options = { withKnowledge: false }) {\n    const skills = this.$getConfiguredSkills().sort(Misc.ascending(it => it.label))\n    if (options.withKnowledge) {\n      return [KNOWLEDGE, ...skills]\n    }\n    return skills\n  }\n\n  $getConfiguredSkills() {\n    const skillSet = this.skillSets[this.selectedSkills] ?? this.skillSets[DEFAULT_SKILLSET_ANARCHY];\n    return skillSet.skills;\n  }\n\n\n  $prepareSkillSet(id, name, skills, details) {\n    const skillSet = foundry.utils.mergeObject({ id: id, name: name, skills: skills }, details);\n    if (!this.$validateSkillSet(skillSet)) {\n      return undefined;\n    }\n    skillSet.skills.forEach(skill => {\n      this.$prepareSkill(skill);\n    });\n    return skillSet;\n  }\n\n  $prepareSkill(skill) {\n    skill.labelkey = skill.labelkey ?? ANARCHY.skill[skill.code];\n    skill.icon = skill.icon ?? `${SYSTEM_PATH}/icons/skills/skills.svg`;\n  }\n\n  $validateSkillSet(skillSet) {\n    function check(check, error = '') { if (!check) { throw error; } }\n\n    try {\n      check(skillSet.id && skillSet.name, `Skills list does not have an id or name`);\n      const existing = this.skillSets[skillSet.id];\n      check(!existing, `Skills list ${skillSet.id} is already registered under name ${existing?.name}`);\n      check(Array.isArray(skillSet.skills), `Missing skills array`);\n      skillSet.skills.forEach(skill => {\n        check(skill.code, `Missing skill code for ${skill} in ${skillSet.id}`);\n        check(skill.labelkey || ANARCHY.skill[skill.code], `Missing skill localization key for ${skill.code}`);\n        check(skill.attribute, `Missing skill attribute for ${skill.code}`);\n      });\n      const skillCodes = skillSet.skills.map(it => it.code);\n      check(skillSet.skills.length == Misc.distinct(skillCodes).length, `Duplicate skill codes in ${skillCodes}`)\n      return true;\n    }\n    catch (error) {\n      console.warn(error + (skillSet.id ? ` in list ${skillSet.id}` : ' in unidentified list'), skillSet);\n      return false;\n    }\n  }\n\n}","import { Checkbars } from \"../common/checkbars.js\";\nimport { ANARCHY } from \"../config.js\";\nimport { SYSTEM_NAME, TEMPLATE } from \"../constants.js\";\nimport { ErrorManager } from \"../error-manager.js\";\nimport { ANARCHY_HOOKS, HooksManager } from \"../hooks-manager.js\";\nimport { Modifiers } from \"../modifiers/modifiers.js\";\n\nconst DAMAGE_MODE = 'damage-mode'\nconst SETTING_KEY_DAMAGE_MODE = `${SYSTEM_NAME}.${DAMAGE_MODE}`;\n\nconst damageModeChoices = {};\nconst damageModeMethods = {};\n\nexport class ActorDamageManager {\n\n  static init() {\n    HooksManager.register(ANARCHY_HOOKS.PROVIDE_DAMAGE_MODE);\n    Hooks.on('updateSetting', async (setting, update, options, id) => ActorDamageManager.onUpdateSetting(setting, update, options, id));\n\n    Hooks.on(ANARCHY_HOOKS.PROVIDE_DAMAGE_MODE, provide => {\n      provide('resistanceArmorMonitor', ANARCHY.settings.damageMode.values.resistanceArmorMonitor, ActorDamageManager.sufferDamageResistanceArmorMonitor);\n      provide('armorResistanceMonitor', ANARCHY.settings.damageMode.values.armorResistanceMonitor, ActorDamageManager.sufferDamageArmorResistanceMonitor);\n      provide('armorGivesResistance', ANARCHY.settings.damageMode.values.armorGivesResistance, ActorDamageManager.sufferDamageArmorAsResistance_Earthdawn);\n      provide('armorGiveResistanceHitsAvoid', ANARCHY.settings.damageMode.values.armorGiveResistanceHitsAvoid, ActorDamageManager.sufferDamageArmorAsResistance_Cyberpunk);\n    });\n    Hooks.once('ready', () => ActorDamageManager.onReady());\n  }\n\n  static onReady() {\n    ActorDamageManager._registerDamageModeSetting();\n    ActorDamageManager._selectDamageMode();\n  }\n\n  static _registerDamageModeSetting() {\n    Hooks.callAll(ANARCHY_HOOKS.PROVIDE_DAMAGE_MODE, (code, labelkey, method) => {\n      damageModeChoices[code] = game.i18n.localize(labelkey);\n      damageModeMethods[code] = method;\n    });\n    game.settings.register(SYSTEM_NAME, DAMAGE_MODE, {\n      scope: \"world\",\n      name: game.i18n.localize(ANARCHY.settings.damageMode.name),\n      hint: game.i18n.localize(ANARCHY.settings.damageMode.hint),\n      config: true,\n      default: Object.keys(damageModeChoices)[0],\n      choices: damageModeChoices,\n      type: String\n    });\n  }\n\n  static async onUpdateSetting(setting, update, options, id) {\n    if (setting.key == SETTING_KEY_DAMAGE_MODE) {\n      ActorDamageManager._selectDamageMode();\n    }\n  }\n\n  static _selectDamageMode() {\n    let damageModeCode = game.settings.get(SYSTEM_NAME, DAMAGE_MODE)\n    if (!damageModeMethods[damageModeCode]) {\n      damageModeCode = Object.keys(damageModeChoices)[0];\n    }\n    ActorDamageManager.damageModeCode = damageModeCode;\n    ActorDamageManager.damageModeMethod = damageModeMethods[damageModeCode];\n  }\n\n  static async sufferDamage(defender, damageType, damage, success, avoidArmor, attacker, attackWeapon) {\n    const monitor = defender.getDamageMonitor(damageType);\n    ErrorManager.checkActorCanReceiveDamage(damageType, monitor, defender);\n    const sufferDamageMethod = ActorDamageManager.damageModeMethod ?? ActorDamageManager.sufferDamageResistanceArmorMonitor;\n    await sufferDamageMethod(defender, monitor, damage, success, avoidArmor, attacker);\n    await defender.applyArmorDamage(damageType, Modifiers.sumModifiers([attackWeapon], 'other', 'damageArmor'));\n  }\n\n  static async sufferMarks(actor, sourceActor) {\n    await Checkbars.addCounter(actor, TEMPLATE.monitors.marks, 1, sourceActor.id);\n  }\n\n  static async sufferDamageResistanceArmorMonitor(actor, monitor, damage, success, avoidArmor, sourceActor) {\n    if (monitor == TEMPLATE.monitors.marks) {\n      await ActorDamageManager.sufferMarks(actor, sourceActor)\n      return;\n    }\n    const resistance = Checkbars.resistance(actor, monitor);\n    let total = 0;\n\n    if (avoidArmor) {\n      const resisted1 = Math.min(resistance, damage);\n      const resisted2 = Math.min(resistance - resisted1, success);\n      total = damage - resisted1;\n      if (Checkbars.useArmor(monitor)) {\n        total -= await ActorDamageManager.damageToArmor(actor, total);\n      }\n      total += success - resisted2;\n    }\n    else {\n      total = damage + success - resistance;\n      if (Checkbars.useArmor(monitor)) {\n        total -= await ActorDamageManager.damageToArmor(actor, total);\n      }\n    }\n    if (total > 0) {\n      await Checkbars.addCounter(actor, monitor, total);\n    }\n  }\n\n  static async sufferDamageArmorResistanceMonitor(actor, monitor, damage, success, avoidArmor, sourceActor) {\n    if (monitor == TEMPLATE.monitors.marks) {\n      await ActorDamageManager.sufferMarks(actor, sourceActor)\n      return;\n    }\n    let total = 0;\n    if (Checkbars.useArmor(monitor)) {\n      if (avoidArmor) {\n        damage -= await ActorDamageManager.damageToArmor(actor, damage);\n        total = success + damage;\n      }\n      else {\n        total = success + damage;\n        total -= await ActorDamageManager.damageToArmor(actor, total);\n      }\n    }\n    else {\n      total = damage + success;\n    }\n    total -= Checkbars.resistance(actor, monitor);\n    if (total > 0) {\n      await Checkbars.addCounter(actor, monitor, total);\n    }\n    return total;\n  }\n\n  static async sufferDamageArmorAsResistance_Cyberpunk(actor, monitor, damage, success, avoidArmor, sourceActor) {\n    if (monitor == TEMPLATE.monitors.marks) {\n      await ActorDamageManager.sufferMarks(actor, sourceActor)\n      return;\n    }\n    let total = damage + success;\n    if (Checkbars.useArmor(monitor) && total > 0) {\n      const ignoredArmor = avoidArmor ? success : 0;\n      const armorResistance = Math.max(0, ActorDamageManager._computeArmorResistance(actor) - ignoredArmor)\n      if (armorResistance > 0) {\n        await Checkbars.addCounter(actor, 'armor', 1);\n        total -= armorResistance;\n      }\n    }\n    total -= Checkbars.resistance(actor, monitor);\n    if (total > 0) {\n      await Checkbars.addCounter(actor, monitor, total);\n    }\n    return Math.max(total, 0);\n  }\n\n  static async sufferDamageArmorAsResistance_Earthdawn(actor, monitor, damage, success, avoidArmor, sourceActor) {\n    if (monitor == TEMPLATE.monitors.marks) {\n      await ActorDamageManager.sufferMarks(actor, sourceActor)\n      return;\n    }\n    let total = damage + success;\n    if (Checkbars.useArmor(monitor) && !avoidArmor && total > 0) {\n      const armorResistance = ActorDamageManager._computeArmorResistance(actor);\n      if (armorResistance > 0) {\n        await Checkbars.addCounter(actor, 'armor', 1);\n        total -= armorResistance;\n      }\n    }\n    total -= ActorDamageManager._computeStrengthResistance(actor, monitor);\n    total -= Checkbars.resistance(actor, monitor);\n    if (total > 0) {\n      await Checkbars.addCounter(actor, monitor, total);\n    }\n    return total;\n  }\n\n  static async damageToArmor(actor, value) {\n    if (value > 0) {\n      const armorMax = Checkbars.max(actor, TEMPLATE.monitors.armor);\n      const armor = Checkbars.getCounterValue(actor, TEMPLATE.monitors.armor);\n      const armorReduction = Math.min(armorMax - armor, value);\n      const armorResistance = Checkbars.resistance(actor, TEMPLATE.monitors.armor);\n      const armorDmg = Math.max(0, armorReduction - armorResistance);\n      if (armorDmg > 0) {\n        await Checkbars.addCounter(actor, TEMPLATE.monitors.armor, armorDmg);\n      }\n      return armorReduction;\n    }\n    else {\n      return 0;\n    }\n  }\n\n  static _computeArmorResistance(actor) {\n    const armorMax = Checkbars.max(actor, 'armor');\n    const armorDamage = Checkbars.getCounterValue(actor, 'armor');\n    const armor = Math.max(0, armorMax - armorDamage);\n    return Math.max(0, Math.ceil(armor / 3));\n  }\n\n  static _computeStrengthResistance(actor, monitor) {\n    switch (monitor) {\n      case TEMPLATE.monitors.matrix:\n        return 0;\n    }\n    const strength = actor.getAttributeValue(TEMPLATE.attributes.strength);\n    return Math.max(0, Math.floor(strength / 4));\n  }\n}","import { AttributeActions } from \"../attribute-actions.js\";\nimport { Checkbars } from \"../common/checkbars.js\";\nimport { ANARCHY } from \"../config.js\";\nimport { BASE_MONITOR, TEMPLATE } from \"../constants.js\";\nimport { Enums } from \"../enums.js\";\nimport { ErrorManager } from \"../error-manager.js\";\nimport { NO_MATRIX_MONITOR } from \"../matrix-helper.js\";\nimport { Misc } from \"../misc.js\";\nimport { Modifiers } from \"../modifiers/modifiers.js\";\nimport { RollDialog } from \"../roll/roll-dialog.js\";\nimport { MATRIX_SKILLS } from \"../skills.js\";\nimport { AnarchyUsers } from \"../users.js\";\nimport { ActorDamageManager } from \"./actor-damage.js\";\n\nexport class AnarchyBaseActor extends Actor {\n\n  static init() {\n    Hooks.on('updateActor', (actor, updates, options, id) => AnarchyUsers.firstResponsible(actor)?.onUpdateActor(updates, options))\n  }\n\n  constructor(docData, context = {}) {\n    if (!context.anarchy?.ready) {\n      const ActorConstructor = game.system.anarchy.actorClasses[docData.type];\n      foundry.utils.mergeObject(context, { anarchy: { ready: true } });\n      if (ActorConstructor) {\n        if (!docData.img) {\n          docData.img = ActorConstructor.defaultIcon;\n        }\n        return new ActorConstructor(docData, context);\n      }\n    }\n    context.anarchy = undefined\n    super(docData, context);\n  }\n\n  static get initiative() {\n    return \"2d6 + @modifiers.initiative\";\n  }\n\n  static get defaultIcon() {\n    return undefined;\n  }\n\n  static padWordListToMin(items, min) {\n    for (let index = items.length; index < min; index++) {\n      items.push({\n        word: \"\",\n        id: index + 1,\n        audio: \"\",\n        no_delete: false\n      });\n    }\n    for (let index = 0; index < min; index++) {\n      items[index][\"no_delete\"] = true;\n    }\n    return items;\n  }\n\n  static sortSkills(actor, skills) {\n    if (!skills) {\n      return []\n    }\n    return skills.sort((skilla, skillb) => {\n      const skillaIsKnowledge = (skilla.system.code === 'knowledge') || (skilla.system.attribute === 'knowledge');\n      const skillbIsKnowledge = (skillb.system.code === 'knowledge') || (skillb.system.attribute === 'knowledge');\n      if (skillaIsKnowledge && !skillbIsKnowledge) return 1;\n      if (!skillbIsKnowledge && skillaIsKnowledge) return -1;\n      if (skillaIsKnowledge && skillbIsKnowledge) {\n        if (skilla.name > skillb.name) return 1;\n        if (skilla.name > skillb.name) return -1;\n        return 0;\n      }\n\n      const skillATotal = actor.getAttributeValue(skilla.system.attribute) + skilla.system.value;\n      const skillBTotal = actor.getAttributeValue(skillb.system.attribute) + skillb.system.value;\n      if (skillATotal > skillBTotal) return -1;\n      if (skillATotal < skillBTotal) return 1;\n      return 0;\n    })\n  }\n\n  static sortQualities(qualities) {\n    if (!qualities) {\n      return []\n    }\n    return qualities.sort((qa, qb) => {\n      // same type of quality\n      if (qa.system.positive === qb.system.positive) {\n        if (qa.name > qb.name) return 1;\n        if (qa.name < qb.name) return -1;\n        return 0;\n      }\n\n      if (qa.system.positive) return -1;\n      if (qb.system.positive) return 1;\n\n      return 0;\n    })\n  }\n\n  static sortShadowamps(shadowamps) {\n    if (!shadowamps) {\n      return []\n    }\n    return shadowamps.sort((sa, sb) => {\n      if (sa.system.level > sb.system.level) return -1;\n      if (sa.system.level < sb.system.level) return 1;\n      if (sa.name > sb.name) return 1;\n      if (sa.name < sb.name) return -1;\n      return 0;\n    })\n  }\n\n  static sortAttributeButton(buttons) {\n    if (!buttons) {\n      return []\n    }\n    return buttons.sort((a, b) => {\n      if (game.i18n.localize(a.labelkey) > game.i18n.localize(b.labelkey)) return 1;\n      if (game.i18n.localize(a.labelkey) < game.i18n.localize(b.labelkey)) return -1;\n      return 0;\n    })\n  }\n\n  getAllowedUsers(permission = CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER) {\n    return game.users.filter(user => this.testUserPermission(user, permission));\n  }\n\n  getAllowedUserIds(permission = CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER) {\n    return this.getAllowedUsers(permission).map(it => it.id);\n  }\n\n  getRightToDefend() { return CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER }\n\n  hasOwnAnarchy() { return false; }\n  hasGMAnarchy() { return !this.hasPlayerOwner; }\n  isVehicle() { return this.type == TEMPLATE.actorTypes.vehicle }\n  prepareData() {\n    super.prepareData()\n    this.cleanupFavorites()\n  }\n\n  prepareDerivedData() {\n    this.prepareMatrixMonitor()\n    this.system.modifiers = {\n      initiative: Modifiers.sumModifiers(this.items, 'other', 'initiative')\n    }\n    if (this.system.monitors) {\n      Object.entries(this.system.monitors).forEach(kv => {\n        kv[1].maxBonus = Modifiers.sumMonitorModifiers(this.items, kv[0], 'max')\n        kv[1].resistanceBonus = Modifiers.sumMonitorModifiers(this.items, kv[0], 'resistance')\n      })\n    }\n    if (this.system.attributes) {\n      Object.entries(this.system.attributes).forEach(kv => kv[1].total = this.getAttributeValue(kv[0]))\n    }\n    this.system.state = this.computeState()\n  }\n\n  getAttributes() { return []; }\n  getPhysicalAgility() { return undefined }\n  getCorrespondingAttribute(attribute) {\n    const attributes = this.getAttributes()\n    if (attributes.includes(attribute)) {\n      return attribute\n    }\n    return undefined\n  }\n\n  prepareMatrixMonitor() {\n    const matrix = this.getMatrixDetails()\n    if (matrix.hasMatrix) {\n      this.system.monitors.matrix.max = this._getMonitorMax(matrix.logic)\n      this.system.monitors.matrix.canMark = true\n    }\n  }\n\n  async onUpdateActor(updates, options) {\n    if (updates.system?.monitors != undefined && updates.system?.state == undefined) {\n      this.update({ 'system.state': this.computeState() })\n    }\n  }\n\n  computeState() {\n    return {\n      matrix: this.computeMatrixState(),\n      physical: this.computePhysicalState(),\n    }\n  }\n\n  computePhysicalState() {\n    return { value: 0, max: 0 }\n  }\n\n  computeMatrixState() {\n    const matrixDetails = this.getMatrixDetails();\n    if (matrixDetails.hasMatrix) {\n      return {\n        value: matrixDetails.monitor.max - matrixDetails.monitor.value,\n        max: matrixDetails.monitor.max\n      }\n    }\n    return { value: 0, max: 0 }\n  }\n\n  getMatrixDetails() {\n    return {\n      hasMatrix: false,\n      logic: undefined,\n      firewall: undefined,\n      monitor: NO_MATRIX_MONITOR,\n      overflow: undefined,\n    }\n  }\n\n  getMatrixLogic() { return this.getMatrixDetails().logic }\n  getMatrixFirewall() { return this.getMatrixDetails().firewall }\n  getMatrixMonitor() { return this.getMatrixDetails().monitor }\n  getMatrixMarks() { return this.getMatrixDetails().monitor?.marks ?? [] }\n  getMatrixOverflow() { return this.getMatrixDetails().overflow }\n  hasMatrixMonitor() { return this.getMatrixDetails().hasMatrix }\n  isMatrixConnected(mode = undefined) { return false }\n  isMatrixSkill(skill) {\n    return MATRIX_SKILLS.includes(skill?.system.code)\n  }\n\n  async nextConnectionMode(cyberdeck) { }\n\n  async defSetMatrixMonitor(path, value) {\n    if (!this.getMatrixDetails().hasMatrix) {\n      game.system.anarchy.hacks.i18n.format(ANARCHY.actor.monitors.noMatrixMonitor, { actor: this.name })\n    }\n    else {\n      await this.update({ [path]: value })\n    }\n  }\n\n  async setCheckbarValue(path, value) {\n    if (path.startsWith('system.monitors.matrix.')) {\n      const matrixDetails = this.getMatrixDetails();\n      if (matrixDetails.setMatrixMonitor) {\n        return await matrixDetails.setMatrixMonitor(path, value)\n      }\n      return await this.defSetMatrixMonitor(path, value)\n    }\n    return await this.update({ [path]: value })\n  }\n\n  _getMonitorMax(attribute) {\n    const attributeValue = this.getAttributeValue(attribute);\n    return attributeValue == 0 ? 0 : (BASE_MONITOR + Misc.divup(attributeValue, 2));\n  }\n\n\n  getAttributeActions() {\n    return AttributeActions.getActorActions(this);\n  }\n\n  getUsableAttributes(item = undefined) {\n    const itemsAttributes = (item ? [item] : this.items)\n      .map(it => it.getUsableAttributes())\n      .reduce((a, b) => a.concat(b), [])\n    const usableAttributes = Misc.distinct(this.getAttributes().concat(itemsAttributes));\n    usableAttributes.sort(Misc.ascendingBySortedArray(Enums.sortedAttributeKeys));\n    return usableAttributes;\n  }\n\n  getAttributeValue(attribute, item = undefined) {\n    let value = 0;\n    attribute = this.getCorrespondingAttribute(attribute)\n    if (attribute) {\n      if (this.getAttributes().includes(attribute)) {\n        value = this.system.attributes[attribute].value;\n      }\n      else if (!item) {\n        const candidateItems = this.items.filter(item => item.isActive() && item.getAttributes().includes(attribute))\n        if (candidateItems.length > 0) {\n          const candidateValues = candidateItems.map(it => it.getAttributeValue(attribute) ?? 0)\n          value = Math.max(...candidateValues)\n        }\n      }\n      else if (this.isEmerged() && attribute == TEMPLATE.attributes.firewall) {\n        return this.getAttributeValue(TEMPLATE.attributes.logic);\n      }\n      else {\n        value = item?.getAttributeValue(attribute) ?? 0;\n      }\n      value += Modifiers.sumModifiers(this.items, 'attribute', attribute);\n    }\n    return value;\n  }\n\n  getDamageMonitor(damageType) {\n    switch (damageType) {\n      case TEMPLATE.monitors.matrix:\n      case TEMPLATE.monitors.marks:\n        return damageType;\n    }\n    return undefined;\n  }\n\n  async applyArmorDamage(damageType, damage = 0) {\n    switch (damageType) {\n      case TEMPLATE.monitors.physical:\n      case TEMPLATE.monitors.stun:\n        await ActorDamageManager.damageToArmor(this, damage);\n    }\n  }\n\n  async rollAttribute(attribute) {\n    await RollDialog.rollAttribute(this, attribute);\n  }\n\n  async rollAttributeAction(code) {\n    const action = AttributeActions.getActorAction(this, code);\n    await RollDialog.rollAttributeAction(this, action);\n  }\n\n  async rollSkill(skill, specialization) {\n    await RollDialog.rollSkill(this, skill, specialization);\n  }\n\n  async rollWeapon(weapon) {\n    ErrorManager.checkWeaponDefense(weapon, this);\n    const targetedTokenIds = weapon.validateTargets(this)?.map(it => it.id)\n    const targeting = {\n      attackerTokenId: game.scenes.current?.tokens.find(it => it.actor?.id == this.id)?.id,\n      targetedTokenIds: targetedTokenIds\n    }\n    const skill = this.items.find(it => weapon.isWeaponSkill(it));\n    await RollDialog.rollWeapon(this, skill, weapon, targeting);\n  }\n\n  async rollDefense(attack) {\n    const defense = attack.attack.defense;\n    const action = AttributeActions.getActorDefense(this, defense);\n    await RollDialog.rollDefense(this, action, attack);\n  }\n\n  async rollPilotDefense(attack) { }\n\n  async rollDrain(drain) { }\n\n  async rollConvergence(convergence) { }\n\n  async switchMonitorCheck(monitor, index, checked, sourceActorId = undefined) {\n    await Checkbars.switchMonitorCheck(this, monitor, index, checked, sourceActorId);\n  }\n\n  async addCounter(monitor, value, sourceActorId = undefined) {\n    await Checkbars.addCounter(this, monitor, value, sourceActorId);\n  }\n\n  async setCounter(monitor, value, sourceActorId = undefined) {\n    await Checkbars.setCounter(this, monitor, value, sourceActorId);\n  }\n\n  canPilotVehicle() { return false }\n\n  canSetMarks() { return false }\n\n  getCyberdeck() { return undefined }\n\n  canReceiveMarks() { return this.system.monitors?.matrix?.canMark }\n\n  canApplyDamage(monitor) {\n    switch (monitor) {\n      case TEMPLATE.monitors.matrix:\n      case TEMPLATE.monitors.marks:\n        return this.hasMatrixMonitor()\n      case TEMPLATE.monitors.physical:\n      case TEMPLATE.monitors.stun:\n        return this.getDamageMonitor(monitor) != undefined\n    }\n    return false\n  }\n\n  canReceiveDamage(monitor) {\n    return this.canApplyDamage(monitor)\n  }\n\n  isEmerged() { return false }\n\n  async addActorMark(sourceActorId) {\n    await Checkbars.addActorMark(this, sourceActorId);\n  }\n\n  getActorMarks(sourceActorId) {\n    return Checkbars.getActorMarks(this, sourceActorId)?.marks;\n  }\n\n  async onEnterCombat() {\n    const sceneAnarchy = Modifiers.sumModifiers(this.items, 'other', 'sceneAnarchy');\n    if (sceneAnarchy > 0) {\n      await Checkbars.setCounter(this, TEMPLATE.monitors.sceneAnarchy, sceneAnarchy);\n    }\n  }\n\n  async onLeaveCombat() {\n    await Checkbars.setCounter(this, TEMPLATE.monitors.sceneAnarchy, 0);\n  }\n\n  getCelebrityValue() { return 0; }\n  getCredibilityValue() { return 0; }\n  getRumorValue() { return 0; }\n\n  getAnarchy() {\n    const anarchy = this.hasGMAnarchy()\n      ? game.system.anarchy.gmAnarchy.getAnarchy()\n      : {\n        isGM: false,\n        value: 0,\n        max: 0,\n      };\n    anarchy.scene = this.getAnarchyScene()\n    return anarchy;\n  }\n\n  getAnarchyScene() {\n    return 0;\n  }\n\n  getAnarchyValue() {\n    return this.getAnarchy().value ?? 0;\n  }\n\n  async spendCredibility(count) {\n    await Checkbars.addCounter(this, TEMPLATE.counters.social.credibility, - count);\n  }\n  async spendRumor(count) {\n    await Checkbars.addCounter(this, TEMPLATE.counters.social.rumor, - count);\n  }\n\n  async spendAnarchy(count) {\n    if (count && !this.hasPlayerOwner) {\n      await game.system.anarchy.gmAnarchy.npcConsumesAnarchy(this, count);\n    }\n  }\n\n  getRemainingEdge() {\n    return this.system.counters?.edge?.value ?? 0\n  }\n\n  canUseEdge() {\n    return this.getAttributes().includes(TEMPLATE.attributes.edge);\n  }\n\n  async spendEdge(count) {\n    if (count == 0) {\n      return;\n    }\n    if (!this.canUseEdge()) {\n      const message = game.system.anarchy.hacks.i18n.localize(ANARCHY.common.errors.noEdgeForActor, {\n        actor: this.name,\n        actorType: game.system.anarchy.hacks.i18n.localize(ANARCHY.actorType[this.type])\n      });\n      ui.notifications.warn(message)\n      throw ANARCHY.common.errors.noEdgeForActor + message;\n    }\n    await Checkbars.addCounter(this, TEMPLATE.counters.edge, - count);\n  }\n\n  getSkillValue(skillId, specialization = undefined) {\n    const skill = this.items.get(skillId);\n    const attribute = this.getAttributeValue(skill.system.attribute);\n    return skill.system.value + attribute + (specialization && skill.system.specialization ? 2 : 0);\n  }\n\n  getWounds() {\n    return 0;\n  }\n\n  async removeOtherMetatype(metatype) {\n    const metatypeIds = this.items.filter(it => it.isMetatype() && it.id != metatype?.id)\n      .map(it => it.id);\n    this.deleteEmbeddedDocuments(\"Item\", metatypeIds);\n  }\n\n  /**\n   * @param ownerActor the Actor who becomes the owner of this Actor\n   */\n  async attachToOwnerActor(ownerActor = undefined, attachOrCopy = 'attach') {\n    if (ownerActor?.id == this.id) {\n      return;\n    }\n    if (ownerActor?.hasPlayerOwner) {\n      // TODO: enforce player to have rights if owner hasPlayer\n    }\n    let actorToAttach = this;\n    if (attachOrCopy == 'copy') {\n      const cloneTmp = this.clone();\n      const created = await Actor.createDocuments([cloneTmp]);\n      actorToAttach = created[0];\n    }\n    await actorToAttach.update({ 'system.ownerId': ownerActor?.id ?? '' });\n    ownerActor?.render();\n    this.render();\n  }\n\n  getOwnerActor() {\n    if (this.system.ownerId) {\n      return game.actors.get(this.system.ownerId);\n    }\n    return undefined;\n  }\n\n  getOwnedActors() {\n    return game.actors.filter(it => it.system.ownerId == this.id);\n  }\n\n\n  hasFavorite(type, id) {\n    const search = AnarchyBaseActor._prepareFavorite(type, id);\n    return this.system.favorites.find(it => AnarchyBaseActor._isSameFavorite(search, it)) ? true : false;\n  }\n\n  static _prepareFavorite(type, id) { return { type, id } }\n\n  static _isSameFavorite(f1, f2) {\n    return f1.id == f2.id && f1.type == f2.type;\n  }\n\n  async switchFavorite(setFavorite, type, id) {\n    const favorite = AnarchyBaseActor._prepareFavorite(type, id);\n    const newFavorites = this.system.favorites.filter(it => !AnarchyBaseActor._isSameFavorite(favorite, it));\n    if (setFavorite) {\n      newFavorites.push(favorite);\n    }\n    this.update({ 'system.favorites': newFavorites })\n  }\n\n  async cleanupFavorites() {\n    const newFavorites = this.computeShortcuts().filter(f => !f.callback);\n    if (newFavorites.length < this.system.favorites) {\n      this.update({ 'system.favorites': newFavorites })\n    }\n  }\n\n  getShortcuts() {\n    return this.computeShortcuts().filter(s => s.label && s.callback);\n  }\n\n  computeShortcuts() {\n    if (this.system.favorites) {\n      return this.system.favorites.map(f => this.getShortcut(f.type, f.id));\n    }\n    return []\n  }\n\n  getShortcut(type, id) {\n    const favorite = AnarchyBaseActor._prepareFavorite(type, id);\n    if (type == 'attributeAction') {\n      const shortcut = AttributeActions.prepareShortcut(this, id);\n      if (shortcut) {\n        return foundry.utils.mergeObject(shortcut, favorite);\n      }\n    }\n    else if (Object.values(TEMPLATE.itemType).includes(type)) {\n      const shortcut = this.items.get(id)?.prepareShortcut();\n      if (shortcut) {\n        return foundry.utils.mergeObject(shortcut, favorite);\n      }\n    }\n    return favorite;\n  }\n}","import { ANARCHY } from \"./config.js\";\nimport { Icons } from \"./icons.js\";\n\nexport class ConfirmationDialog {\n\n  static async confirmDeleteItem(item, onConfirm = () => { }) {\n    let dialog = new Dialog({\n      title: game.i18n.localize(ANARCHY.common.confirmation.del),\n      content: game.i18n.format(ANARCHY.common.confirmation.delItem, {\n        name: item.name,\n        type: game.i18n.localize(ANARCHY.itemType.singular[item.type])\n      }),\n      buttons: {\n        delete: {\n          icon: Icons.fontAwesome('fas fa-check'),\n          label: game.i18n.localize(ANARCHY.common.del),\n          callback: onConfirm\n        },\n        cancel: {\n          icon: Icons.fontAwesome('fas fa-times'),\n          label: game.i18n.localize(ANARCHY.common.cancel)\n        }\n      },\n      default: \"cancel\"\n    });\n    dialog.render(true);\n  }\n\n  static async confirmDetachOwnerActor(owner, owned, onConfirm = () => { }) {\n    let dialog = new Dialog({\n      title: game.i18n.localize(ANARCHY.common.confirmation.del),\n      content: game.i18n.format(ANARCHY.common.confirmation.delOwner, {\n        name: owner.name,\n      }),\n      buttons: {\n        delete: {\n          icon: Icons.fontAwesome('fas fa-check'),\n          label: game.i18n.localize(ANARCHY.common.del),\n          callback: onConfirm\n        },\n        cancel: {\n          icon: Icons.fontAwesome('fas fa-times'),\n          label: game.i18n.localize(ANARCHY.common.cancel)\n        }\n      },\n      default: \"cancel\"\n    });\n    dialog.render(true);\n  }\n\n\n  static async confirmAttachOrCopy(owner, owned, onAttach = () => { }, onAttachCopy = () => { }) {\n    let dialog = new Dialog({\n      title: game.i18n.localize(ANARCHY.common.confirmation.attach),\n      content: game.i18n.format(ANARCHY.common.confirmation.attachOrCopy, {\n        ownerName: owner.name, ownerType: game.i18n.localize(ANARCHY.actorType[owner.type]),\n        ownedName: owned.name, ownedType: game.i18n.localize(ANARCHY.actorType[owned.type])\n      }),\n      buttons: {\n        attach: {\n          icon: Icons.fontAwesome('fas fa-user-tag'),\n          label: game.i18n.localize(ANARCHY.common.attach),\n          callback: onAttach\n        },\n        attachCopy: {\n          icon: Icons.fontAwesome('fas fa-user-plus'),\n          label: game.i18n.localize(ANARCHY.common.attachCopy),\n          callback: onAttachCopy\n        },\n        cancel: {\n          icon: Icons.fontAwesome('fas fa-times'),\n          label: game.i18n.localize(ANARCHY.common.cancel)\n        }\n      },\n      default: \"cancel\"\n    });\n    dialog.render(true);\n  }\n}","import { ANARCHY } from \"../config.js\";\nimport { TEMPLATES_PATH } from \"../constants.js\";\nimport { Icons } from \"../icons.js\";\n\nexport class SelectActor extends Dialog {\n\n  static async selectActor(title,\n    actors,\n    onActorSelected = async actor => { },\n    onCancel = async () => { }) {\n\n    let dialogOptions = { classes: [\"select-actor\"], width: 300, height: 300, 'z-index': 99999 };\n    let dialogConfig = {\n      title: title,\n      content: await renderTemplate(`${TEMPLATES_PATH}/dialog/select-actor.hbs`, {\n        actors: actors\n      }),\n      buttons: {\n        cancel: {\n          icon: Icons.fontAwesome('fas fa-times'),\n          label: game.i18n.localize(ANARCHY.common.cancel),\n          callback: async () => { await onCancel(); }\n        }\n      },\n      default: 'cancel'\n    }\n    new SelectActor(dialogConfig, dialogOptions, actors, onActorSelected)\n      .render(true);\n  }\n\n  constructor(dialogConfig, dialogOptions, actors, onActorSelected) {\n    super(dialogConfig, dialogOptions);\n    this.actors = actors;\n    this.onActorSelected = onActorSelected;\n  }\n\n  /* -------------------------------------------- */\n  activateListeners(html) {\n    super.activateListeners(html);\n    html.find(\".click-select-actor\").click((event) => this.onSelectActor(event));\n  }\n\n  async onSelectActor(event) {\n    const actorId = $(event.currentTarget).attr('data-actor-id');\n    const actor = this.actors.find(it => it.id == actorId);\n    if (actor) {\n      this.onActorSelected(actor);\n      this.close();\n    }\n  }\n}","import { ANARCHY } from \"../config.js\";\nimport { TEMPLATE, TEMPLATES_PATH } from \"../constants.js\";\nimport { ConfirmationDialog } from \"../confirmation.js\";\nimport { Misc } from \"../misc.js\";\nimport { Enums } from \"../enums.js\";\nimport { SelectActor } from \"../dialog/select-actor.js\";\n\nexport class AnarchyActorSheet extends ActorSheet {\n\n  get template() {\n    return `${TEMPLATES_PATH}/actor/${this.actor.type}.hbs`;\n  }\n\n  /** @override */\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      isGM: game.user.isGM,\n      dragDrop: [{ dragSelector: \".item \", dropSelector: null }],\n      classes: [game.system.anarchy.styles.selectCssClass(), \"sheet\", \"actor\"],\n    });\n  }\n\n  getData(options) {\n    let hbsData = foundry.utils.mergeObject(\n      super.getData(options),\n      {\n        items: {},\n        anarchy: this.actor.getAnarchy(),\n        ownerActor: this.actor.getOwnerActor(),\n        ownedActors: this.actor.getOwnedActors(),\n        options: {\n          limited: this.document.limited,\n          owner: this.document.isOwner,\n          cssClass: this.isEditable ? \"editable\" : \"locked\",\n        },\n        ENUMS: foundry.utils.mergeObject({ attributeAction: this.actor.getAttributeActions() }, Enums.getEnums()),\n        ANARCHY: ANARCHY\n      });\n    hbsData.options.classes.push(`actor-${this.actor.type}`);\n    hbsData.options.classes = Misc.distinct(hbsData.options.classes);\n    hbsData.system = this.actor.system;\n\n    Misc.classifyInto(hbsData.items, this.actor.items);\n    return hbsData;\n  }\n\n  activateListeners(html) {\n    super.activateListeners(html);\n\n    // items standard actions (add/edit/activate/delete)\n    html.find('.click-item-add').click(async event => {\n      event.stopPropagation();\n      await this.createNewItem(this.getEventItemType(event));\n    });\n\n    html.find('.click-item-edit').click(async event => {\n      event.stopPropagation();\n      this.getEventItem(event)?.sheet.render(true);\n    });\n\n    html.find('.click-item-activate').click(async event => {\n      event.stopPropagation();\n      const item = this.getEventItem(event)\n      const inactive = item.system.inactive;\n      await item.update({ 'system.inactive': !inactive })\n    })\n\n    html.find('a.click-matrix-connectionMode').click(async event => {\n      event.stopPropagation();\n      await this.actor.nextConnectionMode(this.getEventItem(event))\n    })\n\n    html.find('.click-item-delete').click(async event => {\n      event.stopPropagation();\n      const item = this.getEventItem(event);\n      ConfirmationDialog.confirmDeleteItem(item, async () => {\n        await this.actor.deleteEmbeddedDocuments('Item', [item.id]);\n      });\n    });\n\n    html.find('.click-favorite').click(async event => {\n      event.stopPropagation();\n      this.onClickFavorite({\n        skillId: $(event.currentTarget).attr('data-skill-id'),\n        specialization: $(event.currentTarget).attr('data-specialization'),\n        weaponId: $(event.currentTarget).attr('data-weapon-id'),\n        attributeAction: $(event.currentTarget).attr('data-attributeAction'),\n        isFavorite: $(event.currentTarget).attr('data-isFavorite')\n      });\n    });\n\n    // ownership management\n    html.find('.click-owner-actor-unlink').click(async event => {\n      event.stopPropagation();\n      this.detachFromOwner(this.actor.getOwnerActor(), this.actor);\n    });\n    html.find('.click-owned-actor-view').click(async event => {\n      event.stopPropagation();\n      this.getEventOwnedActor(event)?.sheet.render(true);\n    });\n    html.find('.click-owned-actor-unlink').click(async event => {\n      event.stopPropagation();\n      this.detachFromOwner(this.actor, this.getEventOwnedActor(event));\n    });\n\n    // counters & monitors\n    html.find('a.click-checkbar-element').click(async event => {\n      event.stopPropagation();\n      const item = this.getEventItem(event);\n      const handler = item ?? this.actor;\n      const monitor = this.getEventMonitorCode(event);\n      const sourceActorId = monitor == 'marks' ?\n        $(event.currentTarget).closest('.anarchy-marks').attr('data-actor-id')\n        : undefined;\n      await handler.switchMonitorCheck(\n        monitor,\n        this.getEventIndex(event),\n        this.isEventChecked(event),\n        sourceActorId,\n        item\n      );\n    });\n    html.find('a.click-add-mark-actor').click(async event => {\n      event.stopPropagation();\n      this.onClickAddMark();\n    });\n\n    // rolls\n    html.find('.click-skill-roll').click(async event => {\n      event.stopPropagation();\n      this.actor.rollSkill(\n        this.getEventItem(event),\n        this.getEventSkillSpecialization(event));\n    });\n\n    html.find('.click-roll-attribute').click(async event => {\n      event.stopPropagation();\n      const handler = this.getEventItem(event) ?? this.actor;\n      handler.rollAttribute(\n        $(event.currentTarget).closest('.anarchy-attribute').attr('data-attribute')\n      );\n    });\n\n    html.find('.click-roll-attribute-action').click(async event => {\n      event.stopPropagation();\n      this.actor.rollAttributeAction(this.getEventActionCode(event));\n    });\n\n    html.find('.click-weapon-roll').click(async event => {\n      event.stopPropagation();\n      this.actor.rollWeapon(this.getEventItem(event));\n    });\n  }\n\n  getEventItemType(event) {\n    return $(event.currentTarget).closest('.define-item-type').attr('data-item-type');\n  }\n\n  getEventItem(event) {\n    const itemId = $(event.currentTarget).closest('.item').attr('data-item-id')\n      ?? $(event.currentTarget).closest('.anarchy-metatype').attr('data-item-id');\n    return this.actor.items.get(itemId);\n  }\n\n  isEventChecked(event) {\n    return $(event.currentTarget).attr('data-checked') == 'true';\n  }\n\n  getEventSkillSpecialization(event) {\n    return $(event.currentTarget).closest('.click-skill-roll').attr('data-item-specialization');\n  }\n\n  getEventActionCode(event) {\n    return $(event.currentTarget).attr('data-action-code');\n  }\n\n  getEventMonitorCode(event) {\n    return $(event.currentTarget).closest('.click-checkbar-element').attr('data-monitor-code');\n  }\n\n  getEventIndex(event) {\n    return Number.parseInt($(event.currentTarget).attr('data-index'));\n  }\n\n  getEventOwnedActor(event) {\n    const ownedActorId = $(event.currentTarget).closest('.define-owned-actor').attr('data-actor-id');\n    return game.actors.get(ownedActorId);\n  }\n\n  async createNewItem(itemType) {\n    const name = game.i18n.format(ANARCHY.common.newName, { type: game.i18n.localize(ANARCHY.itemType.singular[itemType]) });\n    await this.actor.createEmbeddedDocuments('Item', [{ name: name, type: itemType }], { renderSheet: true });\n  }\n\n  async onClickFavorite(options) {\n    const newState = options.isFavorite != \"true\";\n    if (options.skillId) {\n      await this.actor.switchFavorite(newState, TEMPLATE.itemType.skill, options.skillId, options.specialization);\n    }\n    else if (options.weaponId) {\n      await this.actor.switchFavorite(newState, TEMPLATE.itemType.weapon, options.weaponId);\n    }\n    else if (options.attributeAction) {\n      await this.actor.switchFavorite(newState, 'attributeAction', options.attributeAction);\n    }\n    else {\n      console.warn('Favorite not supported', options);\n    }\n  }\n\n  detachFromOwner(owner, owned) {\n    ConfirmationDialog.confirmDetachOwnerActor(owner, owned, async () => {\n      await owned.attachToOwnerActor();\n      this.render(true);\n    });\n  }\n\n  async _onDropActor(event, drag) {\n    const dropActor = fromUuidSync(drag.uuid);\n    if (dropActor?.id != this.actor.id) {\n      // check circular references: find a owner, without finding the owned id\n      ConfirmationDialog.confirmAttachOrCopy(this.actor, dropActor,\n        async () => await dropActor.attachToOwnerActor(this.actor),\n        async () => await dropActor.attachToOwnerActor(this.actor, 'copy'));\n    }\n    super._onDropActor(event, drag);\n  }\n\n  async onClickAddMark() {\n    if (this.actor.canReceiveMarks()) {\n      const title = game.i18n.format(ANARCHY.common.selection.actorSettingMarks, { name: this.actor.name });\n      await SelectActor.selectActor(title,\n        game.actors.filter(actor => !this.actor.getActorMarks(actor.id) && actor.canSetMarks()),\n        actor => this.actor.addActorMark(actor.id)\n      );\n    }\n  }\n}","import { ANARCHY } from \"../config.js\";\nimport { AnarchyActorSheet } from \"./anarchy-actor-sheet.js\";\nimport { TEMPLATES_PATH } from \"../constants.js\";\n\nexport class CharacterBaseSheet extends AnarchyActorSheet {\n\n  get template() {\n    return `${TEMPLATES_PATH}/actor/character.hbs`;\n  }\n\n  /** @override */\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      width: 720,\n      height: 700,\n      tabs: [{ navSelector: \".sheet-tabs\", contentSelector: \".sheet-body\", initial: \"main\" }],\n    });\n  }\n\n  getData(options) {\n    if (this.viewMode == undefined) {\n      this.viewMode = true\n    }\n    const essence = this.actor.computeEssence();\n    const hbsData = foundry.utils.mergeObject(\n      super.getData(options),\n      {\n        essence: {\n          value: essence,\n          adjust: this.actor.computeMalusEssence(essence)\n        },\n        options: {\n          viewMode: this.viewMode\n        }\n      });\n    return hbsData;\n  }\n\n  toggleViewMode() {\n    this.viewMode = !this.viewMode\n    this.render()\n  }\n\n  activateListeners(html) {\n    super.activateListeners(html);\n\n    html.find('.click-toggle-view-mode').click(async event => this.toggleViewMode())\n\n    // cues, dispositions, keywords\n    html.find('.click-word-add').click(async event => {\n      event.stopPropagation();\n      this.createNewWord(this.getEventWordType(event));\n    });\n\n    html.find('.click-word-say').click(async event => {\n      event.stopPropagation();\n      this.actor.sayWord(\n        this.getEventWordType(event),\n        this.getEventWordId(event));\n    });\n\n    html.find('.change-word-value').click(async event => {\n      event.stopPropagation();\n    });\n\n\n    html.find('.change-word-value').change(async event => {\n      event.stopPropagation();\n      const newWordValue = event.currentTarget.value;\n      await this.actor.updateWord(\n        this.getEventWordType(event),\n        this.getEventWordId(event),\n        newWordValue);\n    });\n\n    html.find('.click-word-delete').click(async event => {\n      event.stopPropagation();\n      this.actor.deleteWord(\n        this.getEventWordType(event),\n        this.getEventWordId(event));\n    });\n\n    html.find(\".click-celebrity-roll\").click(async event => {\n      event.stopPropagation();\n      this.actor.rollCelebrity();\n    });\n  }\n\n  createNewWord(wordType) {\n    const word = game.i18n.localize(ANARCHY.common.newEntry);\n    this.actor.createWord(wordType, word);\n  }\n\n  getEventWordType(event) {\n    return $(event.currentTarget).closest('.define-wordType').attr('data-word-type');\n  }\n\n  getEventWordId(event) {\n    return $(event.currentTarget).closest('.define-wordType').attr('data-word-id');\n  }\n\n}","import { TEMPLATES_PATH } from \"../constants.js\";\nimport { CharacterBaseSheet } from \"./character-base-sheet.js\";\nimport \"../../styles/character-enhanced-sheet.scss\";\n\nexport class CharacterEnhancedSheet extends CharacterBaseSheet {\n\n  get template() {\n    return `${TEMPLATES_PATH}/actor/character-enhanced.hbs`;\n  }\n\n  /** @override */\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      width: 800,\n      height: 700,\n    });\n  }\n  activateListeners(html) {\n    super.activateListeners(html);\n\n    const actorId = this.actor._id;\n    html.find('.click-section').on(\"click\", function () {\n      const sectionClass = ($(this).data('class'));\n      html.find(`.${sectionClass}`).toggleClass('closed');\n      localStorage.setItem(`${actorId}-${sectionClass}`, html.find(`.${sectionClass}`).hasClass('closed') ? 'closed' : null);\n    });\n  }\n\n  static ifTabClosed(id, sectionName, option) {\n    const isTabClosed = localStorage.getItem(`${id}-section-${sectionName}`) === \"closed\";\n    if (isTabClosed) {\n      return option.fn(this);\n    }\n    return option.inverse(this);\n  }\n\n  static actorTabClosed(id, sectionName, option) {\n    const isTabClosed = localStorage.getItem(`${id}-section-${sectionName}`) === \"closed\";\n    if (isTabClosed) {\n      return 'closed'\n    }\n    return ''\n  }\n}","import { Enums } from \"./enums.js\";\n\nexport class Damage {\n  static monitor(code) {\n    return game.i18n.localize(Enums.getFromList(Enums.getMonitors(), code) ?? \"\");\n  }\n\n  static letter(code) {\n    return game.i18n.localize(Enums.getFromList(Enums.getMonitorLetters(), code) ?? \"\");\n  }\n}","\nexport class Grammar {\n  static toLowerCaseNoAccent(words) {\n    return words?.normalize(\"NFD\").toLowerCase().replace(/[\\u0300-\\u036f]/g, \"\");\n  }\n  static toUpperCaseNoAccent(words) {\n    return words?.normalize(\"NFD\").toUpperCase().replace(/[\\u0300-\\u036f]/g, \"\");\n  }\n}","import { Checkbars } from '../common/checkbars.js';\nimport { Misc } from '../misc.js';\nimport { TEMPLATE } from '../constants.js';\nimport { RollDialog } from '../roll/roll-dialog.js';\nimport { NO_MATRIX_MONITOR } from '../matrix-helper.js';\n\nexport class AnarchyBaseItem extends Item {\n\n  static init() {\n    Hooks.on('createItem', (item, options, id) => item.onCreateItem(options, id));\n  }\n\n  async onCreateItem(options, id) {\n  }\n\n  constructor(docData, context = {}) {\n    if (!context.anarchy?.ready) {\n      foundry.utils.mergeObject(context, { anarchy: { ready: true } });\n      const ItemConstructor = game.system.anarchy.itemClasses[docData.type];\n      if (ItemConstructor) {\n        if (!docData.img) {\n          docData.img = ItemConstructor.defaultIcon;\n        }\n        return new ItemConstructor(docData, context);\n      }\n    }\n    context.anarchy = undefined\n    super(docData, context);\n  }\n\n  static get defaultIcon() {\n    return undefined;\n  }\n\n  getAttributes() {\n    return [];\n  }\n\n  getUsableAttributes() {\n    return this.isActive() ? this.getAttributes() : []\n  }\n\n  getAttributeValue(attribute) {\n    if (this.system.attributes) {\n      return this.system.attributes[attribute]?.value ?? 0;\n    }\n    return 0;\n  }\n\n  hasOwnAnarchy() { return false; }\n  hasGMAnarchy() { return false; }\n\n  hasMatrixMonitor() { return false; }\n  getMatrixMonitor() { return NO_MATRIX_MONITOR }\n\n  async nextConnectionMode() { }\n\n  async setCheckbarValue(checkbarPath, value) {\n    return await this.update({ [checkbarPath]: value })\n  }\n\n  isMetatype() { return this.type == TEMPLATE.itemType.metatype; }\n  isCyberdeck() { return this.type == TEMPLATE.itemType.cyberdeck; }\n  isWeapon() { return this.type == TEMPLATE.itemType.weapon; }\n\n  isActive() { return !this.system.inactive; }\n\n  canReceiveMarks() { return this.system.monitors?.matrix?.canMark; }\n\n  async rollAttribute(attribute) {\n    if (this.parent) {\n      await RollDialog.itemAttributeRoll(this, attribute);\n    }\n  }\n\n  async switchMonitorCheck(monitor, index, checked, sourceActorId = undefined) {\n    await Checkbars.switchMonitorCheck(this.parent, monitor, index, checked, sourceActorId, this);\n  }\n\n  async setCounter(monitor, value) {\n    await Checkbars.setCounter(this, monitor, value);\n  }\n\n\n  async addActorMark(sourceActorId) {\n    await Checkbars.addActorMark(this, sourceActorId);\n  }\n\n  async createModifier(modifier = {}) {\n    modifier = foundry.utils.mergeObject(modifier, {\n      group: 'roll',\n      effect: 'pool',\n      category: 'skill',\n      subCategory: '',\n      value: 0,\n      condition: ''\n    });\n    this._mutateModifiers(values => values.concat([modifier]));\n  }\n\n  async deleteModifier(modifierId) {\n    await this._mutateModifiers(modifiers => modifiers.filter(it => it.id != modifierId));\n  }\n\n  async changeModifierSelection(modifierId, select, value) {\n    let impact = this._computeModifierImpact(select, value);\n\n    this._applyModifierUpdate(modifierId, impact);\n  }\n\n  _computeModifierImpact(select, value) {\n    switch (select) {\n      case 'group': return m => {\n        if (m.group != value) {\n          m.group = value;\n          m.effect = '';\n          m.category = '';\n          m.subCategory = '';\n        }\n      };\n      case 'effect': return m => m.effect = value;\n      case 'category': return m => {\n        if (m.category != value) {\n          m.category = value;\n          m.subCategory = '';\n        }\n      };\n      case 'subCategory': return m => m.subCategory = value;\n    }\n    return m => { };\n  }\n\n  async changeModifierValue(modifierId, value) {\n    this._applyModifierUpdate(modifierId, m => m.value = Number(value));\n  }\n\n  async changeModifierCondition(modifierId, value) {\n    this._applyModifierUpdate(modifierId, m => m.condition = value);\n  }\n\n  async _applyModifierUpdate(id, updateFunction = m => { }) {\n    await this._mutateModifiers(values => values.map(it => {\n      if (it.id == id) {\n        updateFunction(it);\n      }\n      return it;\n    }));\n  }\n\n  async _mutateModifiers(mutation = values => values) {\n    const modifiers = mutation(this.system.modifiers);\n    Misc.reindexIds(modifiers);\n    await this.update({ 'system.modifiers': modifiers });\n  }\n\n  prepateShortcut() {\n    return undefined;\n  }\n}\n\n","import { ICONS_PATH } from \"../constants.js\";\nimport { AnarchyBaseItem } from \"./anarchy-base-item.js\";\n\nexport class SkillItem extends AnarchyBaseItem {\n\n  static get defaultIcon() {\n    return `${ICONS_PATH}/skills/skills.svg`;\n  }\n\n  static prepareSkill(skillCode) {\n    const skill = game.system.anarchy.skills.get(skillCode);\n    if (!skill) {\n      return {\n        img: this.defaultIcon,\n        system: {\n          code: skillCode,\n          attribute: '',\n          hasDrain: false,\n          hasConvergence: false\n        }\n      }\n    }\n\n    const updates = {\n      img: skill.icon,\n      system: {\n        code: skill.code,\n        attribute: skill.attribute,\n        hasDrain: skill.hasDrain ? true : false,\n        hasConvergence: skill.hasConvergence ? true : false\n      }\n    }\n    if (skill.code != 'knowledge') {\n      updates.name = game.i18n.localize(skill.labelkey)\n    }\n    return updates\n  }\n\n  isKnowledgeSkill() {\n    return this.system.code == 'knowledge';\n  }\n\n  isGeneralSkill() {\n    return this.system.code != 'knowledge';\n  }\n\n  prepareShortcut() {\n    return {\n      img: this.img,\n      label: this.system.specialization ? `${this.name}: ${this.system.specialization}` : this.name,\n      callback: token => token.actor.rollSkill(this, this.system.specialization),\n    };\n  }\n}","import { ICONS_PATH, TEMPLATE, TEMPLATES_PATH } from \"../constants.js\";\nimport { ANARCHY } from \"../config.js\";\nimport { Enums } from \"../enums.js\";\nimport { AnarchyBaseItem } from \"./anarchy-base-item.js\";\nimport { Checkbars } from \"../common/checkbars.js\";\nimport { AnarchyUsers } from \"../users.js\";\nimport { ROLL_PARAMETER_CATEGORY } from \"../roll/roll-parameters.js\";\nimport { ANARCHY_HOOKS } from \"../hooks-manager.js\";\nimport { AttributeActions } from \"../attribute-actions.js\";\nimport { ErrorManager } from \"../error-manager.js\";\nimport { Misc } from \"../misc.js\";\nimport { SkillItem } from \"./skill-item.js\";\n\nconst AREA_TARGETS = {\n  none: { targets: 1, adjust: [0] },\n  shotgun: { targets: 2, adjust: [0, -2] },\n  circle: { targets: undefined },\n  cone: { targets: undefined },\n  rect: { targets: undefined },\n  ray: { targets: undefined },\n}\n\n// weapon range\nconst WEAPON_RANGE_PARAMETER = {\n  code: 'weapon-range',\n  options: {\n    flags: { editable: true, },\n    order: 20, category: ROLL_PARAMETER_CATEGORY.pool,\n    labelkey: ANARCHY.common.roll.modifiers.weaponRange,\n    hbsTemplateRoll: `${TEMPLATES_PATH}/roll/parts/select-option.hbs`,\n    hbsTemplateChat: undefined, //``\n  },\n  isUsed: (p) => true,\n  condition: context => context.weapon,\n  factory: context => {\n    const ranges = context.weapon.getRanges();\n    const rangeValues = ranges.map(it => it.value);\n    return {\n      value: ranges[0].value,\n      min: Math.min(...rangeValues),\n      max: Math.max(...rangeValues),\n      choices: ranges,\n      selected: game.i18n.localize(ranges[0].labelkey)\n    }\n  }\n}\nconst WEAPON_AREA_PARAMETER = {\n  code: 'weapon-area',\n  options: {\n    used: true,\n    order: 20, category: ROLL_PARAMETER_CATEGORY.pool,\n    labelkey: ANARCHY.common.roll.modifiers.weaponArea,\n    hbsTemplateRoll: `${TEMPLATES_PATH}/roll/parts/input-numeric.hbs`,\n    hbsTemplateChat: undefined, //``\n  },\n  isUsed: (p) => p.used,\n  condition: context => context.weapon && context.weapon.getArea() != TEMPLATE.area.none,\n  factory: context => {\n    const countTargets = context.targeting.targetedTokenIds?.length ?? 1;\n    const areaModifier = context.weapon.getAreaModifier(countTargets);\n    return {\n      value: areaModifier,\n      min: Math.min(0, areaModifier),\n      max: Math.max(0, areaModifier),\n      used: countTargets > 1,\n    }\n  }\n}\n\nexport class WeaponItem extends AnarchyBaseItem {\n\n  static init() {\n    Hooks.once(ANARCHY_HOOKS.REGISTER_ROLL_PARAMETERS, register => {\n      register(WEAPON_AREA_PARAMETER);\n      register(WEAPON_RANGE_PARAMETER);\n    });\n  }\n\n  static get defaultIcon() {\n    return `${ICONS_PATH}/weapons/mac-10.svg`;\n  }\n\n  isWeaponSkill(item) {\n    return item.type == 'skill' && item.system.code === this.system.skill;\n  }\n\n  get hasDrain() {\n    const skill = this.getWeaponSkill()\n    return skill.system.hasDrain\n  }\n\n  get hasConvergence() {\n    const skill = this.getWeaponSkill()\n    return skill.system.hasConvergence\n  }\n\n  getWeaponSkill() {\n    const actorSkill = this.actor?.items.find(skill => this.isWeaponSkill(skill))\n    if (actorSkill) {\n      return actorSkill\n    }\n    const worldSkill = game.items.find(skill => this.isWeaponSkill(skill))\n    if (worldSkill) {\n      return worldSkill\n    }\n    return SkillItem.prepareSkill(this.system.skill)\n  }\n\n  getDefense() {\n    return AttributeActions.fixedDefenseCode(this.system.defense);\n  }\n\n  getDamage() {\n    if (!this.parent) {\n      return undefined;\n    }\n    const damageAttributeValue = this.system.damageAttribute\n      ? (this.parent.getAttributeValue(this.system.damageAttribute) ?? 0)\n      : 0;\n    return {\n      value: WeaponItem.damageValue(\n        this.system.monitor,\n        this.system.damage,\n        this.system.damageAttribute,\n        damageAttributeValue\n      ),\n      monitor: this.system.monitor,\n      noArmor: this.system.noArmor,\n      armorMode: WeaponItem.armorMode(this.system.monitor, this.system.noArmor)\n    }\n  }\n\n  static damageValue(monitor, damage, damageAttribute, actorAttribute) {\n    if (monitor == TEMPLATE.monitors.marks) {\n      return 1;\n    }\n    damage = Number(damage);\n    if (damageAttribute) {\n      if (actorAttribute !== undefined) {\n        damage = damage + Math.ceil(Number(actorAttribute) / 2);\n      }\n      else {\n        console.warn('Weapon not attached to an actor');\n        return game.i18n.localize(ANARCHY.item.weapon.weaponWithoutActor);\n      }\n    }\n    return damage;\n  }\n\n  getDamageCode() {\n    return WeaponItem.damageCode(\n      this.system.monitor,\n      this.system.damage,\n      this.system.damageAttribute,\n    );\n  }\n\n  static damageCode(monitor, damage, damageAttribute) {\n    if (monitor == TEMPLATE.monitors.marks) {\n      return '1';\n    }\n    let code = '';\n    if (damageAttribute && ANARCHY.attributes[damageAttribute]) {\n      code += game.i18n.localize(ANARCHY.attributes[damageAttribute]).substring(0, 3).toUpperCase() + '/2 + ';\n    }\n    code += String(damage);\n    return code;\n  }\n\n  static armorMode(monitor, noArmor) {\n    if (Checkbars.useArmor(monitor)) {\n      return noArmor ? 'noArmor' : 'withArmor'\n    }\n    return '';\n  }\n\n  getRanges() {\n    let ranges = [\n      this._getRange('short'),\n    ]\n    if (this.system.range.max != 'short') {\n      ranges.push(this._getRange('medium'));\n    }\n    if (this.system.range.max == 'long') {\n      ranges.push(this._getRange('long'));\n    }\n    return ranges\n  }\n\n  _getRange(range) {\n    return { value: this.system.range[range], labelkey: Enums.getFromList(Enums.getEnums().ranges, range) };\n  }\n\n  prepareShortcut() {\n    return {\n      img: this.img,\n      label: this.name,\n      callback: token => token.actor.rollWeapon(this)\n    };\n  }\n\n  validateTargets(actor) {\n    // TODO: add a weapon \"plane\" to define if attack is in matrix/astral/physical world\n    // use actorCannotApplyDamage?\n    const monitor = this.getDamage()?.monitor\n    const targets = AnarchyUsers.getTargetTokens(game.user);\n    const validTargets = targets.filter(token => token.actor?.canReceiveDamage(monitor))\n    const invalidTargets = targets.filter(token => !token.actor?.canReceiveDamage(monitor))\n      .map(token => token.name)\n\n    if (invalidTargets.length > 0) {\n      ui.notifications.info(game.i18n.format(ANARCHY.common.errors.ignoredTargets, {\n        targets: invalidTargets.reduce(Misc.joiner(', ')),\n      }));\n    }\n    if (validTargets.length == 0) {\n      ui.notifications.info(game.i18n.format(ANARCHY.common.errors.noTargetSelected, {\n        weapon: this.name ?? game.i18n.localize(ANARCHY.itemType.singular.weapon)\n      }));\n    }\n    else {\n      this.checkWeaponTargetsCount(validTargets)\n      // TODO: could check LOS, distance? ...\n    }\n    return validTargets;\n  }\n\n  checkWeaponTargetsCount(targets) {\n    const area = this.system.area;\n    const areaTargets = AREA_TARGETS[area] ?? {};\n    ErrorManager.checkTargetsCount(areaTargets.targets ?? 0, targets, area);\n  }\n\n  getAreaModifier(countTargets) {\n    const area = this.getArea();\n    const areaTargets = AREA_TARGETS[area] ?? {};\n    if (areaTargets.targets && areaTargets.adjust && countTargets <= areaTargets.targets) {\n      return areaTargets.adjust[countTargets - 1] ?? 0;\n    }\n    return 0;\n  }\n\n  getArea() {\n    if (this.system.area == '') {\n      return TEMPLATE.area.none;\n    }\n    return this.system.area ?? TEMPLATE.area.none;\n  }\n}","import { AnarchyBaseActor } from \"./actor/base-actor.js\";\nimport { CharacterEnhancedSheet } from \"./actor/character-enhanced-sheet.js\";\nimport { Damage } from \"./damage.js\";\nimport { Enums } from \"./enums.js\";\nimport { Grammar } from \"./grammar.js\";\nimport { Icons } from \"./icons.js\";\nimport { WeaponItem } from \"./item/weapon-item.js\";\nimport { Misc } from \"./misc.js\";\n\nconst HBS_PARTIAL_TEMPLATES = [\n  // -- monitors\n  'systems/anarchy/templates/monitors/anarchy-actor.hbs',\n  'systems/anarchy/templates/monitors/armor.hbs',\n  'systems/anarchy/templates/monitors/edge.hbs',\n  'systems/anarchy/templates/actor/parts/matrix-cyberdeck.hbs',\n  'systems/anarchy/templates/monitors/matrix.hbs',\n  'systems/anarchy/templates/monitors/physical.hbs',\n  'systems/anarchy/templates/monitors/social-credibility.hbs',\n  'systems/anarchy/templates/monitors/social-rumor.hbs',\n  'systems/anarchy/templates/monitors/structure.hbs',\n  'systems/anarchy/templates/monitors/stun.hbs',\n  'systems/anarchy/templates/actor/character/name.hbs',\n\n  // character\n  'systems/anarchy/templates/actor/character/capacity.hbs',\n  'systems/anarchy/templates/actor/character/description.hbs',\n  'systems/anarchy/templates/actor/character/essence.hbs',\n  'systems/anarchy/templates/actor/character/genre.hbs',\n  'systems/anarchy/templates/actor/character/karma.hbs',\n  'systems/anarchy/templates/actor/character/metatype.hbs',\n  'systems/anarchy/templates/actor/character/social-celebrity.hbs',\n  // character parts\n  'systems/anarchy/templates/actor/character-limited.hbs',\n  'systems/anarchy/templates/actor/parts/words.hbs',\n  'systems/anarchy/templates/actor/parts/contact.hbs',\n  'systems/anarchy/templates/actor/parts/contacts.hbs',\n  'systems/anarchy/templates/actor/parts/gear.hbs',\n  'systems/anarchy/templates/actor/parts/gears.hbs',\n  // character enhanced\n  'systems/anarchy/templates/actor/character-enhanced/metatype.hbs',\n  'systems/anarchy/templates/actor/character-enhanced/attributes.hbs',\n  'systems/anarchy/templates/actor/character-enhanced/capacity.hbs',\n  'systems/anarchy/templates/actor/character-enhanced/attribute.hbs',\n  'systems/anarchy/templates/actor/character-enhanced/karma.hbs',\n  'systems/anarchy/templates/actor/character-enhanced/hexabox.hbs',\n  'systems/anarchy/templates/actor/character-enhanced/words.hbs',\n  'systems/anarchy/templates/actor/character-enhanced/skills.hbs',\n  'systems/anarchy/templates/actor/character-enhanced/skill.hbs',\n  'systems/anarchy/templates/actor/character-enhanced/shadowamp.hbs',\n  'systems/anarchy/templates/actor/character-enhanced/shadowamps.hbs',\n  'systems/anarchy/templates/actor/character-enhanced/quality.hbs',\n  'systems/anarchy/templates/actor/character-enhanced/qualities.hbs',\n  'systems/anarchy/templates/actor/character-enhanced/monitors.hbs',\n  'systems/anarchy/templates/actor/character-enhanced/armor.hbs',\n  'systems/anarchy/templates/actor/character-enhanced/stun.hbs',\n  'systems/anarchy/templates/actor/character-enhanced/physical.hbs',\n  'systems/anarchy/templates/actor/character-enhanced/checkbar.hbs',\n  'systems/anarchy/templates/actor/character-enhanced/check-element.hbs',\n  'systems/anarchy/templates/actor/character-enhanced/anarchy-actor.hbs',\n  'systems/anarchy/templates/actor/character-enhanced/social-credibility.hbs',\n  'systems/anarchy/templates/actor/character-enhanced/social-rumor.hbs',\n  'systems/anarchy/templates/actor/character-enhanced/edge.hbs',\n  'systems/anarchy/templates/actor/character-enhanced/actions.hbs',\n  'systems/anarchy/templates/actor/character-enhanced/attributebutton.hbs',\n  'systems/anarchy/templates/actor/character-enhanced/attributebuttons.hbs',\n  'systems/anarchy/templates/actor/character-enhanced/gears.hbs',\n  'systems/anarchy/templates/actor/character-enhanced/gear.hbs',\n  'systems/anarchy/templates/actor/character-enhanced/cyberdecks.hbs',\n  'systems/anarchy/templates/actor/character-enhanced/cyberdeck.hbs',\n  'systems/anarchy/templates/actor/character-enhanced/weapons.hbs',\n  'systems/anarchy/templates/actor/character-enhanced/weapon.hbs',\n  'systems/anarchy/templates/actor/character-enhanced/damage-code.hbs',\n  'systems/anarchy/templates/actor/character-enhanced/damage-armor.hbs',\n  'systems/anarchy/templates/actor/character-enhanced/story.hbs',\n  'systems/anarchy/templates/actor/character-enhanced/equipments.hbs',\n  'systems/anarchy/templates/actor/character-enhanced/contact.hbs',\n  'systems/anarchy/templates/actor/character-enhanced/contacts.hbs',\n  'systems/anarchy/templates/actor/character-enhanced/gmnotes.hbs',\n  'systems/anarchy/templates/actor/character-enhanced/description.hbs',\n  'systems/anarchy/templates/actor/character-enhanced/owned-actor.hbs',\n  'systems/anarchy/templates/actor/character-enhanced/owned-actors.hbs',\n  // actor common\n  'systems/anarchy/templates/actor/parts/attributebutton.hbs',\n  'systems/anarchy/templates/actor/parts/attributebuttons.hbs',\n  'systems/anarchy/templates/actor/parts/attribute.hbs',\n  'systems/anarchy/templates/actor/parts/attributes.hbs',\n  'systems/anarchy/templates/actor/parts/description.hbs',\n  'systems/anarchy/templates/actor/parts/gmnotes.hbs',\n  'systems/anarchy/templates/actor/parts/owned-actor.hbs',\n  'systems/anarchy/templates/actor/parts/owned-actors.hbs',\n  'systems/anarchy/templates/monitors/marks-actor.hbs',\n  'systems/anarchy/templates/monitors/marks.hbs',\n  'systems/anarchy/templates/actor/parts/ownership.hbs',\n  'systems/anarchy/templates/actor/parts/qualities.hbs',\n  'systems/anarchy/templates/actor/parts/quality.hbs',\n  'systems/anarchy/templates/actor/parts/shadowamp.hbs',\n  'systems/anarchy/templates/actor/parts/shadowamps.hbs',\n  'systems/anarchy/templates/actor/parts/item-attribute.hbs',\n  'systems/anarchy/templates/actor/parts/cyberdeck.hbs',\n  'systems/anarchy/templates/actor/parts/cyberdecks.hbs',\n  'systems/anarchy/templates/actor/parts/skill.hbs',\n  'systems/anarchy/templates/actor/parts/skills.hbs',\n  'systems/anarchy/templates/actor/parts/weapon-range.hbs',\n  'systems/anarchy/templates/actor/parts/weapon.hbs',\n  'systems/anarchy/templates/actor/parts/weapons.hbs',\n  //-- NPC\n  'systems/anarchy/templates/actor/npc-parts/quality.hbs',\n  'systems/anarchy/templates/actor/npc-parts/qualities.hbs',\n  'systems/anarchy/templates/actor/npc-parts/shadowamp.hbs',\n  'systems/anarchy/templates/actor/npc-parts/shadowamps.hbs',\n  'systems/anarchy/templates/actor/npc-parts/skill.hbs',\n  'systems/anarchy/templates/actor/npc-parts/skills.hbs',\n  'systems/anarchy/templates/actor/npc-parts/weapon.hbs',\n  'systems/anarchy/templates/actor/npc-parts/weapons.hbs',\n  // Vehicles\n  'systems/anarchy/templates/actor/vehicle/vehicle-attributes.hbs',\n  'systems/anarchy/templates/actor/vehicle/vehicle-category.hbs',\n  'systems/anarchy/templates/actor/vehicle/vehicle-skill.hbs',\n  // item\n  'systems/anarchy/templates/item/parts/inactive.hbs',\n  'systems/anarchy/templates/item/parts/itemname.hbs',\n  'systems/anarchy/templates/item/parts/modifier.hbs',\n  'systems/anarchy/templates/item/parts/modifiers.hbs',\n  'systems/anarchy/templates/item/parts/references.hbs',\n  // common&technical partials\n  'systems/anarchy/templates/monitors/anarchy.hbs',\n  'systems/anarchy/templates/monitors/anarchy-scene.hbs',\n  'systems/anarchy/templates/common/view-mode.hbs',\n  'systems/anarchy/templates/common/check-element.hbs',\n  'systems/anarchy/templates/common/checkbar.hbs',\n  'systems/anarchy/templates/common/label.hbs',\n  'systems/anarchy/templates/common/damage-code.hbs',\n  'systems/anarchy/templates/common/damage-armor.hbs',\n  'systems/anarchy/templates/common/enum-value-label.hbs',\n  'systems/anarchy/templates/common/favorite.hbs',\n  'systems/anarchy/templates/common/item-control-add.hbs',\n  'systems/anarchy/templates/common/item-control-activate.hbs',\n  'systems/anarchy/templates/common/item-controls.hbs',\n  'systems/anarchy/templates/common/control-connectionMode.hbs',\n  'systems/anarchy/templates/common/actor-reference.hbs',\n  // dialogs\n  'systems/anarchy/templates/dialog/roll-modifier.hbs',\n  // apps\n  'systems/anarchy/templates/app/gm-anarchy.hbs',\n  'systems/anarchy/templates/app/gm-difficulty.hbs',\n  'systems/anarchy/templates/app/gm-difficulty-buttons.hbs',\n];\n\nexport class HandlebarsManager {\n\n  constructor() {\n    Hooks.once('ready', () => this.onReady());\n  }\n\n  async onReady() {\n    this.registerBasicHelpers();\n    await loadTemplates(Misc.distinct(HBS_PARTIAL_TEMPLATES))\n  }\n\n  registerBasicHelpers() {\n    Handlebars.registerHelper('concat', (...args) => Misc.join(args.slice(0, -1)));\n    Handlebars.registerHelper('substring', (str, from, to) => str?.substring(from, to));\n    Handlebars.registerHelper('toUpperCase', Grammar.toUpperCaseNoAccent);\n    Handlebars.registerHelper('weaponDamageLetter', Damage.letter);\n    Handlebars.registerHelper('weaponDamageCode', WeaponItem.damageCode);\n    Handlebars.registerHelper('weaponDamageValue', WeaponItem.damageValue);\n    Handlebars.registerHelper('weaponArmorMode', WeaponItem.armorMode);\n\n    Handlebars.registerHelper('skillValue', (actor, skillId) => actor.getSkillValue(skillId, false));\n    Handlebars.registerHelper('specializationValue', (actor, skillId) => actor.getSkillValue(skillId, true));\n    Handlebars.registerHelper('for', HandlebarsManager.hbsForLoop);\n    Handlebars.registerHelper('modulo', (value, divisor) => value % divisor);\n    Handlebars.registerHelper('divint', Misc.divint);\n    Handlebars.registerHelper('divup', Misc.divup);\n    Handlebars.registerHelper('sum', (v1, v2) => v1 + v2);\n    Handlebars.registerHelper('times', (v1, v2) => v1 * v2);\n    Handlebars.registerHelper('diff', (v1, v2) => v1 - v2);\n    Handlebars.registerHelper('min', (v1, v2) => Math.min(v1, v2));\n    Handlebars.registerHelper('max', (v1, v2) => Math.max(v1, v2));\n    Handlebars.registerHelper('either', (a, b) => a ? a : b);\n    Handlebars.registerHelper('isInteger', a => a !== undefined && Number.isInteger(a));\n    Handlebars.registerHelper('actorAttribute', (attribute, actor, item = undefined) => actor.getAttributeValue(attribute, item));\n    Handlebars.registerHelper('localizeAttribute', Enums.localizeAttribute);\n    Handlebars.registerHelper('iconFA', Icons.fontAwesome);\n    Handlebars.registerHelper('iconSrc', Icons.iconSystemPath);\n    Handlebars.registerHelper('iconPath', Icons.iconPath);\n    Handlebars.registerHelper('iconD6', Icons.iconD6);\n    Handlebars.registerHelper('getActor', id => game.actors.get(id));\n    Handlebars.registerHelper('actorHasFavorite', (actorId, options) => HandlebarsManager.checkHasFavorite(actorId, options));\n    Handlebars.registerHelper('padWordListToMin', AnarchyBaseActor.padWordListToMin);\n    Handlebars.registerHelper('sortSkills', AnarchyBaseActor.sortSkills);\n    Handlebars.registerHelper('sortShadowamps', AnarchyBaseActor.sortShadowamps);\n    Handlebars.registerHelper('sortQualities', AnarchyBaseActor.sortQualities);\n    Handlebars.registerHelper('sortAttributeButton', AnarchyBaseActor.sortAttributeButton);\n    Handlebars.registerHelper('range', function (min, max) { let array = []; for (let i = min; i <= max; i++) { array.push(i); } return array; });\n    Handlebars.registerHelper('ifGte', function (value, threshold, options) { if (value >= threshold) { return options.fn(this); } else { return options.inverse(this); } });\n    Handlebars.registerHelper('ifTabClosed', CharacterEnhancedSheet.ifTabClosed);\n    Handlebars.registerHelper('actorTabClosed', CharacterEnhancedSheet.actorTabClosed);\n    Handlebars.registerHelper('length', function(context) { return context?.length || 0; }); }\n\n  static hbsForLoop(start, end, options) {\n    let accum = '';\n    for (let i = start; i < end; ++i) {\n      accum += options.fn(i);\n    }\n    return accum;\n  }\n\n  static checkHasFavorite(actorId, options) {\n    const actor = game.actors.get(actorId);\n    return actor?.hasFavorite(options.hash.type, options.hash.id);\n  }\n\n}","import { ANARCHY } from \"./config.js\";\nimport { LOG_HEAD, SYSTEM_NAME } from \"./constants.js\";\nimport { ANARCHY_HOOKS, HooksManager } from \"./hooks-manager.js\";\n\nconst DEFAULT_CSS_CLASS = 'default-css-class';\nconst CSS_DEFAULT = 'style-anarchy-shadowrun';\n\n// Enhanced theme definitions with metadata\nconst DEFAULT_STYLES = [\n  {\n    id: 'anarchy-shadowrun',\n    name: 'Shadowrun Anarchy',\n    cssClass: CSS_DEFAULT,\n    description: 'The classic Shadowrun Anarchy theme with cyberpunk aesthetics',\n    author: 'Anarchy System',\n    version: '2.0.0',\n    category: 'official',\n    accessibility: {\n      highContrast: false,\n      reducedMotion: false,\n      largeText: false\n    },\n    preview: {\n      primaryColor: '#f4d03f',\n      backgroundColor: '#ffffff',\n      textColor: '#1a1a1a'\n    }\n  },\n  {\n    id: 'dark',\n    name: 'Dark',\n    cssClass: 'style-dark',\n    description: 'A sleek dark theme optimized for low-light environments',\n    author: 'Anarchy System',\n    version: '2.0.0',\n    category: 'official',\n    accessibility: {\n      highContrast: false,\n      reducedMotion: false,\n      largeText: false\n    },\n    preview: {\n      primaryColor: '#f4d03f',\n      backgroundColor: '#1a0f0f',\n      textColor: '#e6d4a3'\n    }\n  },\n  {\n    id: 'darkglass',\n    name: 'Dark Glass',\n    cssClass: 'style-darkglass',\n    description: 'A sophisticated dark theme with glass-like transparency effects',\n    author: 'Anarchy System',\n    version: '2.0.0',\n    category: 'official',\n    accessibility: {\n      highContrast: false,\n      reducedMotion: false,\n      largeText: false\n    },\n    preview: {\n      primaryColor: '#3498db',\n      backgroundColor: '#0d0d0d',\n      textColor: '#f2f2f2'\n    }\n  }\n]\n\n/**\n * The Styles class manages the addition of different styles\n */\nexport class Styles {\n  constructor() {\n    this.availableStyles = {};\n    this.themeMetadata = new Map();\n    this.themeSettings = new Map();\n    this.currentTheme = null;\n    this.themeChangeCallbacks = new Set();\n    \n    // Initialize enhanced theme system\n    this.initializeThemes();\n    \n    HooksManager.register(ANARCHY_HOOKS.REGISTER_STYLES);\n\n    Hooks.once(ANARCHY_HOOKS.REGISTER_STYLES, register => {\n      DEFAULT_STYLES.forEach(theme => {\n        register(theme.cssClass, theme.name);\n        this.registerThemeMetadata(theme);\n      });\n    });\n    Hooks.once('ready', () => this.onReady());\n    \n    // Listen for theme changes\n    Hooks.on('updateSetting', (setting, update, options, id) => {\n      if (setting.key === `${SYSTEM_NAME}.${DEFAULT_CSS_CLASS}`) {\n        this.onThemeChanged(update);\n      }\n    });\n  }\n\n  async onReady() {\n    console.groupCollapsed(LOG_HEAD + 'Styles.onReady');\n    \n    // Call original registration hooks\n    Hooks.callAll(ANARCHY_HOOKS.REGISTER_STYLES, (style, name) => this.availableStyles[style] = name);\n    console.info(LOG_HEAD + 'Styles.onReady | registered styles', this.availableStyles);\n\n    // Register enhanced settings\n    await this.registerEnhancedSettings();\n    \n    // Initialize current theme\n    this.currentTheme = this.selectCssClass();\n    this.applyTheme(this.currentTheme);\n    \n    console.groupEnd();\n  }\n\n  async registerEnhancedSettings() {\n    // Main theme setting (enhanced)\n    game.settings.register(SYSTEM_NAME, DEFAULT_CSS_CLASS, {\n      scope: 'world',\n      name: game.i18n.localize(ANARCHY.settings.defaultCssClass.name),\n      hint: game.i18n.localize(ANARCHY.settings.defaultCssClass.hint),\n      config: true,\n      default: CSS_DEFAULT,\n      choices: this.availableStyles,\n      type: String,\n      onChange: (value) => this.onThemeChanged(value)\n    });\n\n    // Theme customization settings\n    game.settings.register(SYSTEM_NAME, 'theme-customizations', {\n      scope: 'world',\n      name: 'Theme Customizations',\n      hint: 'Advanced theme customization settings',\n      config: false,\n      default: {},\n      type: Object\n    });\n\n    // User theme preferences\n    game.settings.register(SYSTEM_NAME, 'user-theme-preferences', {\n      scope: 'client',\n      name: 'User Theme Preferences',\n      hint: 'Personal theme preferences and accessibility settings',\n      config: false,\n      default: {\n        accessibility: {\n          highContrast: false,\n          reducedMotion: false,\n          largeText: false\n        },\n        customizations: {}\n      },\n      type: Object\n    });\n  }\n\n  selectCssClass() {\n    const style = game.settings.get(SYSTEM_NAME, DEFAULT_CSS_CLASS);\n    return this.availableStyles[style] ? style : CSS_DEFAULT;\n  }\n\n  // =============================================================================\n  // ENHANCED THEME MANAGEMENT METHODS\n  // =============================================================================\n\n  initializeThemes() {\n    console.groupCollapsed(LOG_HEAD + 'Styles.initializeThemes');\n    \n    // Register enhanced themes with metadata\n    DEFAULT_STYLES.forEach(theme => {\n      this.themeMetadata.set(theme.id, theme);\n      this.themeSettings.set(theme.id, {\n        customizations: {},\n        userPreferences: {},\n        lastUsed: null\n      });\n      console.info(LOG_HEAD + `Registered theme: ${theme.name} v${theme.version}`);\n    });\n    \n    console.groupEnd();\n  }\n\n  registerThemeMetadata(theme) {\n    this.themeMetadata.set(theme.id, theme);\n    \n    // Store theme-specific settings\n    this.themeSettings.set(theme.id, {\n      customizations: {},\n      userPreferences: {},\n      lastUsed: null\n    });\n  }\n\n  // Enhanced theme application\n  applyTheme(themeClass) {\n    console.groupCollapsed(LOG_HEAD + 'Styles.applyTheme', themeClass);\n    \n    const themeId = this.getThemeIdFromClass(themeClass);\n    const theme = this.themeMetadata.get(themeId);\n    \n    if (!theme) {\n      console.warn(LOG_HEAD + 'Theme not found:', themeId);\n      console.groupEnd();\n      return;\n    }\n\n    // Apply theme class to relevant elements\n    this.applyThemeClass(themeClass);\n    \n    // Apply user customizations\n    this.applyUserCustomizations(themeId);\n    \n    // Apply accessibility settings\n    this.applyAccessibilitySettings();\n    \n    // Update theme metadata\n    this.updateThemeUsage(themeId);\n    \n    // Notify theme change callbacks\n    this.notifyThemeChange(theme);\n    \n    console.info(LOG_HEAD + 'Applied theme:', theme.name);\n    console.groupEnd();\n  }\n\n  applyThemeClass(themeClass) {\n    // Remove existing theme classes\n    const existingClasses = Array.from(document.body.classList)\n      .filter(cls => cls.startsWith('style-'));\n    \n    existingClasses.forEach(cls => document.body.classList.remove(cls));\n    \n    // Apply new theme class\n    document.body.classList.add(themeClass);\n    \n    // Apply to GM Manager if it exists\n    const gmManager = document.getElementById('gm-manager');\n    if (gmManager) {\n      existingClasses.forEach(cls => gmManager.classList.remove(cls));\n      gmManager.classList.add(themeClass);\n    }\n  }\n\n  applyUserCustomizations(themeId) {\n    const customizations = game.settings.get(SYSTEM_NAME, 'theme-customizations');\n    const themeCustomizations = customizations[themeId];\n    \n    if (themeCustomizations) {\n      // Apply CSS custom property overrides\n      const root = document.documentElement;\n      Object.entries(themeCustomizations).forEach(([property, value]) => {\n        root.style.setProperty(`--${property}`, value);\n      });\n    }\n  }\n\n  applyAccessibilitySettings() {\n    const preferences = game.settings.get(SYSTEM_NAME, 'user-theme-preferences');\n    const accessibility = preferences.accessibility || {};\n    \n    const root = document.documentElement;\n    \n    // High contrast mode\n    if (accessibility.highContrast) {\n      root.classList.add('accessibility-high-contrast');\n    } else {\n      root.classList.remove('accessibility-high-contrast');\n    }\n    \n    // Reduced motion\n    if (accessibility.reducedMotion) {\n      root.classList.add('accessibility-reduced-motion');\n    } else {\n      root.classList.remove('accessibility-reduced-motion');\n    }\n    \n    // Large text\n    if (accessibility.largeText) {\n      root.classList.add('accessibility-large-text');\n    } else {\n      root.classList.remove('accessibility-large-text');\n    }\n  }\n\n  updateThemeUsage(themeId) {\n    const settings = this.themeSettings.get(themeId);\n    if (settings) {\n      settings.lastUsed = new Date().toISOString();\n      this.themeSettings.set(themeId, settings);\n    }\n  }\n\n  onThemeChanged(newThemeClass) {\n    console.info(LOG_HEAD + 'Theme changed to:', newThemeClass);\n    this.currentTheme = newThemeClass;\n    this.applyTheme(newThemeClass);\n  }\n\n  notifyThemeChange(theme) {\n    this.themeChangeCallbacks.forEach(callback => {\n      try {\n        callback(theme);\n      } catch (error) {\n        console.error(LOG_HEAD + 'Theme change callback error:', error);\n      }\n    });\n  }\n\n  // =============================================================================\n  // THEME METADATA AND UTILITIES\n  // =============================================================================\n\n  getThemeIdFromClass(cssClass) {\n    return cssClass.replace('style-', '');\n  }\n\n  getThemeMetadata(themeId) {\n    return this.themeMetadata.get(themeId);\n  }\n\n  getAllThemes() {\n    return Array.from(this.themeMetadata.values());\n  }\n\n  getThemesByCategory(category) {\n    return this.getAllThemes().filter(theme => theme.category === category);\n  }\n\n  // =============================================================================\n  // THEME CUSTOMIZATION METHODS\n  // =============================================================================\n\n  setThemeCustomization(themeId, property, value) {\n    const customizations = game.settings.get(SYSTEM_NAME, 'theme-customizations');\n    \n    if (!customizations[themeId]) {\n      customizations[themeId] = {};\n    }\n    \n    customizations[themeId][property] = value;\n    game.settings.set(SYSTEM_NAME, 'theme-customizations', customizations);\n    \n    // Apply immediately if it's the current theme\n    if (this.getThemeIdFromClass(this.currentTheme) === themeId) {\n      document.documentElement.style.setProperty(`--${property}`, value);\n    }\n    \n    console.info(LOG_HEAD + `Theme customization set: ${themeId}.${property} = ${value}`);\n  }\n\n  getThemeCustomization(themeId, property) {\n    const customizations = game.settings.get(SYSTEM_NAME, 'theme-customizations');\n    return customizations[themeId]?.[property];\n  }\n\n  resetThemeCustomizations(themeId) {\n    const customizations = game.settings.get(SYSTEM_NAME, 'theme-customizations');\n    delete customizations[themeId];\n    game.settings.set(SYSTEM_NAME, 'theme-customizations', customizations);\n    \n    // Reapply theme if it's current\n    if (this.getThemeIdFromClass(this.currentTheme) === themeId) {\n      this.applyTheme(this.currentTheme);\n    }\n    \n    console.info(LOG_HEAD + `Reset customizations for theme: ${themeId}`);\n  }\n\n  // =============================================================================\n  // ACCESSIBILITY METHODS\n  // =============================================================================\n\n  setAccessibilitySetting(setting, value) {\n    const preferences = game.settings.get(SYSTEM_NAME, 'user-theme-preferences');\n    preferences.accessibility[setting] = value;\n    game.settings.set(SYSTEM_NAME, 'user-theme-preferences', preferences);\n    \n    this.applyAccessibilitySettings();\n    console.info(LOG_HEAD + `Accessibility setting changed: ${setting} = ${value}`);\n  }\n\n  getAccessibilitySetting(setting) {\n    const preferences = game.settings.get(SYSTEM_NAME, 'user-theme-preferences');\n    return preferences.accessibility?.[setting] || false;\n  }\n\n  // =============================================================================\n  // CSS CUSTOM PROPERTY UTILITIES\n  // =============================================================================\n\n  getCSSVariable(property) {\n    return getComputedStyle(document.documentElement).getPropertyValue(`--${property}`).trim();\n  }\n\n  setCSSVariable(property, value) {\n    document.documentElement.style.setProperty(`--${property}`, value);\n    console.info(LOG_HEAD + `CSS variable set: --${property} = ${value}`);\n  }\n\n  // =============================================================================\n  // THEME VALIDATION AND DEBUGGING\n  // =============================================================================\n\n  validateTheme(themeId) {\n    const theme = this.themeMetadata.get(themeId);\n    if (!theme) {\n      return { valid: false, errors: ['Theme not found'] };\n    }\n\n    const errors = [];\n    \n    // Check required fields\n    if (!theme.name) errors.push('Theme name is required');\n    if (!theme.cssClass) errors.push('Theme CSS class is required');\n    if (!theme.version) errors.push('Theme version is required');\n    \n    // Check CSS class exists in DOM\n    const testElement = document.createElement('div');\n    testElement.className = theme.cssClass;\n    document.body.appendChild(testElement);\n    \n    const hasStyles = getComputedStyle(testElement).getPropertyValue('--anarchy-background-attributes');\n    document.body.removeChild(testElement);\n    \n    if (!hasStyles) {\n      errors.push('Theme CSS not loaded or invalid');\n    }\n\n    return {\n      valid: errors.length === 0,\n      errors,\n      theme\n    };\n  }\n\n  debugCurrentTheme() {\n    const themeId = this.getThemeIdFromClass(this.currentTheme);\n    const theme = this.themeMetadata.get(themeId);\n    const validation = this.validateTheme(themeId);\n    \n    console.group(LOG_HEAD + 'Theme Debug Info');\n    console.info('Current Theme:', theme);\n    console.info('Validation:', validation);\n    console.info('CSS Variables:', this.getCurrentThemeVariables());\n    console.info('Customizations:', this.themeSettings.get(themeId));\n    console.groupEnd();\n    \n    return {\n      theme,\n      validation,\n      variables: this.getCurrentThemeVariables(),\n      customizations: this.themeSettings.get(themeId)\n    };\n  }\n\n  getCurrentThemeVariables() {\n    const root = getComputedStyle(document.documentElement);\n    const variables = {};\n    \n    // Get all CSS custom properties\n    for (let i = 0; i < root.length; i++) {\n      const property = root[i];\n      if (property.startsWith('--')) {\n        variables[property] = root.getPropertyValue(property).trim();\n      }\n    }\n    \n    return variables;\n  }\n\n  // =============================================================================\n  // THEME CHANGE CALLBACK SYSTEM\n  // =============================================================================\n\n  onThemeChange(callback) {\n    this.themeChangeCallbacks.add(callback);\n    return () => this.themeChangeCallbacks.delete(callback);\n  }\n\n  // =============================================================================\n  // IMPORT/EXPORT UTILITIES\n  // =============================================================================\n\n  exportThemeData() {\n    return {\n      themes: Array.from(this.themeMetadata.values()),\n      currentTheme: this.currentTheme,\n      customizations: game.settings.get(SYSTEM_NAME, 'theme-customizations'),\n      userPreferences: game.settings.get(SYSTEM_NAME, 'user-theme-preferences'),\n      systemInfo: {\n        version: game.system.version,\n        timestamp: new Date().toISOString()\n      }\n    };\n  }\n\n  importThemeCustomizations(data) {\n    if (data.customizations) {\n      game.settings.set(SYSTEM_NAME, 'theme-customizations', data.customizations);\n    }\n    \n    if (data.userPreferences) {\n      game.settings.set(SYSTEM_NAME, 'user-theme-preferences', data.userPreferences);\n    }\n    \n    // Reapply current theme\n    this.applyTheme(this.currentTheme);\n    \n    ui.notifications.info('Theme customizations imported successfully.');\n  }\n\n}","// Theme Utilities - Advanced Theme Operations\n// This module provides utilities for theme manipulation, analysis, and management\n\nimport { LOG_HEAD, SYSTEM_NAME } from './constants.js';\n\n/**\n * Theme Utilities class providing advanced theme operations\n */\nexport class ThemeUtilities {\n  constructor(stylesManager) {\n    this.styles = stylesManager;\n  }\n\n  // =============================================================================\n  // THEME ANALYSIS UTILITIES\n  // =============================================================================\n\n  /**\n   * Analyze theme contrast ratios for accessibility\n   */\n  analyzeThemeContrast(themeId) {\n    const theme = this.styles.getThemeMetadata(themeId);\n    if (!theme) {\n      throw new Error(`Theme ${themeId} not found`);\n    }\n\n    // Apply theme temporarily for analysis\n    const originalTheme = this.styles.currentTheme;\n    this.styles.applyTheme(theme.cssClass);\n\n    const analysis = {\n      themeId,\n      themeName: theme.name,\n      contrastRatios: {},\n      accessibility: {\n        wcagAA: true,\n        wcagAAA: true,\n        issues: []\n      }\n    };\n\n    // Analyze key color combinations\n    const combinations = [\n      { bg: '--background-primary', fg: '--text-primary', name: 'Primary Text' },\n      { bg: '--background-secondary', fg: '--text-secondary', name: 'Secondary Text' },\n      { bg: '--anarchy-background-attributes', fg: '--text-primary', name: 'Attribute Text' },\n      { bg: '--interactive-primary', fg: '--text-inverse', name: 'Button Text' }\n    ];\n\n    combinations.forEach(combo => {\n      const bgColor = this.styles.getCSSVariable(combo.bg.replace('--', ''));\n      const fgColor = this.styles.getCSSVariable(combo.fg.replace('--', ''));\n      \n      if (bgColor && fgColor) {\n        const ratio = this.calculateContrastRatio(bgColor, fgColor);\n        analysis.contrastRatios[combo.name] = {\n          ratio: ratio,\n          wcagAA: ratio >= 4.5,\n          wcagAAA: ratio >= 7,\n          background: bgColor,\n          foreground: fgColor\n        };\n\n        if (ratio < 4.5) {\n          analysis.accessibility.wcagAA = false;\n          analysis.accessibility.issues.push(`${combo.name} fails WCAG AA (${ratio.toFixed(2)}:1)`);\n        }\n        if (ratio < 7) {\n          analysis.accessibility.wcagAAA = false;\n        }\n      }\n    });\n\n    // Restore original theme\n    this.styles.applyTheme(originalTheme);\n\n    return analysis;\n  }\n\n  /**\n   * Calculate contrast ratio between two colors\n   */\n  calculateContrastRatio(color1, color2) {\n    // Simplified contrast calculation\n    // In a real implementation, you'd parse the CSS colors and calculate luminance\n    const luminance1 = this.getRelativeLuminance(color1);\n    const luminance2 = this.getRelativeLuminance(color2);\n    \n    const lighter = Math.max(luminance1, luminance2);\n    const darker = Math.min(luminance1, luminance2);\n    \n    return (lighter + 0.05) / (darker + 0.05);\n  }\n\n  /**\n   * Get relative luminance (simplified)\n   */\n  getRelativeLuminance(color) {\n    // This is a simplified version - in production you'd use a proper color parsing library\n    if (color.includes('hsl')) {\n      // Extract lightness from HSL\n      const match = color.match(/hsl\\([^,]+,\\s*[^,]+,\\s*(\\d+)%/);\n      if (match) {\n        return parseInt(match[1]) / 100;\n      }\n    }\n    return 0.5; // Default fallback\n  }\n\n  // =============================================================================\n  // THEME PERFORMANCE UTILITIES\n  // =============================================================================\n\n  /**\n   * Measure theme application performance\n   */\n  measureThemePerformance(themeClass, iterations = 5) {\n    const measurements = [];\n    \n    for (let i = 0; i < iterations; i++) {\n      const startTime = performance.now();\n      this.styles.applyTheme(themeClass);\n      const endTime = performance.now();\n      measurements.push(endTime - startTime);\n    }\n\n    return {\n      average: measurements.reduce((a, b) => a + b) / measurements.length,\n      min: Math.min(...measurements),\n      max: Math.max(...measurements),\n      measurements\n    };\n  }\n\n  /**\n   * Analyze CSS variable usage across themes\n   */\n  analyzeVariableUsage() {\n    const analysis = {\n      totalVariables: 0,\n      themeVariables: {},\n      commonVariables: [],\n      uniqueVariables: {},\n      redundancy: 0\n    };\n\n    const allThemes = this.styles.getAllThemes();\n    const variableSets = {};\n\n    // Collect variables for each theme\n    allThemes.forEach(theme => {\n      const originalTheme = this.styles.currentTheme;\n      this.styles.applyTheme(theme.cssClass);\n      \n      const variables = this.styles.getCurrentThemeVariables();\n      variableSets[theme.id] = Object.keys(variables);\n      analysis.themeVariables[theme.id] = Object.keys(variables).length;\n      \n      this.styles.applyTheme(originalTheme);\n    });\n\n    // Find common and unique variables\n    const allVariables = new Set();\n    Object.values(variableSets).forEach(vars => {\n      vars.forEach(v => allVariables.add(v));\n    });\n\n    analysis.totalVariables = allVariables.size;\n\n    // Find variables common to all themes\n    analysis.commonVariables = Array.from(allVariables).filter(variable => {\n      return Object.values(variableSets).every(themeVars => themeVars.includes(variable));\n    });\n\n    // Find unique variables per theme\n    Object.entries(variableSets).forEach(([themeId, vars]) => {\n      analysis.uniqueVariables[themeId] = vars.filter(variable => {\n        return !analysis.commonVariables.includes(variable);\n      });\n    });\n\n    // Calculate redundancy\n    const totalVariableInstances = Object.values(analysis.themeVariables).reduce((a, b) => a + b, 0);\n    analysis.redundancy = Math.round((1 - analysis.totalVariables / totalVariableInstances) * 100);\n\n    return analysis;\n  }\n\n  // =============================================================================\n  // THEME GENERATION UTILITIES\n  // =============================================================================\n\n  /**\n   * Generate a new theme based on an existing theme with color modifications\n   */\n  generateThemeVariant(baseThemeId, variantName, colorModifications = {}) {\n    const baseTheme = this.styles.getThemeMetadata(baseThemeId);\n    if (!baseTheme) {\n      throw new Error(`Base theme ${baseThemeId} not found`);\n    }\n\n    const variantId = `${baseThemeId}-${variantName.toLowerCase().replace(/\\s+/g, '-')}`;\n    \n    const variant = {\n      ...baseTheme,\n      id: variantId,\n      name: `${baseTheme.name} (${variantName})`,\n      cssClass: `style-${variantId}`,\n      description: `${baseTheme.description} - ${variantName} variant`,\n      version: `${baseTheme.version}-variant`,\n      category: 'generated',\n      baseTheme: baseThemeId,\n      modifications: colorModifications\n    };\n\n    // Apply color modifications to preview\n    if (colorModifications.primaryColor) {\n      variant.preview.primaryColor = colorModifications.primaryColor;\n    }\n    if (colorModifications.backgroundColor) {\n      variant.preview.backgroundColor = colorModifications.backgroundColor;\n    }\n    if (colorModifications.textColor) {\n      variant.preview.textColor = colorModifications.textColor;\n    }\n\n    return variant;\n  }\n\n  /**\n   * Create accessibility-enhanced theme variant\n   */\n  createAccessibilityVariant(baseThemeId, accessibilityOptions = {}) {\n    const baseTheme = this.styles.getThemeMetadata(baseThemeId);\n    if (!baseTheme) {\n      throw new Error(`Base theme ${baseThemeId} not found`);\n    }\n\n    const variantName = 'Accessible';\n    const variant = this.generateThemeVariant(baseThemeId, variantName);\n    \n    // Apply accessibility enhancements\n    variant.accessibility = {\n      ...baseTheme.accessibility,\n      ...accessibilityOptions,\n      highContrast: accessibilityOptions.highContrast || false,\n      reducedMotion: accessibilityOptions.reducedMotion || false,\n      largeText: accessibilityOptions.largeText || false\n    };\n\n    // Modify colors for better accessibility if high contrast is enabled\n    if (variant.accessibility.highContrast) {\n      variant.preview.backgroundColor = '#000000';\n      variant.preview.textColor = '#ffffff';\n      variant.preview.primaryColor = '#ffff00';\n    }\n\n    return variant;\n  }\n\n  // =============================================================================\n  // THEME VALIDATION UTILITIES\n  // =============================================================================\n\n  /**\n   * Comprehensive theme validation\n   */\n  validateAllThemes() {\n    const results = {\n      valid: 0,\n      invalid: 0,\n      themes: {},\n      summary: {\n        totalThemes: 0,\n        validationErrors: [],\n        recommendations: []\n      }\n    };\n\n    const allThemes = this.styles.getAllThemes();\n    results.summary.totalThemes = allThemes.length;\n\n    allThemes.forEach(theme => {\n      const validation = this.styles.validateTheme(theme.id);\n      results.themes[theme.id] = validation;\n      \n      if (validation.valid) {\n        results.valid++;\n      } else {\n        results.invalid++;\n        results.summary.validationErrors.push(...validation.errors.map(error => `${theme.name}: ${error}`));\n      }\n\n      // Add contrast analysis\n      try {\n        const contrastAnalysis = this.analyzeThemeContrast(theme.id);\n        results.themes[theme.id].contrast = contrastAnalysis;\n        \n        if (!contrastAnalysis.accessibility.wcagAA) {\n          results.summary.recommendations.push(`${theme.name}: Consider improving contrast ratios for better accessibility`);\n        }\n      } catch (error) {\n        console.warn(LOG_HEAD + `Could not analyze contrast for theme ${theme.name}:`, error);\n      }\n    });\n\n    return results;\n  }\n\n  // =============================================================================\n  // THEME EXPORT/IMPORT UTILITIES\n  // =============================================================================\n\n  /**\n   * Export theme configuration for sharing\n   */\n  exportThemeConfiguration(themeId) {\n    const theme = this.styles.getThemeMetadata(themeId);\n    if (!theme) {\n      throw new Error(`Theme ${themeId} not found`);\n    }\n\n    const customizations = this.styles.getThemeCustomization(themeId);\n    \n    return {\n      theme: {\n        ...theme,\n        exportedAt: new Date().toISOString(),\n        systemVersion: game.system.version\n      },\n      customizations,\n      variables: this.extractThemeVariables(themeId)\n    };\n  }\n\n  /**\n   * Extract all CSS variables for a specific theme\n   */\n  extractThemeVariables(themeId) {\n    const theme = this.styles.getThemeMetadata(themeId);\n    if (!theme) {\n      return {};\n    }\n\n    const originalTheme = this.styles.currentTheme;\n    this.styles.applyTheme(theme.cssClass);\n    \n    const variables = this.styles.getCurrentThemeVariables();\n    \n    this.styles.applyTheme(originalTheme);\n    \n    return variables;\n  }\n\n  // =============================================================================\n  // DEBUGGING AND DEVELOPMENT UTILITIES\n  // =============================================================================\n\n  /**\n   * Generate theme development report\n   */\n  generateDevelopmentReport() {\n    const report = {\n      timestamp: new Date().toISOString(),\n      systemVersion: game.system.version,\n      currentTheme: this.styles.currentTheme,\n      themes: {},\n      performance: {},\n      validation: {},\n      variableAnalysis: {},\n      recommendations: []\n    };\n\n    // Analyze all themes\n    const allThemes = this.styles.getAllThemes();\n    allThemes.forEach(theme => {\n      // Theme metadata\n      report.themes[theme.id] = {\n        metadata: theme,\n        validation: this.styles.validateTheme(theme.id)\n      };\n\n      // Performance analysis\n      try {\n        report.performance[theme.id] = this.measureThemePerformance(theme.cssClass, 3);\n      } catch (error) {\n        console.warn(LOG_HEAD + `Performance analysis failed for ${theme.name}:`, error);\n      }\n\n      // Contrast analysis\n      try {\n        report.themes[theme.id].contrast = this.analyzeThemeContrast(theme.id);\n      } catch (error) {\n        console.warn(LOG_HEAD + `Contrast analysis failed for ${theme.name}:`, error);\n      }\n    });\n\n    // Variable usage analysis\n    report.variableAnalysis = this.analyzeVariableUsage();\n\n    // Generate recommendations\n    report.recommendations = this.generateRecommendations(report);\n\n    return report;\n  }\n\n  /**\n   * Generate recommendations based on analysis\n   */\n  generateRecommendations(report) {\n    const recommendations = [];\n\n    // Performance recommendations\n    Object.entries(report.performance).forEach(([themeId, perf]) => {\n      if (perf.average > 50) {\n        recommendations.push({\n          type: 'performance',\n          theme: themeId,\n          message: `Theme application is slow (${perf.average.toFixed(2)}ms average)`,\n          suggestion: 'Consider optimizing CSS selectors and reducing complexity'\n        });\n      }\n    });\n\n    // Accessibility recommendations\n    Object.entries(report.themes).forEach(([themeId, themeData]) => {\n      if (themeData.contrast && !themeData.contrast.accessibility.wcagAA) {\n        recommendations.push({\n          type: 'accessibility',\n          theme: themeId,\n          message: 'Theme fails WCAG AA contrast requirements',\n          suggestion: 'Increase contrast between text and background colors',\n          details: themeData.contrast.accessibility.issues\n        });\n      }\n    });\n\n    // Variable optimization recommendations\n    if (report.variableAnalysis.redundancy > 30) {\n      recommendations.push({\n        type: 'optimization',\n        theme: 'all',\n        message: `High variable redundancy detected (${report.variableAnalysis.redundancy}%)`,\n        suggestion: 'Consider consolidating similar variables across themes'\n      });\n    }\n\n    return recommendations;\n  }\n\n  // =============================================================================\n  // THEME TESTING UTILITIES\n  // =============================================================================\n\n  /**\n   * Test theme switching functionality\n   */\n  testThemeSwitching() {\n    const results = {\n      success: true,\n      errors: [],\n      switchTimes: {},\n      totalTime: 0\n    };\n\n    const allThemes = this.styles.getAllThemes();\n    const originalTheme = this.styles.currentTheme;\n    \n    try {\n      allThemes.forEach(theme => {\n        const startTime = performance.now();\n        \n        try {\n          this.styles.applyTheme(theme.cssClass);\n          const endTime = performance.now();\n          results.switchTimes[theme.id] = endTime - startTime;\n          results.totalTime += endTime - startTime;\n        } catch (error) {\n          results.success = false;\n          results.errors.push(`Failed to apply theme ${theme.name}: ${error.message}`);\n        }\n      });\n    } finally {\n      // Always restore original theme\n      this.styles.applyTheme(originalTheme);\n    }\n\n    return results;\n  }\n\n  /**\n   * Test CSS variable accessibility\n   */\n  testCSSVariableAccess() {\n    const results = {\n      accessible: [],\n      inaccessible: [],\n      total: 0\n    };\n\n    const variables = this.styles.getCurrentThemeVariables();\n    \n    Object.keys(variables).forEach(variable => {\n      results.total++;\n      \n      try {\n        const value = this.styles.getCSSVariable(variable.replace('--', ''));\n        if (value && value !== '') {\n          results.accessible.push(variable);\n        } else {\n          results.inaccessible.push(variable);\n        }\n      } catch (error) {\n        results.inaccessible.push(variable);\n      }\n    });\n\n    return results;\n  }\n\n  // =============================================================================\n  // DEVELOPMENT HELPERS\n  // =============================================================================\n\n  /**\n   * Log comprehensive theme information\n   */\n  logThemeInfo(themeId) {\n    const theme = this.styles.getThemeMetadata(themeId);\n    if (!theme) {\n      console.error(LOG_HEAD + `Theme ${themeId} not found`);\n      return;\n    }\n\n    console.group(LOG_HEAD + `Theme Info: ${theme.name}`);\n    console.info('Metadata:', theme);\n    console.info('Validation:', this.styles.validateTheme(themeId));\n    console.info('Contrast Analysis:', this.analyzeThemeContrast(themeId));\n    console.info('Performance:', this.measureThemePerformance(theme.cssClass, 3));\n    console.groupEnd();\n  }\n\n  /**\n   * Create theme comparison report\n   */\n  compareThemes(themeId1, themeId2) {\n    const theme1 = this.styles.getThemeMetadata(themeId1);\n    const theme2 = this.styles.getThemeMetadata(themeId2);\n    \n    if (!theme1 || !theme2) {\n      throw new Error('One or both themes not found');\n    }\n\n    const comparison = {\n      themes: [theme1.name, theme2.name],\n      differences: {\n        metadata: {},\n        variables: {},\n        performance: {}\n      },\n      recommendations: []\n    };\n\n    // Compare metadata\n    const metadataKeys = ['category', 'author', 'version'];\n    metadataKeys.forEach(key => {\n      if (theme1[key] !== theme2[key]) {\n        comparison.differences.metadata[key] = {\n          [theme1.name]: theme1[key],\n          [theme2.name]: theme2[key]\n        };\n      }\n    });\n\n    // Compare performance\n    const perf1 = this.measureThemePerformance(theme1.cssClass, 3);\n    const perf2 = this.measureThemePerformance(theme2.cssClass, 3);\n    \n    comparison.differences.performance = {\n      [theme1.name]: perf1.average,\n      [theme2.name]: perf2.average,\n      difference: Math.abs(perf1.average - perf2.average)\n    };\n\n    // Generate recommendations\n    if (comparison.differences.performance.difference > 20) {\n      const slower = perf1.average > perf2.average ? theme1.name : theme2.name;\n      comparison.recommendations.push(`${slower} is significantly slower and could benefit from optimization`);\n    }\n\n    return comparison;\n  }\n}\n","// UI/HUD Customization System - User preference storage and runtime adjustments\n// This module provides comprehensive UI/HUD customization capabilities\n\nimport { LOG_HEAD, SYSTEM_NAME } from './constants.js';\n\n/**\n * UI Customization Manager - Handles all UI/HUD customization features\n */\nexport class UICustomization {\n  constructor(stylesManager) {\n    this.styles = stylesManager;\n    this.customizations = new Map();\n    this.presets = new Map();\n    this.activeCustomizations = new Set();\n    \n    // Initialize customization system\n    this.initializeCustomizations();\n    \n    Hooks.once('ready', () => this.onReady());\n    Hooks.on('renderApplication', (app, html, data) => this.onRenderApplication(app, html, data));\n  }\n\n  async onReady() {\n    console.groupCollapsed(LOG_HEAD + 'UICustomization.onReady');\n    \n    // Register UI customization settings\n    await this.registerCustomizationSettings();\n    \n    // Load user customizations\n    await this.loadUserCustomizations();\n    \n    // Apply saved customizations\n    this.applyAllCustomizations();\n    \n    console.groupEnd();\n  }\n\n  // =============================================================================\n  // CUSTOMIZATION SETTINGS REGISTRATION\n  // =============================================================================\n\n  async registerCustomizationSettings() {\n    // UI Layout preferences\n    game.settings.register(SYSTEM_NAME, 'ui-layout-preferences', {\n      scope: 'client',\n      name: 'UI Layout Preferences',\n      hint: 'Customization settings for UI layout and positioning',\n      config: false,\n      default: {\n        sheetWidth: 'auto',\n        sheetHeight: 'auto',\n        compactMode: false,\n        hideUnusedSections: false,\n        sectionOrder: 'default',\n        tabLayout: 'horizontal'\n      },\n      type: Object\n    });\n\n    // HUD customization preferences\n    game.settings.register(SYSTEM_NAME, 'hud-customization', {\n      scope: 'client',\n      name: 'HUD Customization',\n      hint: 'Customization settings for HUD elements and positioning',\n      config: false,\n      default: {\n        hudPosition: 'default',\n        hudSize: 'medium',\n        showShortcuts: true,\n        shortcutPosition: 'left',\n        gmManagerPosition: 'top-left',\n        gmManagerSize: 'medium',\n        hideInactiveElements: false\n      },\n      type: Object\n    });\n\n    // Visual customization preferences\n    game.settings.register(SYSTEM_NAME, 'visual-customization', {\n      scope: 'client',\n      name: 'Visual Customization',\n      hint: 'Visual appearance customization settings',\n      config: false,\n      default: {\n        animationSpeed: 'normal',\n        shadowIntensity: 'medium',\n        borderRadius: 'default',\n        spacing: 'default',\n        fontSize: 'default',\n        iconSize: 'default',\n        transparency: 'default'\n      },\n      type: Object\n    });\n\n    // Component visibility preferences\n    game.settings.register(SYSTEM_NAME, 'component-visibility', {\n      scope: 'client',\n      name: 'Component Visibility',\n      hint: 'Show/hide specific UI components',\n      config: false,\n      default: {\n        showPassportImages: true,\n        showItemImages: true,\n        showSkillIcons: true,\n        showAttributeLabels: true,\n        showTooltips: true,\n        showAnimations: true,\n        showShadows: true,\n        showGradients: true\n      },\n      type: Object\n    });\n\n    // Advanced customization settings\n    game.settings.register(SYSTEM_NAME, 'advanced-ui-settings', {\n      scope: 'client',\n      name: 'Advanced UI Settings',\n      hint: 'Advanced UI customization options',\n      config: false,\n      default: {\n        customCSS: '',\n        componentOverrides: {},\n        layoutTemplates: {},\n        colorOverrides: {},\n        fontOverrides: {}\n      },\n      type: Object\n    });\n  }\n\n  // =============================================================================\n  // CUSTOMIZATION INITIALIZATION\n  // =============================================================================\n\n  initializeCustomizations() {\n    console.groupCollapsed(LOG_HEAD + 'UICustomization.initializeCustomizations');\n    \n    // Register built-in customization presets\n    this.registerBuiltInPresets();\n    \n    // Register customization categories\n    this.registerCustomizationCategories();\n    \n    console.groupEnd();\n  }\n\n  registerBuiltInPresets() {\n    // Compact layout preset\n    this.presets.set('compact', {\n      name: 'Compact Layout',\n      description: 'Optimized for smaller screens and minimal space usage',\n      settings: {\n        'ui-layout-preferences': {\n          compactMode: true,\n          hideUnusedSections: true,\n          tabLayout: 'vertical'\n        },\n        'visual-customization': {\n          spacing: 'tight',\n          fontSize: 'small',\n          iconSize: 'small'\n        },\n        'component-visibility': {\n          showPassportImages: false,\n          showShadows: false,\n          showGradients: false\n        }\n      }\n    });\n\n    // Accessibility preset\n    this.presets.set('accessibility', {\n      name: 'Accessibility Enhanced',\n      description: 'Optimized for accessibility and screen readers',\n      settings: {\n        'visual-customization': {\n          fontSize: 'large',\n          spacing: 'loose',\n          shadowIntensity: 'none',\n          borderRadius: 'minimal'\n        },\n        'component-visibility': {\n          showTooltips: true,\n          showAnimations: false,\n          showShadows: false\n        }\n      }\n    });\n\n    // Performance preset\n    this.presets.set('performance', {\n      name: 'Performance Optimized',\n      description: 'Reduced visual effects for better performance',\n      settings: {\n        'visual-customization': {\n          animationSpeed: 'fast',\n          shadowIntensity: 'light',\n          transparency: 'minimal'\n        },\n        'component-visibility': {\n          showAnimations: false,\n          showShadows: false,\n          showGradients: false\n        }\n      }\n    });\n\n    // Immersive preset\n    this.presets.set('immersive', {\n      name: 'Immersive Experience',\n      description: 'Enhanced visual effects for maximum immersion',\n      settings: {\n        'visual-customization': {\n          animationSpeed: 'slow',\n          shadowIntensity: 'strong',\n          transparency: 'enhanced'\n        },\n        'component-visibility': {\n          showAnimations: true,\n          showShadows: true,\n          showGradients: true\n        }\n      }\n    });\n  }\n\n  registerCustomizationCategories() {\n    this.customizations.set('layout', {\n      name: 'Layout & Positioning',\n      description: 'Customize sheet layouts, sizes, and positioning',\n      options: [\n        { key: 'sheetWidth', name: 'Sheet Width', type: 'select', values: ['auto', 'compact', 'wide', 'full'] },\n        { key: 'sheetHeight', name: 'Sheet Height', type: 'select', values: ['auto', 'compact', 'tall', 'full'] },\n        { key: 'compactMode', name: 'Compact Mode', type: 'boolean' },\n        { key: 'tabLayout', name: 'Tab Layout', type: 'select', values: ['horizontal', 'vertical'] }\n      ]\n    });\n\n    this.customizations.set('visual', {\n      name: 'Visual Appearance',\n      description: 'Customize colors, fonts, and visual effects',\n      options: [\n        { key: 'fontSize', name: 'Font Size', type: 'select', values: ['small', 'default', 'large', 'xl'] },\n        { key: 'iconSize', name: 'Icon Size', type: 'select', values: ['small', 'default', 'large'] },\n        { key: 'spacing', name: 'Element Spacing', type: 'select', values: ['tight', 'default', 'loose'] },\n        { key: 'borderRadius', name: 'Border Radius', type: 'select', values: ['none', 'minimal', 'default', 'rounded'] },\n        { key: 'shadowIntensity', name: 'Shadow Intensity', type: 'select', values: ['none', 'light', 'medium', 'strong'] },\n        { key: 'animationSpeed', name: 'Animation Speed', type: 'select', values: ['none', 'fast', 'normal', 'slow'] }\n      ]\n    });\n\n    this.customizations.set('components', {\n      name: 'Component Visibility',\n      description: 'Show or hide specific UI components',\n      options: [\n        { key: 'showPassportImages', name: 'Show Passport Images', type: 'boolean' },\n        { key: 'showItemImages', name: 'Show Item Images', type: 'boolean' },\n        { key: 'showSkillIcons', name: 'Show Skill Icons', type: 'boolean' },\n        { key: 'showTooltips', name: 'Show Tooltips', type: 'boolean' },\n        { key: 'showAnimations', name: 'Show Animations', type: 'boolean' },\n        { key: 'showShadows', name: 'Show Shadows', type: 'boolean' }\n      ]\n    });\n\n    this.customizations.set('hud', {\n      name: 'HUD Elements',\n      description: 'Customize HUD positioning and behavior',\n      options: [\n        { key: 'hudSize', name: 'HUD Size', type: 'select', values: ['small', 'medium', 'large'] },\n        { key: 'shortcutPosition', name: 'Shortcut Position', type: 'select', values: ['left', 'right', 'top', 'bottom'] },\n        { key: 'gmManagerPosition', name: 'GM Manager Position', type: 'select', values: ['top-left', 'top-right', 'bottom-left', 'bottom-right'] },\n        { key: 'hideInactiveElements', name: 'Hide Inactive Elements', type: 'boolean' }\n      ]\n    });\n  }\n\n  // =============================================================================\n  // CUSTOMIZATION APPLICATION\n  // =============================================================================\n\n  async loadUserCustomizations() {\n    const layoutPrefs = game.settings.get(SYSTEM_NAME, 'ui-layout-preferences');\n    const hudCustomization = game.settings.get(SYSTEM_NAME, 'hud-customization');\n    const visualCustomization = game.settings.get(SYSTEM_NAME, 'visual-customization');\n    const componentVisibility = game.settings.get(SYSTEM_NAME, 'component-visibility');\n    const advancedSettings = game.settings.get(SYSTEM_NAME, 'advanced-ui-settings');\n\n    // Store loaded customizations\n    this.userCustomizations = {\n      layout: layoutPrefs,\n      hud: hudCustomization,\n      visual: visualCustomization,\n      components: componentVisibility,\n      advanced: advancedSettings\n    };\n  }\n\n  applyAllCustomizations() {\n    console.groupCollapsed(LOG_HEAD + 'UICustomization.applyAllCustomizations');\n    \n    // Apply each customization category\n    this.applyLayoutCustomizations();\n    this.applyVisualCustomizations();\n    this.applyComponentVisibility();\n    this.applyHUDCustomizations();\n    this.applyAdvancedCustomizations();\n    \n    console.groupEnd();\n  }\n\n  applyLayoutCustomizations() {\n    const layout = this.userCustomizations.layout;\n    const root = document.documentElement;\n    \n    // Sheet sizing\n    if (layout.sheetWidth !== 'auto') {\n      const widthMap = {\n        compact: '600px',\n        wide: '900px',\n        full: '100vw'\n      };\n      root.style.setProperty('--sheet-width', widthMap[layout.sheetWidth]);\n    }\n    \n    if (layout.sheetHeight !== 'auto') {\n      const heightMap = {\n        compact: '500px',\n        tall: '800px',\n        full: '100vh'\n      };\n      root.style.setProperty('--sheet-height', heightMap[layout.sheetHeight]);\n    }\n    \n    // Compact mode\n    if (layout.compactMode) {\n      document.body.classList.add('ui-compact-mode');\n    } else {\n      document.body.classList.remove('ui-compact-mode');\n    }\n    \n    // Tab layout\n    if (layout.tabLayout === 'vertical') {\n      document.body.classList.add('ui-vertical-tabs');\n    } else {\n      document.body.classList.remove('ui-vertical-tabs');\n    }\n    \n    console.info(LOG_HEAD + 'Applied layout customizations:', layout);\n  }\n\n  applyVisualCustomizations() {\n    const visual = this.userCustomizations.visual;\n    const root = document.documentElement;\n    \n    // Font size scaling\n    const fontSizeMap = {\n      small: '0.85',\n      default: '1',\n      large: '1.15',\n      xl: '1.3'\n    };\n    if (visual.fontSize !== 'default') {\n      root.style.setProperty('--font-scale', fontSizeMap[visual.fontSize]);\n    }\n    \n    // Icon size scaling\n    const iconSizeMap = {\n      small: '0.8',\n      default: '1',\n      large: '1.2'\n    };\n    if (visual.iconSize !== 'default') {\n      root.style.setProperty('--icon-scale', iconSizeMap[visual.iconSize]);\n    }\n    \n    // Spacing adjustments\n    const spacingMap = {\n      tight: '0.75',\n      default: '1',\n      loose: '1.25'\n    };\n    if (visual.spacing !== 'default') {\n      root.style.setProperty('--spacing-scale', spacingMap[visual.spacing]);\n    }\n    \n    // Border radius adjustments\n    const radiusMap = {\n      none: '0px',\n      minimal: '2px',\n      default: '6px',\n      rounded: '12px'\n    };\n    if (visual.borderRadius !== 'default') {\n      root.style.setProperty('--border-radius-override', radiusMap[visual.borderRadius]);\n    }\n    \n    // Shadow intensity\n    const shadowMap = {\n      none: '0',\n      light: '0.5',\n      medium: '1',\n      strong: '1.5'\n    };\n    if (visual.shadowIntensity !== 'medium') {\n      root.style.setProperty('--shadow-intensity', shadowMap[visual.shadowIntensity]);\n    }\n    \n    // Animation speed\n    const animationMap = {\n      none: '0ms',\n      fast: '100ms',\n      normal: '200ms',\n      slow: '400ms'\n    };\n    if (visual.animationSpeed !== 'normal') {\n      root.style.setProperty('--animation-duration', animationMap[visual.animationSpeed]);\n    }\n    \n    console.info(LOG_HEAD + 'Applied visual customizations:', visual);\n  }\n\n  applyComponentVisibility() {\n    const components = this.userCustomizations.components;\n    const root = document.documentElement;\n    \n    // Component visibility classes\n    Object.entries(components).forEach(([key, visible]) => {\n      const className = `hide-${key.replace(/([A-Z])/g, '-$1').toLowerCase().replace('show-', '')}`;\n      \n      if (!visible) {\n        document.body.classList.add(className);\n      } else {\n        document.body.classList.remove(className);\n      }\n    });\n    \n    console.info(LOG_HEAD + 'Applied component visibility:', components);\n  }\n\n  applyHUDCustomizations() {\n    const hud = this.userCustomizations.hud;\n    \n    // HUD size scaling\n    const hudSizeMap = {\n      small: '0.8',\n      medium: '1',\n      large: '1.2'\n    };\n    if (hud.hudSize !== 'medium') {\n      document.documentElement.style.setProperty('--hud-scale', hudSizeMap[hud.hudSize]);\n    }\n    \n    // GM Manager positioning\n    const gmManager = document.getElementById('gm-manager');\n    if (gmManager && hud.gmManagerPosition !== 'top-left') {\n      gmManager.classList.remove('position-top-left', 'position-top-right', 'position-bottom-left', 'position-bottom-right');\n      gmManager.classList.add(`position-${hud.gmManagerPosition}`);\n    }\n    \n    // Shortcut positioning\n    const shortcuts = document.querySelector('.anarchy-shortcuts');\n    if (shortcuts && hud.shortcutPosition !== 'left') {\n      shortcuts.classList.remove('position-left', 'position-right', 'position-top', 'position-bottom');\n      shortcuts.classList.add(`position-${hud.shortcutPosition}`);\n    }\n    \n    console.info(LOG_HEAD + 'Applied HUD customizations:', hud);\n  }\n\n  applyAdvancedCustomizations() {\n    const advanced = this.userCustomizations.advanced;\n    const root = document.documentElement;\n    \n    // Custom CSS injection\n    if (advanced.customCSS) {\n      this.injectCustomCSS(advanced.customCSS);\n    }\n    \n    // Component overrides\n    if (advanced.componentOverrides) {\n      Object.entries(advanced.componentOverrides).forEach(([component, styles]) => {\n        Object.entries(styles).forEach(([property, value]) => {\n          root.style.setProperty(`--${component}-${property}`, value);\n        });\n      });\n    }\n    \n    // Color overrides\n    if (advanced.colorOverrides) {\n      Object.entries(advanced.colorOverrides).forEach(([colorVar, value]) => {\n        root.style.setProperty(`--${colorVar}`, value);\n      });\n    }\n    \n    console.info(LOG_HEAD + 'Applied advanced customizations:', advanced);\n  }\n\n  // =============================================================================\n  // CUSTOMIZATION METHODS\n  // =============================================================================\n\n  setCustomization(category, key, value) {\n    const settingKey = this.getCategorySettingKey(category);\n    const currentSettings = game.settings.get(SYSTEM_NAME, settingKey);\n    \n    currentSettings[key] = value;\n    game.settings.set(SYSTEM_NAME, settingKey, currentSettings);\n    \n    // Update local cache\n    this.userCustomizations[category][key] = value;\n    \n    // Apply immediately\n    this.applySpecificCustomization(category, key, value);\n    \n    console.info(LOG_HEAD + `Customization set: ${category}.${key} = ${value}`);\n  }\n\n  getCustomization(category, key) {\n    return this.userCustomizations[category]?.[key];\n  }\n\n  applySpecificCustomization(category, key, value) {\n    const root = document.documentElement;\n    \n    switch (category) {\n      case 'visual':\n        this.applyVisualCustomization(key, value);\n        break;\n      case 'layout':\n        this.applyLayoutCustomization(key, value);\n        break;\n      case 'components':\n        this.applyComponentCustomization(key, value);\n        break;\n      case 'hud':\n        this.applyHUDCustomization(key, value);\n        break;\n    }\n  }\n\n  applyVisualCustomization(key, value) {\n    const root = document.documentElement;\n    \n    switch (key) {\n      case 'fontSize':\n        const fontScale = { small: '0.85', default: '1', large: '1.15', xl: '1.3' }[value];\n        root.style.setProperty('--font-scale', fontScale);\n        break;\n      case 'iconSize':\n        const iconScale = { small: '0.8', default: '1', large: '1.2' }[value];\n        root.style.setProperty('--icon-scale', iconScale);\n        break;\n      case 'spacing':\n        const spacingScale = { tight: '0.75', default: '1', loose: '1.25' }[value];\n        root.style.setProperty('--spacing-scale', spacingScale);\n        break;\n      case 'animationSpeed':\n        const duration = { none: '0ms', fast: '100ms', normal: '200ms', slow: '400ms' }[value];\n        root.style.setProperty('--animation-duration', duration);\n        break;\n    }\n  }\n\n  applyLayoutCustomization(key, value) {\n    switch (key) {\n      case 'compactMode':\n        if (value) {\n          document.body.classList.add('ui-compact-mode');\n        } else {\n          document.body.classList.remove('ui-compact-mode');\n        }\n        break;\n      case 'tabLayout':\n        if (value === 'vertical') {\n          document.body.classList.add('ui-vertical-tabs');\n        } else {\n          document.body.classList.remove('ui-vertical-tabs');\n        }\n        break;\n    }\n  }\n\n  applyComponentCustomization(key, value) {\n    const className = `hide-${key.replace(/([A-Z])/g, '-$1').toLowerCase().replace('show-', '')}`;\n    \n    if (!value) {\n      document.body.classList.add(className);\n    } else {\n      document.body.classList.remove(className);\n    }\n  }\n\n  applyHUDCustomization(key, value) {\n    switch (key) {\n      case 'gmManagerPosition':\n        const gmManager = document.getElementById('gm-manager');\n        if (gmManager) {\n          gmManager.classList.remove('position-top-left', 'position-top-right', 'position-bottom-left', 'position-bottom-right');\n          gmManager.classList.add(`position-${value}`);\n        }\n        break;\n      case 'hudSize':\n        const hudScale = { small: '0.8', medium: '1', large: '1.2' }[value];\n        document.documentElement.style.setProperty('--hud-scale', hudScale);\n        break;\n    }\n  }\n\n  // =============================================================================\n  // PRESET MANAGEMENT\n  // =============================================================================\n\n  applyPreset(presetId) {\n    const preset = this.presets.get(presetId);\n    if (!preset) {\n      throw new Error(`Preset ${presetId} not found`);\n    }\n\n    console.groupCollapsed(LOG_HEAD + `Applying preset: ${preset.name}`);\n    \n    // Apply all preset settings\n    Object.entries(preset.settings).forEach(([settingKey, settingValue]) => {\n      game.settings.set(SYSTEM_NAME, settingKey, settingValue);\n      \n      // Update local cache\n      const category = this.getSettingCategory(settingKey);\n      if (category) {\n        this.userCustomizations[category] = { ...this.userCustomizations[category], ...settingValue };\n      }\n    });\n    \n    // Reapply all customizations\n    this.applyAllCustomizations();\n    \n    ui.notifications.info(`Applied preset: ${preset.name}`);\n    console.groupEnd();\n  }\n\n  getAvailablePresets() {\n    return Array.from(this.presets.entries()).map(([id, preset]) => ({\n      id,\n      ...preset\n    }));\n  }\n\n  // =============================================================================\n  // UTILITY METHODS\n  // =============================================================================\n\n  getCategorySettingKey(category) {\n    const categoryMap = {\n      layout: 'ui-layout-preferences',\n      hud: 'hud-customization',\n      visual: 'visual-customization',\n      components: 'component-visibility',\n      advanced: 'advanced-ui-settings'\n    };\n    return categoryMap[category];\n  }\n\n  getSettingCategory(settingKey) {\n    const settingMap = {\n      'ui-layout-preferences': 'layout',\n      'hud-customization': 'hud',\n      'visual-customization': 'visual',\n      'component-visibility': 'components',\n      'advanced-ui-settings': 'advanced'\n    };\n    return settingMap[settingKey];\n  }\n\n  injectCustomCSS(css) {\n    // Remove existing custom CSS\n    const existingStyle = document.getElementById('anarchy-custom-css');\n    if (existingStyle) {\n      existingStyle.remove();\n    }\n    \n    // Inject new custom CSS\n    if (css.trim()) {\n      const style = document.createElement('style');\n      style.id = 'anarchy-custom-css';\n      style.textContent = css;\n      document.head.appendChild(style);\n    }\n  }\n\n  onRenderApplication(app, html, data) {\n    // Apply customizations to newly rendered applications\n    if (app.constructor.name.includes('Sheet') || app.constructor.name.includes('Dialog')) {\n      this.applyCustomizationsToElement(html[0]);\n    }\n  }\n\n  applyCustomizationsToElement(element) {\n    // Apply current customizations to a specific element\n    const visual = this.userCustomizations.visual;\n    \n    if (visual.fontSize !== 'default') {\n      element.style.setProperty('--local-font-scale', `var(--font-scale, 1)`);\n    }\n    \n    if (visual.spacing !== 'default') {\n      element.style.setProperty('--local-spacing-scale', `var(--spacing-scale, 1)`);\n    }\n  }\n\n  // =============================================================================\n  // EXPORT/IMPORT CUSTOMIZATIONS\n  // =============================================================================\n\n  exportCustomizations() {\n    return {\n      customizations: this.userCustomizations,\n      presets: Array.from(this.presets.entries()),\n      metadata: {\n        exportedAt: new Date().toISOString(),\n        systemVersion: game.system.version,\n        foundryVersion: game.version\n      }\n    };\n  }\n\n  importCustomizations(data) {\n    if (!data.customizations) {\n      throw new Error('Invalid customization data');\n    }\n\n    // Import each category\n    Object.entries(data.customizations).forEach(([category, settings]) => {\n      const settingKey = this.getCategorySettingKey(category);\n      if (settingKey) {\n        game.settings.set(SYSTEM_NAME, settingKey, settings);\n      }\n    });\n\n    // Reload and apply\n    this.loadUserCustomizations();\n    this.applyAllCustomizations();\n    \n    ui.notifications.info('UI customizations imported successfully.');\n  }\n\n  resetAllCustomizations() {\n    // Reset all customization settings to defaults\n    const settingKeys = [\n      'ui-layout-preferences',\n      'hud-customization',\n      'visual-customization',\n      'component-visibility',\n      'advanced-ui-settings'\n    ];\n\n    settingKeys.forEach(key => {\n      const setting = game.settings.settings.get(`${SYSTEM_NAME}.${key}`);\n      if (setting) {\n        game.settings.set(SYSTEM_NAME, key, setting.default);\n      }\n    });\n\n    // Remove custom CSS\n    this.injectCustomCSS('');\n    \n    // Remove customization classes\n    document.body.classList.remove('ui-compact-mode', 'ui-vertical-tabs');\n    \n    // Reset CSS variables\n    const root = document.documentElement;\n    const customProperties = ['--font-scale', '--icon-scale', '--spacing-scale', '--border-radius-override', '--shadow-intensity', '--animation-duration'];\n    customProperties.forEach(prop => root.style.removeProperty(prop));\n    \n    // Reload and apply defaults\n    this.loadUserCustomizations();\n    this.applyAllCustomizations();\n    \n    ui.notifications.info('All UI customizations reset to defaults.');\n  }\n\n  // =============================================================================\n  // DEBUGGING AND ANALYSIS\n  // =============================================================================\n\n  debugCustomizations() {\n    console.group(LOG_HEAD + 'UI Customization Debug');\n    console.info('Current Customizations:', this.userCustomizations);\n    console.info('Available Presets:', this.getAvailablePresets());\n    console.info('Active CSS Variables:', this.getActiveCustomizationVariables());\n    console.info('Applied Classes:', this.getAppliedCustomizationClasses());\n    console.groupEnd();\n    \n    return {\n      customizations: this.userCustomizations,\n      presets: this.getAvailablePresets(),\n      cssVariables: this.getActiveCustomizationVariables(),\n      appliedClasses: this.getAppliedCustomizationClasses()\n    };\n  }\n\n  getActiveCustomizationVariables() {\n    const root = getComputedStyle(document.documentElement);\n    const customizationVars = {};\n    \n    const varNames = ['--font-scale', '--icon-scale', '--spacing-scale', '--border-radius-override', '--shadow-intensity', '--animation-duration', '--hud-scale'];\n    \n    varNames.forEach(varName => {\n      const value = root.getPropertyValue(varName);\n      if (value) {\n        customizationVars[varName] = value.trim();\n      }\n    });\n    \n    return customizationVars;\n  }\n\n  getAppliedCustomizationClasses() {\n    return Array.from(document.body.classList)\n      .filter(cls => cls.startsWith('ui-') || cls.startsWith('hide-') || cls.startsWith('position-'));\n  }\n}\n","// UI Customization Dialog - User interface for customizing UI/HUD elements\n// This module provides a user-friendly interface for UI customization\n\nimport { LOG_HEAD, SYSTEM_NAME, TEMPLATES_PATH } from './constants.js';\n\n/**\n * UI Customization Dialog - Provides user interface for customization\n */\nexport class UICustomizationDialog extends Dialog {\n  constructor(uiCustomization, options = {}) {\n    const dialogData = {\n      title: 'UI/HUD Customization',\n      content: '',\n      buttons: {\n        apply: {\n          label: 'Apply',\n          callback: (html) => this.onApply(html)\n        },\n        reset: {\n          label: 'Reset All',\n          callback: () => this.onReset()\n        },\n        export: {\n          label: 'Export',\n          callback: () => this.onExport()\n        },\n        import: {\n          label: 'Import',\n          callback: () => this.onImport()\n        },\n        close: {\n          label: 'Close'\n        }\n      },\n      default: 'apply'\n    };\n\n    const dialogOptions = {\n      classes: ['anarchy-dialog', 'ui-customization-dialog'],\n      width: 600,\n      height: 'auto',\n      resizable: true,\n      ...options\n    };\n\n    super(dialogData, dialogOptions);\n    \n    this.uiCustomization = uiCustomization;\n    this.currentSettings = {};\n  }\n\n  async getData() {\n    // Load current customization settings\n    await this.uiCustomization.loadUserCustomizations();\n    this.currentSettings = this.uiCustomization.userCustomizations;\n    \n    return {\n      customizations: this.uiCustomization.customizations,\n      presets: this.uiCustomization.getAvailablePresets(),\n      currentSettings: this.currentSettings,\n      categories: Array.from(this.uiCustomization.customizations.entries())\n    };\n  }\n\n  async _renderInner(data) {\n    const template = `\n      <div class=\"ui-customization-content\">\n        <div class=\"customization-tabs\">\n          <nav class=\"tab-navigation\">\n            <button class=\"tab-button active\" data-tab=\"presets\">Presets</button>\n            <button class=\"tab-button\" data-tab=\"layout\">Layout</button>\n            <button class=\"tab-button\" data-tab=\"visual\">Visual</button>\n            <button class=\"tab-button\" data-tab=\"components\">Components</button>\n            <button class=\"tab-button\" data-tab=\"hud\">HUD</button>\n            <button class=\"tab-button\" data-tab=\"advanced\">Advanced</button>\n          </nav>\n          \n          <div class=\"tab-content\">\n            <!-- Presets Tab -->\n            <div class=\"tab-panel active\" data-tab=\"presets\">\n              <h3>Quick Presets</h3>\n              <p>Apply pre-configured customization sets for common use cases.</p>\n              <div class=\"preset-grid\">\n                {{#each presets}}\n                <div class=\"preset-card\" data-preset=\"{{id}}\">\n                  <h4>{{name}}</h4>\n                  <p>{{description}}</p>\n                  <button class=\"apply-preset-btn\" data-preset=\"{{id}}\">Apply</button>\n                </div>\n                {{/each}}\n              </div>\n            </div>\n            \n            <!-- Layout Tab -->\n            <div class=\"tab-panel\" data-tab=\"layout\">\n              <h3>Layout & Positioning</h3>\n              <div class=\"customization-grid\">\n                <div class=\"setting-group\">\n                  <label>Sheet Width</label>\n                  <select name=\"layout.sheetWidth\">\n                    <option value=\"auto\">Auto</option>\n                    <option value=\"compact\">Compact</option>\n                    <option value=\"wide\">Wide</option>\n                    <option value=\"full\">Full Width</option>\n                  </select>\n                </div>\n                <div class=\"setting-group\">\n                  <label>Sheet Height</label>\n                  <select name=\"layout.sheetHeight\">\n                    <option value=\"auto\">Auto</option>\n                    <option value=\"compact\">Compact</option>\n                    <option value=\"tall\">Tall</option>\n                    <option value=\"full\">Full Height</option>\n                  </select>\n                </div>\n                <div class=\"setting-group\">\n                  <label>\n                    <input type=\"checkbox\" name=\"layout.compactMode\"> Compact Mode\n                  </label>\n                </div>\n                <div class=\"setting-group\">\n                  <label>Tab Layout</label>\n                  <select name=\"layout.tabLayout\">\n                    <option value=\"horizontal\">Horizontal</option>\n                    <option value=\"vertical\">Vertical</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            \n            <!-- Visual Tab -->\n            <div class=\"tab-panel\" data-tab=\"visual\">\n              <h3>Visual Appearance</h3>\n              <div class=\"customization-grid\">\n                <div class=\"setting-group\">\n                  <label>Font Size</label>\n                  <select name=\"visual.fontSize\">\n                    <option value=\"small\">Small</option>\n                    <option value=\"default\">Default</option>\n                    <option value=\"large\">Large</option>\n                    <option value=\"xl\">Extra Large</option>\n                  </select>\n                </div>\n                <div class=\"setting-group\">\n                  <label>Icon Size</label>\n                  <select name=\"visual.iconSize\">\n                    <option value=\"small\">Small</option>\n                    <option value=\"default\">Default</option>\n                    <option value=\"large\">Large</option>\n                  </select>\n                </div>\n                <div class=\"setting-group\">\n                  <label>Element Spacing</label>\n                  <select name=\"visual.spacing\">\n                    <option value=\"tight\">Tight</option>\n                    <option value=\"default\">Default</option>\n                    <option value=\"loose\">Loose</option>\n                  </select>\n                </div>\n                <div class=\"setting-group\">\n                  <label>Animation Speed</label>\n                  <select name=\"visual.animationSpeed\">\n                    <option value=\"none\">None</option>\n                    <option value=\"fast\">Fast</option>\n                    <option value=\"normal\">Normal</option>\n                    <option value=\"slow\">Slow</option>\n                  </select>\n                </div>\n                <div class=\"setting-group\">\n                  <label>Shadow Intensity</label>\n                  <select name=\"visual.shadowIntensity\">\n                    <option value=\"none\">None</option>\n                    <option value=\"light\">Light</option>\n                    <option value=\"medium\">Medium</option>\n                    <option value=\"strong\">Strong</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            \n            <!-- Components Tab -->\n            <div class=\"tab-panel\" data-tab=\"components\">\n              <h3>Component Visibility</h3>\n              <div class=\"customization-grid\">\n                <div class=\"setting-group\">\n                  <label>\n                    <input type=\"checkbox\" name=\"components.showPassportImages\"> Show Passport Images\n                  </label>\n                </div>\n                <div class=\"setting-group\">\n                  <label>\n                    <input type=\"checkbox\" name=\"components.showItemImages\"> Show Item Images\n                  </label>\n                </div>\n                <div class=\"setting-group\">\n                  <label>\n                    <input type=\"checkbox\" name=\"components.showSkillIcons\"> Show Skill Icons\n                  </label>\n                </div>\n                <div class=\"setting-group\">\n                  <label>\n                    <input type=\"checkbox\" name=\"components.showTooltips\"> Show Tooltips\n                  </label>\n                </div>\n                <div class=\"setting-group\">\n                  <label>\n                    <input type=\"checkbox\" name=\"components.showAnimations\"> Show Animations\n                  </label>\n                </div>\n                <div class=\"setting-group\">\n                  <label>\n                    <input type=\"checkbox\" name=\"components.showShadows\"> Show Shadows\n                  </label>\n                </div>\n              </div>\n            </div>\n            \n            <!-- HUD Tab -->\n            <div class=\"tab-panel\" data-tab=\"hud\">\n              <h3>HUD Elements</h3>\n              <div class=\"customization-grid\">\n                <div class=\"setting-group\">\n                  <label>HUD Size</label>\n                  <select name=\"hud.hudSize\">\n                    <option value=\"small\">Small</option>\n                    <option value=\"medium\">Medium</option>\n                    <option value=\"large\">Large</option>\n                  </select>\n                </div>\n                <div class=\"setting-group\">\n                  <label>GM Manager Position</label>\n                  <select name=\"hud.gmManagerPosition\">\n                    <option value=\"top-left\">Top Left</option>\n                    <option value=\"top-right\">Top Right</option>\n                    <option value=\"bottom-left\">Bottom Left</option>\n                    <option value=\"bottom-right\">Bottom Right</option>\n                  </select>\n                </div>\n                <div class=\"setting-group\">\n                  <label>Shortcut Position</label>\n                  <select name=\"hud.shortcutPosition\">\n                    <option value=\"left\">Left</option>\n                    <option value=\"right\">Right</option>\n                    <option value=\"top\">Top</option>\n                    <option value=\"bottom\">Bottom</option>\n                  </select>\n                </div>\n                <div class=\"setting-group\">\n                  <label>\n                    <input type=\"checkbox\" name=\"hud.hideInactiveElements\"> Hide Inactive Elements\n                  </label>\n                </div>\n              </div>\n            </div>\n            \n            <!-- Advanced Tab -->\n            <div class=\"tab-panel\" data-tab=\"advanced\">\n              <h3>Advanced Customization</h3>\n              <div class=\"customization-grid\">\n                <div class=\"setting-group full-width\">\n                  <label>Custom CSS</label>\n                  <textarea name=\"advanced.customCSS\" rows=\"10\" placeholder=\"Enter custom CSS rules...\"></textarea>\n                  <small>Advanced users can add custom CSS rules here. Use with caution.</small>\n                </div>\n                <div class=\"setting-group\">\n                  <button type=\"button\" class=\"validate-css-btn\">Validate CSS</button>\n                  <button type=\"button\" class=\"clear-css-btn\">Clear CSS</button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <div class=\"customization-preview\">\n          <h4>Live Preview</h4>\n          <div class=\"preview-area\">\n            <div class=\"preview-sheet\">\n              <div class=\"preview-header\">\n                <div class=\"preview-passport\">\n                  <img src=\"systems/anarchy/img/sample-character.webp\" alt=\"Preview\">\n                </div>\n                <div class=\"preview-info\">\n                  <h3>Sample Character</h3>\n                  <div class=\"preview-attributes\">\n                    <div class=\"attribute-box\">\n                      <span class=\"attribute-label\">AGI</span>\n                      <span class=\"attribute-value\">4</span>\n                    </div>\n                    <div class=\"attribute-box\">\n                      <span class=\"attribute-label\">STR</span>\n                      <span class=\"attribute-value\">3</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"preview-content\">\n                <div class=\"preview-section\">\n                  <h4>Skills</h4>\n                  <div class=\"preview-item\">\n                    <img src=\"systems/anarchy/icons/skills/athletics.svg\" alt=\"Athletics\">\n                    <span>Athletics</span>\n                    <span class=\"skill-rating\">6</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    `;\n    \n    return template;\n  }\n\n  activateListeners(html) {\n    super.activateListeners(html);\n    \n    // Tab navigation\n    html.find('.tab-button').click(event => {\n      const tabId = $(event.currentTarget).data('tab');\n      this.switchTab(html, tabId);\n    });\n    \n    // Preset application\n    html.find('.apply-preset-btn').click(event => {\n      const presetId = $(event.currentTarget).data('preset');\n      this.applyPreset(presetId);\n    });\n    \n    // Live preview updates\n    html.find('select, input[type=\"checkbox\"], textarea').change(event => {\n      this.updateLivePreview(html);\n    });\n    \n    // CSS validation\n    html.find('.validate-css-btn').click(() => {\n      this.validateCustomCSS(html);\n    });\n    \n    // Clear CSS\n    html.find('.clear-css-btn').click(() => {\n      html.find('textarea[name=\"advanced.customCSS\"]').val('');\n      this.updateLivePreview(html);\n    });\n  }\n\n  switchTab(html, tabId) {\n    // Update tab buttons\n    html.find('.tab-button').removeClass('active');\n    html.find(`.tab-button[data-tab=\"${tabId}\"]`).addClass('active');\n    \n    // Update tab panels\n    html.find('.tab-panel').removeClass('active');\n    html.find(`.tab-panel[data-tab=\"${tabId}\"]`).addClass('active');\n  }\n\n  updateLivePreview(html) {\n    // Collect current form values\n    const formData = new FormData(html.find('form')[0]);\n    const settings = {};\n    \n    for (let [key, value] of formData.entries()) {\n      const [category, setting] = key.split('.');\n      if (!settings[category]) settings[category] = {};\n      \n      // Handle different input types\n      if (html.find(`input[name=\"${key}\"]`).attr('type') === 'checkbox') {\n        settings[category][setting] = html.find(`input[name=\"${key}\"]`).is(':checked');\n      } else {\n        settings[category][setting] = value;\n      }\n    }\n    \n    // Apply to preview area\n    this.applyPreviewSettings(html, settings);\n  }\n\n  applyPreviewSettings(html, settings) {\n    const previewArea = html.find('.preview-area');\n    \n    // Apply font scaling\n    if (settings.visual?.fontSize) {\n      const fontScale = { small: '0.85', default: '1', large: '1.15', xl: '1.3' }[settings.visual.fontSize];\n      previewArea.css('--font-scale', fontScale);\n    }\n    \n    // Apply icon scaling\n    if (settings.visual?.iconSize) {\n      const iconScale = { small: '0.8', default: '1', large: '1.2' }[settings.visual.iconSize];\n      previewArea.css('--icon-scale', iconScale);\n    }\n    \n    // Apply spacing\n    if (settings.visual?.spacing) {\n      const spacingScale = { tight: '0.75', default: '1', loose: '1.25' }[settings.visual.spacing];\n      previewArea.css('--spacing-scale', spacingScale);\n    }\n    \n    // Apply component visibility\n    if (settings.components) {\n      Object.entries(settings.components).forEach(([key, visible]) => {\n        const className = `hide-${key.replace(/([A-Z])/g, '-$1').toLowerCase().replace('show-', '')}`;\n        \n        if (!visible) {\n          previewArea.addClass(className);\n        } else {\n          previewArea.removeClass(className);\n        }\n      });\n    }\n  }\n\n  async onApply(html) {\n    console.groupCollapsed(LOG_HEAD + 'UICustomizationDialog.onApply');\n    \n    // Collect all form data\n    const formData = new FormData(html.find('form')[0]);\n    const settings = {};\n    \n    for (let [key, value] of formData.entries()) {\n      const [category, setting] = key.split('.');\n      if (!settings[category]) settings[category] = {};\n      \n      // Handle different input types\n      if (html.find(`input[name=\"${key}\"]`).attr('type') === 'checkbox') {\n        settings[category][setting] = html.find(`input[name=\"${key}\"]`).is(':checked');\n      } else {\n        settings[category][setting] = value;\n      }\n    }\n    \n    // Apply each category of settings\n    Object.entries(settings).forEach(([category, categorySettings]) => {\n      Object.entries(categorySettings).forEach(([key, value]) => {\n        this.uiCustomization.setCustomization(category, key, value);\n      });\n    });\n    \n    ui.notifications.info('UI customizations applied successfully.');\n    console.groupEnd();\n  }\n\n  onReset() {\n    Dialog.confirm({\n      title: 'Reset All Customizations',\n      content: '<p>Are you sure you want to reset all UI customizations to defaults? This cannot be undone.</p>',\n      yes: () => {\n        this.uiCustomization.resetAllCustomizations();\n        this.render(true); // Re-render dialog with default values\n      }\n    });\n  }\n\n  onExport() {\n    const exportData = this.uiCustomization.exportCustomizations();\n    const dataStr = JSON.stringify(exportData, null, 2);\n    \n    // Create download link\n    const blob = new Blob([dataStr], { type: 'application/json' });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = `anarchy-ui-customizations-${new Date().toISOString().split('T')[0]}.json`;\n    link.click();\n    \n    URL.revokeObjectURL(url);\n    ui.notifications.info('UI customizations exported successfully.');\n  }\n\n  onImport() {\n    const input = document.createElement('input');\n    input.type = 'file';\n    input.accept = '.json';\n    \n    input.onchange = (event) => {\n      const file = event.target.files[0];\n      if (!file) return;\n      \n      const reader = new FileReader();\n      reader.onload = (e) => {\n        try {\n          const importData = JSON.parse(e.target.result);\n          this.uiCustomization.importCustomizations(importData);\n          this.render(true); // Re-render dialog with imported values\n        } catch (error) {\n          ui.notifications.error('Failed to import customizations: Invalid file format.');\n          console.error(LOG_HEAD + 'Import error:', error);\n        }\n      };\n      reader.readAsText(file);\n    };\n    \n    input.click();\n  }\n\n  applyPreset(presetId) {\n    Dialog.confirm({\n      title: 'Apply Preset',\n      content: `<p>Apply the \"${this.uiCustomization.presets.get(presetId).name}\" preset? This will override your current customizations.</p>`,\n      yes: () => {\n        this.uiCustomization.applyPreset(presetId);\n        this.render(true); // Re-render dialog with preset values\n      }\n    });\n  }\n\n  validateCustomCSS(html) {\n    const css = html.find('textarea[name=\"advanced.customCSS\"]').val();\n    \n    if (!css.trim()) {\n      ui.notifications.info('No custom CSS to validate.');\n      return;\n    }\n    \n    try {\n      // Basic CSS validation\n      const style = document.createElement('style');\n      style.textContent = css;\n      document.head.appendChild(style);\n      document.head.removeChild(style);\n      \n      ui.notifications.info('Custom CSS is valid.');\n    } catch (error) {\n      ui.notifications.error('Custom CSS contains errors. Please check your syntax.');\n      console.error(LOG_HEAD + 'CSS validation error:', error);\n    }\n  }\n\n  // =============================================================================\n  // STATIC METHODS\n  // =============================================================================\n\n  static async show(uiCustomization) {\n    const dialog = new UICustomizationDialog(uiCustomization);\n    return dialog.render(true);\n  }\n}\n","// UI Customization Commands - Console commands for UI customization\n// This module provides console commands for easy access to customization features\n\nimport { LOG_HEAD } from './constants.js';\nimport { UICustomizationDialog } from './ui-customization-dialog.js';\n\n/**\n * UI Customization Commands - Console interface for customization\n */\nexport class UICustomizationCommands {\n  constructor(uiCustomization) {\n    this.uiCustomization = uiCustomization;\n    this.registerCommands();\n  }\n\n  registerCommands() {\n    // Register global console commands\n    globalThis.anarchyUI = {\n      // Open customization dialog\n      customize: () => this.openCustomizationDialog(),\n      \n      // Quick customization methods\n      setFontSize: (size) => this.setFontSize(size),\n      setIconSize: (size) => this.setIconSize(size),\n      setSpacing: (spacing) => this.setSpacing(spacing),\n      setAnimationSpeed: (speed) => this.setAnimationSpeed(speed),\n      \n      // Component visibility toggles\n      togglePassportImages: () => this.toggleComponent('showPassportImages'),\n      toggleItemImages: () => this.toggleComponent('showItemImages'),\n      toggleAnimations: () => this.toggleComponent('showAnimations'),\n      toggleShadows: () => this.toggleComponent('showShadows'),\n      \n      // Preset application\n      applyCompactMode: () => this.applyPreset('compact'),\n      applyAccessibilityMode: () => this.applyPreset('accessibility'),\n      applyPerformanceMode: () => this.applyPreset('performance'),\n      applyImmersiveMode: () => this.applyPreset('immersive'),\n      \n      // HUD positioning\n      moveGMManager: (position) => this.moveGMManager(position),\n      moveShortcuts: (position) => this.moveShortcuts(position),\n      setHUDSize: (size) => this.setHUDSize(size),\n      \n      // Advanced operations\n      injectCSS: (css) => this.injectCustomCSS(css),\n      exportSettings: () => this.exportSettings(),\n      importSettings: (data) => this.importSettings(data),\n      resetAll: () => this.resetAll(),\n      \n      // Debugging\n      debug: () => this.debugCustomizations(),\n      listCommands: () => this.listCommands(),\n      \n      // Theme integration\n      setThemeCustomization: (themeId, property, value) => this.setThemeCustomization(themeId, property, value),\n      previewTheme: (themeClass) => this.previewTheme(themeClass)\n    };\n\n    console.info(LOG_HEAD + 'UI Customization commands registered. Use anarchyUI.listCommands() to see available commands.');\n  }\n\n  // =============================================================================\n  // COMMAND IMPLEMENTATIONS\n  // =============================================================================\n\n  openCustomizationDialog() {\n    return UICustomizationDialog.show(this.uiCustomization);\n  }\n\n  setFontSize(size) {\n    const validSizes = ['small', 'default', 'large', 'xl'];\n    if (!validSizes.includes(size)) {\n      console.error(LOG_HEAD + `Invalid font size. Valid options: ${validSizes.join(', ')}`);\n      return;\n    }\n    \n    this.uiCustomization.setCustomization('visual', 'fontSize', size);\n    console.info(LOG_HEAD + `Font size set to: ${size}`);\n  }\n\n  setIconSize(size) {\n    const validSizes = ['small', 'default', 'large'];\n    if (!validSizes.includes(size)) {\n      console.error(LOG_HEAD + `Invalid icon size. Valid options: ${validSizes.join(', ')}`);\n      return;\n    }\n    \n    this.uiCustomization.setCustomization('visual', 'iconSize', size);\n    console.info(LOG_HEAD + `Icon size set to: ${size}`);\n  }\n\n  setSpacing(spacing) {\n    const validSpacing = ['tight', 'default', 'loose'];\n    if (!validSpacing.includes(spacing)) {\n      console.error(LOG_HEAD + `Invalid spacing. Valid options: ${validSpacing.join(', ')}`);\n      return;\n    }\n    \n    this.uiCustomization.setCustomization('visual', 'spacing', spacing);\n    console.info(LOG_HEAD + `Spacing set to: ${spacing}`);\n  }\n\n  setAnimationSpeed(speed) {\n    const validSpeeds = ['none', 'fast', 'normal', 'slow'];\n    if (!validSpeeds.includes(speed)) {\n      console.error(LOG_HEAD + `Invalid animation speed. Valid options: ${validSpeeds.join(', ')}`);\n      return;\n    }\n    \n    this.uiCustomization.setCustomization('visual', 'animationSpeed', speed);\n    console.info(LOG_HEAD + `Animation speed set to: ${speed}`);\n  }\n\n  toggleComponent(componentKey) {\n    const current = this.uiCustomization.getCustomization('components', componentKey);\n    const newValue = !current;\n    \n    this.uiCustomization.setCustomization('components', componentKey, newValue);\n    console.info(LOG_HEAD + `${componentKey} ${newValue ? 'enabled' : 'disabled'}`);\n  }\n\n  applyPreset(presetId) {\n    try {\n      this.uiCustomization.applyPreset(presetId);\n      console.info(LOG_HEAD + `Applied preset: ${presetId}`);\n    } catch (error) {\n      console.error(LOG_HEAD + `Failed to apply preset: ${error.message}`);\n    }\n  }\n\n  moveGMManager(position) {\n    const validPositions = ['top-left', 'top-right', 'bottom-left', 'bottom-right'];\n    if (!validPositions.includes(position)) {\n      console.error(LOG_HEAD + `Invalid position. Valid options: ${validPositions.join(', ')}`);\n      return;\n    }\n    \n    this.uiCustomization.setCustomization('hud', 'gmManagerPosition', position);\n    console.info(LOG_HEAD + `GM Manager moved to: ${position}`);\n  }\n\n  moveShortcuts(position) {\n    const validPositions = ['left', 'right', 'top', 'bottom'];\n    if (!validPositions.includes(position)) {\n      console.error(LOG_HEAD + `Invalid position. Valid options: ${validPositions.join(', ')}`);\n      return;\n    }\n    \n    this.uiCustomization.setCustomization('hud', 'shortcutPosition', position);\n    console.info(LOG_HEAD + `Shortcuts moved to: ${position}`);\n  }\n\n  setHUDSize(size) {\n    const validSizes = ['small', 'medium', 'large'];\n    if (!validSizes.includes(size)) {\n      console.error(LOG_HEAD + `Invalid HUD size. Valid options: ${validSizes.join(', ')}`);\n      return;\n    }\n    \n    this.uiCustomization.setCustomization('hud', 'hudSize', size);\n    console.info(LOG_HEAD + `HUD size set to: ${size}`);\n  }\n\n  injectCustomCSS(css) {\n    this.uiCustomization.setCustomization('advanced', 'customCSS', css);\n    console.info(LOG_HEAD + 'Custom CSS injected');\n  }\n\n  exportSettings() {\n    const data = this.uiCustomization.exportCustomizations();\n    console.info(LOG_HEAD + 'Customization data:', data);\n    return data;\n  }\n\n  importSettings(data) {\n    try {\n      this.uiCustomization.importCustomizations(data);\n      console.info(LOG_HEAD + 'Settings imported successfully');\n    } catch (error) {\n      console.error(LOG_HEAD + `Import failed: ${error.message}`);\n    }\n  }\n\n  resetAll() {\n    this.uiCustomization.resetAllCustomizations();\n    console.info(LOG_HEAD + 'All customizations reset');\n  }\n\n  debugCustomizations() {\n    return this.uiCustomization.debugCustomizations();\n  }\n\n  setThemeCustomization(themeId, property, value) {\n    this.uiCustomization.styles.setThemeCustomization(themeId, property, value);\n    console.info(LOG_HEAD + `Theme customization set: ${themeId}.${property} = ${value}`);\n  }\n\n  previewTheme(themeClass) {\n    this.uiCustomization.styles.previewTheme(themeClass);\n    console.info(LOG_HEAD + `Previewing theme: ${themeClass}`);\n  }\n\n  listCommands() {\n    const commands = [\n      'anarchyUI.customize() - Open customization dialog',\n      'anarchyUI.setFontSize(size) - Set font size (small, default, large, xl)',\n      'anarchyUI.setIconSize(size) - Set icon size (small, default, large)',\n      'anarchyUI.setSpacing(spacing) - Set spacing (tight, default, loose)',\n      'anarchyUI.setAnimationSpeed(speed) - Set animation speed (none, fast, normal, slow)',\n      'anarchyUI.togglePassportImages() - Toggle passport images',\n      'anarchyUI.toggleItemImages() - Toggle item images',\n      'anarchyUI.toggleAnimations() - Toggle animations',\n      'anarchyUI.toggleShadows() - Toggle shadows',\n      'anarchyUI.applyCompactMode() - Apply compact preset',\n      'anarchyUI.applyAccessibilityMode() - Apply accessibility preset',\n      'anarchyUI.applyPerformanceMode() - Apply performance preset',\n      'anarchyUI.applyImmersiveMode() - Apply immersive preset',\n      'anarchyUI.moveGMManager(position) - Move GM manager (top-left, top-right, bottom-left, bottom-right)',\n      'anarchyUI.moveShortcuts(position) - Move shortcuts (left, right, top, bottom)',\n      'anarchyUI.setHUDSize(size) - Set HUD size (small, medium, large)',\n      'anarchyUI.injectCSS(css) - Inject custom CSS',\n      'anarchyUI.exportSettings() - Export customization settings',\n      'anarchyUI.importSettings(data) - Import customization settings',\n      'anarchyUI.resetAll() - Reset all customizations',\n      'anarchyUI.debug() - Debug current customizations',\n      'anarchyUI.setThemeCustomization(themeId, property, value) - Set theme-specific customization',\n      'anarchyUI.previewTheme(themeClass) - Preview a theme temporarily'\n    ];\n\n    console.group(LOG_HEAD + 'Available UI Customization Commands:');\n    commands.forEach(cmd => console.info(cmd));\n    console.groupEnd();\n    \n    return commands;\n  }\n}\n","import { ANARCHY } from \"../config.js\";\nimport { SYSTEM_DESCRIPTION, SYSTEM_NAME, SYSTEM_PATH } from \"../constants.js\";\n\nexport const GLITCH_COLORSET = 'glitch';\nexport const RISK_COLORSET = 'risk';\nexport const REROLL_COLORSET = 'reroll';\nexport const REROLL_REMOVED_COLORSET = 'rerollRemoved';\nexport const REMOVED_COLORSET = 'removed';\n\nconst DICE_GLITCH = `${SYSTEM_PATH}/style/danger-point.webp`;\nconst DICE_PROWESS = `${SYSTEM_PATH}/style/anarchy-point.webp`;\n\nexport class AnarchyDice {\n  static dice3d = undefined;\n\n  static init() {\n    CONFIG.Dice.terms[AnarchyGlitchDie.DENOMINATION] = AnarchyGlitchDie;\n    CONFIG.Dice.terms[AnarchyRiskDie.DENOMINATION] = AnarchyRiskDie;\n    Hooks.once('diceSoNiceReady', (dice3d) => AnarchyDice.diceSoNiceReady(dice3d));\n    Hooks.once('ready', () => AnarchyDice.onReady());\n  }\n\n  static onReady() {\n    AnarchyDice.COLORSETS = AnarchyDice.loadColorsets();\n\n    if (game.modules.get(\"dice-so-nice\")?.active) {\n      if (game.settings.get(\"core\", \"noCanvas\")) {\n        ui.notifications.warn(\"Dice So Nice! will not display dice due to Foundry option 'Disable Game Canvas' \");\n      }\n    }\n  }\n\n  static loadColorsets() {\n    return {\n      [REROLL_COLORSET]: {\n        name: REROLL_COLORSET,\n        description: game.i18n.localize(ANARCHY.common.roll.rollTheme.reroll),\n        category: SYSTEM_DESCRIPTION,\n      },\n      [REMOVED_COLORSET]: {\n        name: RISK_COLORSET,\n        description: game.i18n.localize(ANARCHY.common.roll.rollTheme.removed),\n        category: SYSTEM_DESCRIPTION,\n      },\n      [REROLL_REMOVED_COLORSET]: {\n        name: REROLL_REMOVED_COLORSET,\n        description: game.i18n.localize(ANARCHY.common.roll.rollTheme.rerollRemoved),\n        category: SYSTEM_DESCRIPTION,\n      },\n      [GLITCH_COLORSET]: {\n        name: GLITCH_COLORSET,\n        description: game.i18n.localize(ANARCHY.common.roll.rollTheme.glitch),\n        category: SYSTEM_DESCRIPTION,\n        foreground: \"white\",\n        background: \"#5c0a5c\",\n        outline: \"none\",\n        edge: \"none\",\n        texture: \"poison\",\n        material: 'metal',\n      },\n      [RISK_COLORSET]: {\n        name: RISK_COLORSET,\n        description: game.i18n.localize(ANARCHY.common.roll.rollTheme.anarchyRisk),\n        category: SYSTEM_DESCRIPTION,\n        foreground: \"#faecd1\",\n        background: \"#040101\",\n        outline: \"none\",\n        edge: \"none\",\n        texture: \"fire\",\n        material: 'metal',\n      }\n    }\n  }\n\n\n  static diceSoNiceReady(dice3d) {\n\n    AnarchyDice.dice3d = dice3d;\n    game.settings.set(\"dice-so-nice\", \"enabledSimultaneousRollForMessage\", false);\n    dice3d.addSystem({ id: SYSTEM_NAME, name: SYSTEM_DESCRIPTION });\n    /*\n     * See guides:\n     * https://gitlab.com/riccisi/foundryvtt-dice-so-nice/-/wikis/API/Hooks\n     * https://gitlab.com/riccisi/foundryvtt-dice-so-nice/-/wikis/API/Customization\n     */\n    Object.values(AnarchyDice.COLORSETS).forEach(colorset => dice3d.addColorset(colorset));\n    dice3d.addDicePreset(AnarchyGlitchDie.diceSoNiceData());\n    dice3d.addDicePreset(AnarchyRiskDie.diceSoNiceData());\n  }\n\n  static img(path) {\n    return `<img src=\"${path}\" />`\n  }\n}\n\n\nexport class AnarchyGlitchDie extends Die {\n  constructor(term) {\n    term.faces = 6;\n    super(term);\n  }\n\n  /** @override */\n  getResultLabel(result) {\n    switch (result.result) {\n      case \"1\": return AnarchyDice.img(DICE_GLITCH);\n    }\n    return result.result.toString();\n  }\n\n  /** @override */\n  static DENOMINATION = \"g\";\n\n  static diceSoNiceData() {\n    return {\n      type: \"dg\",\n      labels:\n        [DICE_GLITCH, \"2\", \"3\", \"4\", \"5\", \"6\"],\n      colorset: GLITCH_COLORSET,\n      system: SYSTEM_NAME\n    }\n  }\n\n}\n\nexport class AnarchyRiskDie extends Die {\n  constructor(term) {\n    term.faces = 6;\n    super(term);\n  }\n\n  static DENOMINATION = \"r\";\n\n  /** @override */\n  getResultLabel(result) {\n    switch (result.result) {\n      case \"1\": return AnarchyDice.img(DICE_GLITCH);\n      case \"5\": return AnarchyDice.img(DICE_PROWESS);\n      case \"6\": return AnarchyDice.img(DICE_PROWESS);\n    }\n    return result.result.toString();\n  }\n\n  static diceSoNiceData() {\n    return {\n      type: \"dr\",\n      labels:\n        [DICE_GLITCH, \"2\", \"3\", \"4\", DICE_PROWESS, DICE_PROWESS],\n      colorset: RISK_COLORSET,\n      system: SYSTEM_NAME\n    }\n  }\n}\n\n","import { ANARCHY } from \"../config.js\";\nimport { GLITCH_COLORSET, RISK_COLORSET } from \"./dice.js\";\n\nexport const ROLL_THEME = {}\nconst DEFAULT_ROLL_RESULT = {\n  riskProwess: 0,\n  riskGlitch: 0,\n  riskOutcome: 'nothing',\n  glitch: 0,\n  glitchOutcome: 'nothing',\n  totalGlitch: 0,\n  drain: 0,\n  total: 0,\n  subrolls: {\n    roll: undefined,\n    reroll: undefined,\n    removed: undefined,\n    rerollForced: undefined,\n    risk: undefined,\n    glitch: undefined,\n  }\n};\n\nexport class AnarchyRoll {\n  static init() {\n    Hooks.once('ready', () => AnarchyRoll.onReady());\n  }\n\n  static onReady() {\n    Object.entries(ANARCHY.common.roll.rollTheme).forEach(entry => {\n      ROLL_THEME[entry[0]] = game.i18n.localize(entry[1]);\n    });\n  }\n\n  /**\n   * @param {*} param : { pool: 1, reroll: 0, risk: 0, rerollForced: 0, target: 5 }\n   */\n  constructor(param) {\n    this.param = param;\n    this.param.pool = Math.max(this.param.pool ?? 0, 0);\n    this.param.reroll = Math.max(this.param.reroll ?? 0, 0);\n    this.param.rerollForced = Math.abs(this.param.rerollForced ?? 0);\n    this.param.glitch = Math.max(this.param.glitch ?? 0, 0);\n    this.param.risk = Math.max(this.param.risk ?? 0, 0);\n    this.param.edge = Math.max(this.param.edge ?? 0, 0);\n    this.param.target = this.param.edge > 0 ? 4 : (this.param.target ?? 5);\n    foundry.utils.mergeObject(this, DEFAULT_ROLL_RESULT)\n  }\n\n  async evaluate() {\n    await this.rollPool();\n    await this.rollRerolls();\n    await this.rollRerollForced();\n    await this.rollGlitchDice();\n    await this.rollAnarchyRisk();\n  }\n\n  async rollPool() {\n    this.subrolls.pool = new Roll(`${this.param.pool}d6cs>=${this.param.target}[${ROLL_THEME['dicePool']}]`)\n    await this.subrolls.pool.evaluate({ async: true })\n    this.total = this.subrolls.pool.total;\n  }\n\n  async rollRerolls() {\n    const rerolls = Math.min(this.param.pool - this.total, this.param.reroll);\n    if (rerolls > 0) {\n      this.subrolls.reroll = new Roll(`${rerolls}d6cs>=${this.param.target}[${ROLL_THEME['reroll']}]`);\n      await this.subrolls.reroll.evaluate({ async: true });\n      this.total += this.subrolls.reroll.total;\n    }\n  }\n\n  async rollRerollForced() {\n    const removed = Math.min(this.total, this.param.rerollForced);\n    if (removed > 0) {\n      this.subrolls.removed = new Roll(`-${removed}d1cf=1[${ROLL_THEME['removed']}]`)\n      await this.subrolls.removed.evaluate({ async: true })\n      this.subrolls.rerollForced = new Roll(`${removed}d6cs>=${this.param.target}[${ROLL_THEME['rerollRemoved']}]`)\n      await this.subrolls.rerollForced.evaluate({ async: true })\n      this.total -= removed;\n      this.total += this.subrolls.rerollForced.total;\n    }\n  }\n\n  async rollGlitchDice() {\n    if (this.param.glitch > 0) {\n      // using dgcs=0 allows to roll dice for glitch, but to have them count as 0 successes\n      this.subrolls.glitch = new Roll(`${this.param.glitch}d6cf=1[${ROLL_THEME['glitch']}]`);\n      await this.subrolls.glitch.evaluate({ async: true })\n      this.subrolls.glitch.dice[0].options.appearance = { colorset: GLITCH_COLORSET };\n      this.glitch = this.subrolls.glitch.terms[0].results.filter(it => it.result == 1).length;\n      this.glitchOutcome = this.glitch > 0\n        ? 'glitch'\n        : 'nothing';\n      this.totalGlitch += this.glitch;\n\n    }\n  }\n\n  async rollAnarchyRisk() {\n    if (this.param.risk > 0) {\n      this.subrolls.risk = new Roll(`${this.param.risk}drcs>=5[${ROLL_THEME['anarchyRisk']}]`);\n      await this.subrolls.risk.evaluate({ async: true })\n      this.subrolls.risk.dice[0].options.appearance = { colorset: RISK_COLORSET };\n      this.riskGlitch = this.subrolls.risk.terms[0].results.filter(it => it.result == 1).length;\n      this.riskProwess += this.subrolls.risk.terms[0].results.filter(it => it.result >= 5).length;\n      if (this.subrolls.risk.total > 0) {\n        this.total++;\n      }\n      this.riskOutcome = this.riskProwess > 0\n        ? 'prowess'\n        : this.riskGlitch > 0\n          ? 'glitch'\n          : 'nothing';\n      this.totalGlitch += this.riskGlitch;\n    }\n  }\n\n  async toMessage(messageData, options) {\n    options = foundry.utils.mergeObject(options ?? {}, { create: true });\n    return await this.toGroupedRoll().toMessage(messageData, options);\n  }\n\n  toGroupedRoll() {\n    let index = 1;\n    let rolls = [];\n\n    this._addRoll(rolls, this.subrolls.pool);\n    this._addRoll(rolls, this.subrolls.reroll);\n    this._addRoll(rolls, this.subrolls.removed);\n    this._addRoll(rolls, this.subrolls.rerollForced);\n    this._addRoll(rolls, this.subrolls.risk);\n    this._addRoll(rolls, this.subrolls.glitch);\n\n    rolls.forEach(r => r.dice[0].options.rollOrder = (index++));\n\n    return Roll.fromTerms([PoolTerm.fromRolls(rolls)]);\n  }\n\n  _addRoll(rolls, roll) {\n    if (roll) {\n      rolls.push(roll);\n    }\n  }\n\n  async _displayDice(roll) {\n    if (roll) {\n      game.dice3d?.showForRoll(roll);\n    }\n  }\n\n  get hits() {\n    return this.total;\n  }\n\n  get pool() {\n    return this.param?.pool ?? 0;\n  }\n}\n","import { ANARCHY_SYSTEM, LOG_HEAD, SYSTEM_NAME, TEMPLATE } from \"./constants.js\";\nimport { ANARCHY_SKILLS } from \"./skills.js\";\nimport { ANARCHY_HOOKS, HooksManager } from \"./hooks-manager.js\";\nimport { Misc } from \"./misc.js\";\nimport { AttributeActions } from \"./attribute-actions.js\";\n\nexport const DECLARE_MIGRATIONS = 'anarchy-declareMigration';\nconst SYSTEM_MIGRATION_CURRENT_VERSION = \"systemMigrationVersion\";\n\nexport class Migration {\n  get code() { return \"sample\"; }\n\n  get version() { return \"0.0.0\"; }\n\n  async migrate() { return () => { } };\n\n  async applyItemsUpdates(computeUpdates) {\n    await game.actors.forEach(async (actor) => {\n      const actorItemUpdates = computeUpdates(actor.items);\n      if (actorItemUpdates.length > 0) {\n        console.log(this.code, `Applying updates on actor ${actor.name} items`, actorItemUpdates);\n        await actor.updateEmbeddedDocuments('Item', actorItemUpdates);\n      }\n    });\n\n    const itemUpdates = computeUpdates(game.items);\n    if (itemUpdates.length > 0) {\n      console.log(this.code, 'Applying updates on items', itemUpdates);\n      await Item.updateDocuments(itemUpdates);\n    }\n  }\n}\n\nclass _0_3_1_MigrationMoveWordsInObjects extends Migration {\n  get version() { return '0.3.1' }\n  get code() { return 'move-words-in-objects'; }\n\n  async migrate() {\n    game.actors.forEach(async actor => {\n      await actor.update({\n        ['system.keywords']: this._createWordObject(actor.system.keywords),\n        ['system.cues']: this._createWordObject(actor.system.cues),\n        ['system.dispositions']: this._createWordObject(actor.system.dispositions),\n      });\n    });\n  }\n\n  _createWordObject(current) {\n    return Misc.reindexIds((current ?? []).map(k => this._keywordToObject(k)));\n  }\n  _keywordToObject(k) {\n    if (k instanceof String) {\n      return { word: k }\n    }\n    return k\n  }\n}\n\nclass _0_3_8_MigrateWeaponDamage extends Migration {\n  get version() { return '0.3.8' }\n  get code() { return 'migrate-weapons-strength-damage'; }\n\n  async migrate() {\n\n    const isStrengthDamageItem = it => it.type == TEMPLATE.itemType.weapon && it.system.strength;\n    const fixItemDamage = it => {\n      return {\n        _id: it.id,\n        'system.damageAttribute': TEMPLATE.attributes.strength,\n        'system.strength': undefined,\n      }\n    };\n\n    this.applyItemsUpdates(items => items.filter(isStrengthDamageItem).map(fixItemDamage));\n  }\n\n}\n\nclass _0_3_14_MigrateSkillDrainConvergence extends Migration {\n  get version() { return '0.3.14' }\n  get code() { return 'migrate-skill-drain-convergence'; }\n\n  async migrate() {\n    const withDrain = ANARCHY_SKILLS.filter(it => it.hasDrain).map(it => it.code);\n    const hasDrain = it => it.type == TEMPLATE.itemType.skill && withDrain.includes(it.system.code);\n    const setDrain = it => { return { _id: it.id, 'system.hasDrain': true } };\n\n    const withConvergence = ANARCHY_SKILLS.filter(it => it.hasConvergence).map(it => it.code);\n    const hasConvergence = it => it.type == TEMPLATE.itemType.skill && withConvergence.includes(it.system.code);\n    const setConvergence = it => { return { _id: it.id, 'system.hasConvergence': true } };\n\n    const computeUpdates = items => items.filter(hasDrain).map(setDrain)\n      .concat(items.filter(hasConvergence).map(setConvergence))\n\n    await this.applyItemsUpdates(computeUpdates);\n  }\n}\n\nclass _0_4_0_SelectWeaponDefense extends Migration {\n  get version() { return '0.4.0' }\n  get code() { return 'migrate-select-weapon-defense'; }\n\n  async migrate() {\n    const findWeaponSkillWithDefense = weapon => ANARCHY_SKILLS.find(it => it.defense && it.code == weapon.system.skill);\n    const setDefense = weapon => {\n      return {\n        _id: weapon.id,\n        'system.defense': AttributeActions.fixedDefenseCode(findWeaponSkillWithDefense(weapon)?.defense)\n      }\n    };\n\n    await this.applyItemsUpdates(items =>\n      items.filter(it => it.isWeapon())\n        .filter(findWeaponSkillWithDefense)\n        .map(setDefense));\n  }\n}\n\nclass _0_5_0_MigrationBaseResistanceIsZero extends Migration {\n  get version() { return '0.5.0' }\n  get code() { return 'base-resistance-is-zero'; }\n\n  async migrate() {\n    game.actors.forEach(async actor => await actor.update(this._resistanceUpdates(actor)));\n  }\n\n  _resistanceUpdates(actor) {\n    const updates = {};\n    Object.entries(actor.system.monitors).forEach(\n      kv => {\n        if (kv[1].resistance) {\n          updates[`system.monitors.${kv[0]}.resistance`] = 0;\n        }\n      });\n    return updates;\n  }\n}\n\nclass _0_6_0_MigrateSkillSocial extends Migration {\n  get version() { return '0.6.0' }\n  get code() { return 'migrate-skill-social' }\n\n  async migrate() {\n    const socialSkills = ANARCHY_SKILLS.filter(it => it.isSocial).map(it => it.code)\n    const isSocial = it => it.type == TEMPLATE.itemTypeskill && socialSkills.includes(it.system.code)\n    const setSocial = it => { return { _id: it.id, 'system.isSocial': true } }\n    await this.applyItemsUpdates(items => items.filter(isSocial).map(setSocial))\n  }\n}\n\nclass _11_1_0_MigrateAndWarnAboutDefenseModifiers extends Migration {\n  get version() { return '11.1.0' }\n  get code() { return 'migrate-defense-roll-modifiers' }\n\n  constructor() {\n    super()\n    this.isDefenseModifier = modifier => (modifier.group == 'roll'\n      && modifier.category == 'defense');\n    this.isCorrespondingActionModifier = (modifier, defense) => (modifier.group == 'roll'\n      && modifier.effect == defense.effect\n      && modifier.category == 'attributeAction'\n      && modifier.subCategory == defense.subCategory)\n    this.hasDefenseModifiers = it => (it.system.modifiers ?? [])\n      .filter(this.isDefenseModifier).length > 0\n  }\n\n  async migrate() {\n    const actualUpdates = []\n    await this.applyItemsUpdates(items => {\n      const itemsWithDefenseModifiers = items.filter(this.hasDefenseModifiers);\n      return itemsWithDefenseModifiers.map(item => this.getItemModifiersUpdate(item, actualUpdates));\n    })\n    if (actualUpdates.length > 0)\n      ChatMessage.create({\n        whisper: ChatMessage.getWhisperRecipients('GM'),\n        content: `${this.version} - Migration of defense modifiers:<ul>` + actualUpdates.reduce((a, b) => a + b) + `</ul></li>`\n      })\n  }\n\n  getItemModifiersUpdate(item, actualUpdates) {\n    const itemNotes = []\n    function addNote(action, d, m) {\n      itemNotes.push(`<li> ${action}: ${d.group}/${d.effect}/${d.subCategory} : ${d.category}/${d.value} ${d.condition} => ${m.category}/${m.value} ${m.condition}</li>`)\n    }\n\n    const newModifiers = {}\n    item.system.modifiers.forEach(m => newModifiers[m.id] = duplicate(m))\n\n    Object.values(newModifiers).filter(m => this.isDefenseModifier(m))\n      .forEach(defense => {\n        const oldDefense = duplicate(defense)\n        let actionAttributes = Object.values(newModifiers).filter(other => this.isCorrespondingActionModifier(other, defense))\n        switch (actionAttributes.length) {\n          case 0: {\n            defense.category = ANARCHY_SYSTEM.rollType.attributeAction\n            addNote('Changed category', oldDefense, defense)\n            break\n          }\n          case 1: {\n            const other = actionAttributes[0]\n            foundry.utils.mergeObject(other, {\n              value: Math.max(defense.value, other.value),\n              condition: (other.condition ? other.condition + (defense.condition ?? '') : defense.condition)\n            }, { overwrite: true })\n            delete newModifiers[defense.id]\n            addNote('Merged with existing', defense, other)\n            break\n          }\n          default: {\n            delete newModifiers[defense.id]\n            addNote('Removed', defense, { category: '-', value: '-', condition: '-' })\n            break\n          }\n        }\n      })\n    if (itemNotes.length > 0) {\n      actualUpdates.push(`<li> ${item.actor ? item.actor.name : '-standalone-'} Item ${item.name} modifiers changed:\n        <ul>${itemNotes.reduce(Misc.joiner())}</ul>\n        </li>`)\n    }\n    return { _id: item.id, 'system.modifiers': Object.values(newModifiers) }\n  }\n}\n\nclass _11_1_9_MigrateVehicleHandlingToAttribute extends Migration {\n  get version() { return '11.1.9' }\n  get code() { return 'migrate-vehicle-handling' }\n\n  async migrate() {\n    game.actors.filter(it => it.isVehicle()).forEach(async actor => await actor._migrateHandlingToAttribute())\n  }\n}\n\nclass _11_1_12_MigrateBackWords extends Migration {\n  get version() { return '11.1.12' }\n  get code() { return 'migrate-back-words' }\n  async migrate() {\n    game.actors.forEach(async actor => {\n      await actor.update({\n        ['system.keywords']: this._migrateBackWords(actor.system.keywords),\n        ['system.cues']: this._migrateBackWords(actor.system.cues),\n        ['system.dispositions']: this._migrateBackWords(actor.system.dispositions),\n      });\n    });\n  }\n\n  _migrateBackWords(current) {\n    if (current) {\n      return Misc.reindexIds(current.map(k => this._migrateBackWord(k)));\n    }\n    return []\n  }\n\n  _migrateBackWord(k) {\n    while (k.word != undefined && !Misc.isString(k.word)) {\n      k = k.word\n    }\n    return k\n  }\n}\n\nclass _11_1_16_MigrateSkillsAttributes extends Migration {\n  get version() { return '11.1.16' }\n  get code() { return 'migrate-skills-attributes' }\n  async migrate() {\n    this.applyItemsUpdates(items => items.filter(it => it.type == TEMPLATE.itemType.skill)\n      .filter(it => it.system.attribute == '' || it.system.code == '')\n      .map(it => {\n        return {\n          _id: it.id,\n          'system.attribute': '',\n          'system.code': TEMPLATE.attributes.knowledge\n        }\n      }));\n  }\n}\n\nclass _12_0_1_MigrateChatMessageFlags extends Migration {\n  get version() { return '12.0.1' }\n  get code() { return 'migrate-chatmessage-flags-messagedata' }\n  async migrate() {\n    await Promise.all(\n      game.messages.map(async message => {\n        const json = message.getFlag(SYSTEM_SCOPE, MESSAGE_DATA)\n        if (json) {\n          await message.setFlag(SYSTEM_SCOPE, MESSAGE_DATA, JSON.parse(json))\n        }\n      })\n    )\n  }\n}\n\nclass _12_0_4_MigrateWeaponDrain extends Migration {\n  get version() { return '12.0.2' }\n  get code() { return 'migrate-weapon-drain' }\n  async migrate() {\n    this.applyItemsUpdates(items => items.filter(it => it.type = TEMPLATE.itemType.weapon)\n      .filter(it => it.hasDrain)\n      .map(it => {\n        return {\n          _id: it.id,\n          'system.drain': 1\n        }\n      }))\n  }\n}\n\nexport class Migrations {\n  constructor() {\n    HooksManager.register(ANARCHY_HOOKS.DECLARE_MIGRATIONS);\n\n    Hooks.once(ANARCHY_HOOKS.DECLARE_MIGRATIONS, addMigrations => addMigrations(\n      new _0_3_1_MigrationMoveWordsInObjects(),\n      new _0_3_8_MigrateWeaponDamage(),\n      new _0_3_14_MigrateSkillDrainConvergence(),\n      new _0_4_0_SelectWeaponDefense(),\n      new _0_5_0_MigrationBaseResistanceIsZero(),\n      new _0_6_0_MigrateSkillSocial(),\n      new _11_1_0_MigrateAndWarnAboutDefenseModifiers(),\n      new _11_1_9_MigrateVehicleHandlingToAttribute(),\n      new _11_1_12_MigrateBackWords(),\n      new _11_1_16_MigrateSkillsAttributes(),\n      new _12_0_1_MigrateChatMessageFlags(),\n      new _12_0_4_MigrateWeaponDrain(),\n    ));\n\n    game.settings.register(SYSTEM_NAME, SYSTEM_MIGRATION_CURRENT_VERSION, {\n      name: \"System Migration Version\",\n      scope: \"world\",\n      config: false,\n      type: String,\n      default: \"0.0.0\"\n    });\n  }\n\n  migrate() {\n    const currentVersion = game.settings.get(SYSTEM_NAME, SYSTEM_MIGRATION_CURRENT_VERSION);\n    if (foundry.utils.isNewerVersion(game.system.version, currentVersion)) {\n      //if (true) {\n      let migrations = [];\n      Hooks.callAll(ANARCHY_HOOKS.DECLARE_MIGRATIONS, (...addedMigrations) =>\n        migrations = migrations.concat(addedMigrations.filter(m => foundry.utils.isNewerVersion(m.version, currentVersion)))\n      );\n      Hooks.off(ANARCHY_HOOKS.DECLARE_MIGRATIONS, () => { });\n\n      if (migrations.length > 0) {\n\n        migrations.sort((a, b) => foundry.utils.isNewerVersion(a.version, b.version) ? 1 : foundry.utils.isNewerVersion(b.version, a.version) ? -1 : 0);\n        migrations.forEach(async m => {\n          ui.notifications.info(`Executing migration ${m.code}: version ${currentVersion} is lower than ${m.version}`);\n          await m.migrate();\n        });\n        ui.notifications.info(`Migrations done, version will change to ${game.system.version}`);\n      }\n      else {\n        console.log(LOG_HEAD + `No migration needeed, version will change to ${game.system.version}`)\n      }\n      game.settings.set(SYSTEM_NAME, SYSTEM_MIGRATION_CURRENT_VERSION, game.system.version);\n    }\n    else {\n      console.log(LOG_HEAD + `No system version changed`);\n    }\n  }\n\n}\n","import { ANARCHY } from \"../config.js\";\nimport { TEMPLATES_PATH } from \"../constants.js\";\nimport { Misc } from \"../misc.js\";\nimport { Modifiers } from \"../modifiers/modifiers.js\";\n\nconst HBS_TEMPLATE_CHAT_CELEBRITY_ROLL = `${TEMPLATES_PATH}/chat/celebrity-roll.hbs`;\n\nexport class RollCelebrity extends Dialog {\n\n  static async create(actor) {\n    const rollData = {\n      actor: actor,\n      celebrity: {\n        labelkey: ANARCHY.actor.celebrity,\n        value: actor.getCelebrityValue(),\n      },\n      modifiers: foundry.utils.mergeObject(\n        { labelkey: ANARCHY.item.tabs.modifiers },\n        Modifiers.computeModifiers(actor.items, 'other', 'celebrity')\n      ),\n      other: {\n        labelkey: ANARCHY.common.roll.modifiers.other,\n        value: 0\n      },\n      ANARCHY: ANARCHY,\n    }\n\n    const title = await renderTemplate(`${TEMPLATES_PATH}/dialog/roll-celebrite-title.hbs`, rollData);\n    const html = await renderTemplate(`${TEMPLATES_PATH}/dialog/roll-celebrite.hbs`, rollData);\n    new RollCelebrity(title, html, rollData).render(true);\n  }\n\n  constructor(title, html, roll) {\n    const config = {\n      title: title,\n      content: html,\n      default: 'roll',\n      buttons: {\n        'roll': {\n          label: game.i18n.localize(ANARCHY.common.roll.button),\n          callback: async () => RollCelebrity.doRoll(roll)\n        }\n      },\n    };\n    const options = {\n      classes: [game.system.anarchy.styles.selectCssClass(), \"anarchy-dialog\"],\n      width: 400,\n      height: 'fit-content',\n      'z-index': 99999,\n    };\n\n    super(config, options);\n  }\n\n  activateListeners(html) {\n    super.activateListeners(html);\n    this.bringToTop();\n    html.find(\".input-celebrity-other\").on('input', event => {\n      this.roll.other.value = Number.parseInt(event.currentTarget.value) ?? 0;\n    });\n  }\n\n  static async doRoll(rollData) {\n    const parameters = [\n      rollData.celebrity,\n      rollData.modifiers,\n      rollData.other\n    ];\n    const pool = Misc.sumValues(parameters, it => it.value);\n    const hbsCelebrityRoll = {\n      actor: rollData.actor,\n      parameters: parameters,\n      pool: pool,\n      options: {\n        classes: [game.system.anarchy.styles.selectCssClass()]\n      },\n      ANARCHY: ANARCHY\n    }\n    const roll = new Roll(`${pool}d6cs>=5`);\n    await roll.evaluate();\n\n    const flavor = await renderTemplate(HBS_TEMPLATE_CHAT_CELEBRITY_ROLL, hbsCelebrityRoll);\n    await roll.toMessage({ flavor: flavor });\n  }\n\n  // async roll() {\n  //   const parameters = [\n  //     this.roll.celebrity,\n  //     this.roll.modifiers,\n  //     this.roll.other\n  //   ];\n  //   const pool = Misc.sumValues(parameters, it => it.value);\n  //   const hbsCelebrityRoll = {\n  //     actor: this.roll.actor,\n  //     parameters: parameters,\n  //     pool: pool,\n  //     options: {\n  //       classes: [game.system.anarchy.styles.selectCssClass()]\n  //     },\n  //     ANARCHY: ANARCHY\n  //   }\n  //   const roll = new Roll(`${pool}d6cs>=5`);\n  //   await roll.evaluate();\n\n  //   const flavor = await renderTemplate(HBS_TEMPLATE_CHAT_CELEBRITY_ROLL, hbsCelebrityRoll);\n  //   await roll.toMessage({ flavor: flavor });\n  // }\n}","import { ANARCHY } from \"../config.js\";\nimport { TEMPLATE, TEMPLATES_PATH } from \"../constants.js\";\nimport { AnarchyBaseActor } from \"./base-actor.js\";\nimport { ErrorManager } from \"../error-manager.js\";\nimport { Misc } from \"../misc.js\";\nimport { Modifiers } from \"../modifiers/modifiers.js\";\nimport { Checkbars, DEFAULT_CHECKBARS } from \"../common/checkbars.js\";\nimport { RollCelebrity } from \"../dialog/roll-celebrity.js\";\nimport { ANARCHY_HOOKS } from \"../hooks-manager.js\";\nimport { MATRIX, Matrix, NO_MATRIX_MONITOR } from \"../matrix-helper.js\";\n\nconst HBS_TEMPLATE_ACTOR_DRAIN = `${TEMPLATES_PATH}/chat/actor-drain.hbs`;\nconst HBS_TEMPLATE_ACTOR_SAY_WORD = `${TEMPLATES_PATH}/chat/actor-say-word.hbs`;\n\nexport class CharacterActor extends AnarchyBaseActor {\n\n  static get initiative() {\n    return AnarchyBaseActor.initiative + \" + max(@attributes.agility.value, @attributes.logic.value)\";\n  }\n\n  hasOwnAnarchy() { return this.hasPlayerOwner; }\n\n  prepareDerivedData() {\n    this.system.monitors.physical.max = this._getMonitorMax(TEMPLATE.attributes.strength)\n    this.system.monitors.stun.max = this._getMonitorMax(TEMPLATE.attributes.willpower)\n    super.prepareDerivedData()\n    this.system.ignoreWounds = Modifiers.sumModifiers(this.items, 'other', 'ignoreWounds')\n  }\n\n  computePhysicalState() {\n    const maxMonitor = Math.max(this.system.monitors.physical.max, this.system.monitors.stun.max) + this.system.monitors.armor.max\n    const dead = this.system.monitors.physical.value == this.system.monitors.physical.max\n    const ko = this.system.monitors.stun.max == this.system.monitors.stun.value\n    const current = (dead || ko)\n      ? maxMonitor\n      : Math.max(this.system.monitors.physical.value, this.system.monitors.stun.value) + this.system.monitors.armor.value\n    return {\n      max: maxMonitor,\n      value: maxMonitor - current\n    }\n  }\n\n  computeEssence() {\n    // base essence\n    const baseEssence = game.system.anarchy.hooks.callHookMethod(ANARCHY_HOOKS.PROVIDE_BASE_ESSENCE, this)\n    // spent essence: from cyberware/bioware\n    const spentEssence = Misc.sumValues(this.items.filter(it => it.type == 'shadowamp')\n      .map(it => Math.abs(it.system.essence)))\n    // adjustments: from quality (that gives a \"free\" essence point), or essence losses due to vampire\n    const essenceAdjustment = Modifiers.sumModifiers(this.items, 'other', 'essenceAdjustment')\n    return baseEssence + essenceAdjustment - Math.max(0, spentEssence)\n  }\n\n  computeMalusEssence(essence = undefined) {\n    return game.system.anarchy.hooks.callHookMethod(ANARCHY_HOOKS.PROVIDE_MALUS_ESSENCE, this, essence ?? this.computeEssence())\n  }\n\n  getAttributes() {\n    return [\n      TEMPLATE.attributes.strength,\n      TEMPLATE.attributes.agility,\n      TEMPLATE.attributes.willpower,\n      TEMPLATE.attributes.logic,\n      TEMPLATE.attributes.charisma,\n      TEMPLATE.attributes.edge\n    ];\n  }\n\n  getPhysicalAgility() { return TEMPLATE.attributes.agility }\n\n  getCorrespondingAttribute(attribute) {\n    if (TEMPLATE.attributes.firewall == attribute) {\n      return TEMPLATE.attributes.firewall\n    }\n    return super.getCorrespondingAttribute(attribute)\n  }\n\n  getMatrixDetails() {\n    const cyberdeck = this.getCyberdeck();\n    if (cyberdeck?.isConnected()) {\n      return {\n        hasMatrix: true,\n        logic: TEMPLATE.attributes.logic,\n        firewall: TEMPLATE.attributes.firewall,\n        monitor: cyberdeck.system.monitors.matrix,\n        overflow: cyberdeck.getMatrixOverflow(),\n        setMatrixMonitor: async (path, value) => cyberdeck.setMatrixMonitor(path, value),\n      }\n    }\n    if (this.isEmerged()) {\n      return {\n        hasMatrix: true,\n        logic: TEMPLATE.attributes.logic,\n        firewall: TEMPLATE.attributes.logic,\n        monitor: this.system.monitors.stun,\n        overflow: TEMPLATE.monitors.physical,\n        setMatrixMonitor: async (path, value) => {\n          if (path == DEFAULT_CHECKBARS.matrix.path) {\n            return await Checkbars.setCheckbar(this, TEMPLATE.monitors.stun, value)\n          }\n        }\n      }\n    }\n    return {\n      hasMatrix: false,\n      logic: TEMPLATE.attributes.logic,\n      firewall: undefined,\n      monitor: NO_MATRIX_MONITOR,\n      overflow: undefined\n    }\n  }\n\n  isMatrixConnected(mode = undefined) {\n    mode = Matrix.resolveConnectionMode(mode)\n    let connectionMode = undefined\n    const cyberdeck = this.getCyberdeck();\n    if (cyberdeck?.isConnected()) {\n      connectionMode = cyberdeck.getConnectionMode()\n    }\n    if (!connectionMode && this.isEmerged()) {\n      connectionMode = this.system.connectionMode\n    }\n    if (mode == undefined) {\n      return Matrix.resolveConnectionMode(connectionMode) != MATRIX.connectionMode.disconnected\n    }\n    return Matrix.resolveConnectionMode(connectionMode) == mode\n  }\n  async nextConnectionMode(cyberdeck) {\n    if (cyberdeck) {\n      await cyberdeck.nextConnectionMode()\n    }\n    else if (this.isEmerged()) {\n      const newConnectionMode = Matrix.getNextConnectionMode(this.system.connectionMode)\n      await this.update({ 'system.connectionMode': newConnectionMode })\n    }\n  }\n\n  prepareMatrixMonitor() {\n    const cyberdeck = this.getCyberdeck()\n    if (cyberdeck) {\n      cyberdeck.system.monitors.matrix.maxBonus = Modifiers.sumMonitorModifiers(this.items, 'matrix', 'max')\n      cyberdeck.system.monitors.matrix.resistanceBonus = Modifiers.sumMonitorModifiers(this.items, 'matrix', 'resistance')\n    }\n  }\n\n  getDamageMonitor(damageType) {\n    switch (damageType) {\n      case TEMPLATE.monitors.stun:\n      case TEMPLATE.monitors.physical:\n        return damageType;\n    }\n    return super.getDamageMonitor(damageType);\n  }\n\n  async createWord(wordType, added) {\n    this._mutateWords(wordType, values => values.concat([{ word: added, audio: '' }]));\n  }\n\n  async sayWord(wordType, wordId) {\n    const wordsToSay = this.getWord(wordType, wordId)?.word\n    if (wordsToSay) {\n      ChatMessage.create({\n        speaker: { alias: this.token?.name ?? this.name },\n        content: await renderTemplate(HBS_TEMPLATE_ACTOR_SAY_WORD,\n          {\n            actor: this,\n            wordsToSay: wordsToSay\n          })\n      });\n    }\n  }\n\n  getWord(wordType, wordId) {\n    return wordType ? this.system[wordType].find(it => it.id == wordId) : undefined;\n  }\n\n  async updateWord(wordType, id, updated) {\n    this._applyWordUpdate(wordType, id, it => foundry.utils.mergeObject(it, { word: updated }, { overwrite: true }));\n  }\n\n  async _applyWordUpdate(wordType, id, updateFunction) {\n    this._mutateWords(wordType, values => values.map(it => {\n      if (it.id == id) {\n        updateFunction(it)\n      }\n      return it;\n    }));\n  }\n\n  async deleteWord(wordType, deletedId) {\n    this._mutateWords(wordType, values => values.filter(it => it.id != deletedId));\n  }\n\n  async _mutateWords(wordType, mutate = values => values) {\n    if (!wordType) {\n      return;\n    }\n    let newValues = mutate(this.system[wordType]);\n    Misc.reindexIds(newValues);\n    await this.update({ [`system.${wordType}`]: newValues });\n  }\n\n  getCelebrityValue() {\n    return this.system.counters.social.celebrity.value;\n  }\n  getCredibilityValue() {\n    return this.system.counters.social.credibility.value;\n  }\n  getRumorValue() {\n    return this.system.counters.social.rumor.value;\n  }\n\n  getAnarchy() {\n    if (this.hasOwnAnarchy()) {\n      return {\n        value: this.system.counters.anarchy.value,\n        max: this.system.counters.anarchy.max,\n        scene: this.getAnarchyScene()\n      };\n    }\n    return super.getAnarchy();\n  }\n\n  getAnarchyScene() {\n    return this.system.counters.sceneAnarchy.value ?? 0;\n  }\n\n  async spendAnarchy(count) {\n    if (count > 0) {\n      const sceneAnarchy = this.getAnarchyScene();\n      const currentAnarchy = this.getAnarchyValue();\n      ErrorManager.checkSufficient(ANARCHY.actor.counters.anarchy, count, currentAnarchy + sceneAnarchy);\n\n      const useSceneAnarchy = Math.min(sceneAnarchy, count);\n      const useAnarchy = count - useSceneAnarchy;\n\n      if (useSceneAnarchy > 0) {\n        Checkbars.addCounter(this, TEMPLATE.monitors.sceneAnarchy, -useSceneAnarchy);\n      }\n      if (this.hasPlayerOwner) {\n        await game.system.anarchy.gmAnarchy.actorGivesAnarchyToGM(this, count);\n        Checkbars.addCounter(this, TEMPLATE.monitors.anarchy, -useAnarchy);\n      }\n      else if (useAnarchy > 0) {\n        super.spendAnarchy(useAnarchy);\n      }\n    }\n  }\n\n  canUseEdge() { return true }\n\n  getWounds() {\n    const wounds = Misc.divint(this.system.monitors.stun.value, 3) + Misc.divint(this.system.monitors.physical.value, 3);\n    return Math.max(0, wounds - this.system.ignoreWounds);\n  }\n\n  canPilotVehicle() { return true }\n\n  canSetMarks() {\n    return this.getCyberdeck()?.isConnected() || this.isEmerged()\n  }\n\n  canReceiveMarks() {\n    return this.getCyberdeck()?.isConnected()\n  }\n\n  isEmerged() {\n    return this.system.capacity == TEMPLATE.capacities.emerged;\n  }\n\n  getCyberdeck() {\n    return this.items.find(it => it.isActive() && it.isCyberdeck())\n  }\n\n  async rollDrain(drain) {\n    if (drain) {\n      const rollDrain = new Roll(`${drain}dgcf=1[${game.i18n.localize(ANARCHY.common.roll.rollTheme.drain)}]`);\n      await rollDrain.evaluate({ async: true });\n      await this.sufferDrain(rollDrain.total);\n\n      const flavor = await renderTemplate(HBS_TEMPLATE_ACTOR_DRAIN, {\n        ANARCHY: ANARCHY,\n        actor: this,\n        drain: rollDrain.total,\n        options: {\n          classes: game.system.anarchy.styles.selectCssClass()\n        }\n      });\n      await rollDrain.toMessage({ flavor: flavor });\n    }\n  }\n\n  async sufferDrain(drain) {\n    if (drain != 0) {\n      await this.addCounter(TEMPLATE.monitors.stun, drain);\n    }\n  }\n\n  async rollConvergence(convergence) {\n    if (!convergence) {\n      return;\n    }\n    game.system.anarchy.gmConvergence.rollConvergence(this.id, convergence)\n  }\n\n  async rollCelebrity() {\n    await RollCelebrity.create(this);\n  }\n}","import { ICONS_PATH, TEMPLATE } from \"../constants.js\";\nimport { AnarchyBaseActor } from \"./base-actor.js\";\n\n\nconst DEVICE_ATTRIBUTES = [\n  TEMPLATE.attributes.system,\n  TEMPLATE.attributes.firewall,\n]\nexport class DeviceActor extends AnarchyBaseActor {\n\n  static get defaultIcon() {\n    return `${ICONS_PATH}/actors/cctv-camera.svg`\n  }\n\n  static get initiative() {\n    return AnarchyBaseActor.initiative + \" + @attributes.system.value\"\n  }\n\n  getMatrixDetails() {\n    return {\n      hasMatrix: true,\n      logic: TEMPLATE.attributes.system,\n      firewall: TEMPLATE.attributes.firewall,\n      monitor: this.system.monitors.matrix,\n      overflow: undefined,\n    }\n  }\n\n  getAttributes() {\n    return DEVICE_ATTRIBUTES\n  }\n}","import { ANARCHY } from \"../config.js\";\nimport { ICONS_PATH, TEMPLATE } from \"../constants.js\";\nimport { ErrorManager } from \"../error-manager.js\";\nimport { AnarchyUsers } from \"../users.js\";\nimport { AnarchyBaseActor } from \"./base-actor.js\";\n\nconst VEHICLE_ATTRIBUTES = [\n  TEMPLATE.attributes.autopilot,\n  TEMPLATE.attributes.handling,\n  TEMPLATE.attributes.firewall,\n  TEMPLATE.attributes.system\n]\n\nexport class VehicleActor extends AnarchyBaseActor {\n\n  static get defaultIcon() {\n    return `${ICONS_PATH}/shadowamps/drone.svg`\n  }\n\n  static get initiative() {\n    return AnarchyBaseActor.initiative + \" + max(@attributes.system.value, @attributes.autopilot.value)\"\n  }\n\n  prepareDerivedData() {\n    this.system.monitors.matrix.max = this._getMonitorMax(TEMPLATE.attributes.system)\n    super.prepareDerivedData()\n  }\n\n  computePhysicalState() {\n    return {\n      max: this.system.monitors.structure.max,\n      value: this.system.monitors.structure.max - this.system.monitors.structure.value\n    }\n  }\n\n  getMatrixDetails() {\n    return {\n      hasMatrix: true,\n      logic: TEMPLATE.attributes.system,\n      firewall: TEMPLATE.attributes.firewall,\n      monitor: this.system.monitors.matrix,\n      overflow: undefined,\n    }\n  }\n\n  getAttributes() {\n    return VEHICLE_ATTRIBUTES\n  }\n\n  getPhysicalAgility() { return TEMPLATE.attributes.autopilot }\n\n  getDamageMonitor(damageType) {\n    switch (damageType) {\n      case TEMPLATE.monitors.physical: return TEMPLATE.monitors.structure\n      case TEMPLATE.monitors.stun: return undefined\n    }\n    return super.getDamageMonitor(damageType)\n  }\n\n  getRightToDefend() {\n    return CONST.DOCUMENT_OWNERSHIP_LEVELS.OBSERVER\n  }\n\n  async rollPilotDefense(attack) {\n    const selectedActors = AnarchyUsers.getSelectedActors()\n    ErrorManager.checkOutOfRange(ANARCHY.user.selectedTokenActors, selectedActors.length, 0, 1)\n\n    const character = AnarchyUsers.getPlayerActor(game.user);\n    const vehicleOwner = this.getOwnerActor();\n    const pilot = [...selectedActors, character, vehicleOwner]\n      .filter(actor => actor?.testUserPermission(game.user, this.getRightToDefend()))\n      .find(actor => actor?.canPilotVehicle())\n    if (pilot) {\n      return await pilot.rollDefense(attack)\n    }\n    else {\n      ui.notifications.warn(\n        game.i18n.localize(ANARCHY.common.errors.noValidPilotForVehicle, {\n          vehicle: this.name\n        }))\n    }\n  }\n  async _migrateHandlingToAttribute(actor) {\n    const fromAttribute = this.system.attributes.handling?.value ?? 0\n    const fromOldField = this.system.handling\n    if (fromOldField && fromAttribute < fromOldField) {\n      await this.update({\n        'system.-=handling': null,\n        'system.attributes.handling.value': fromOldField\n      })\n    }\n  }\n\n}","import { TEMPLATES_PATH } from \"../constants.js\";\nimport { CharacterBaseSheet } from \"./character-base-sheet.js\";\n\nexport class CharacterActorSheet extends CharacterBaseSheet {\n\n  get template() {\n    return `${TEMPLATES_PATH}/actor/character.hbs`;\n  }\n\n  /** @override */\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      width: 720,\n      height: 700,\n    });\n  }\n\n}","import { AnarchyActorSheet } from \"./anarchy-actor-sheet.js\";\n\nexport class DeviceSheet extends AnarchyActorSheet {\n\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      width: 450,\n      height: 550\n    });\n  }\n\n  getData(options) {\n    let hbsData = foundry.utils.mergeObject(\n      super.getData(options), {\n    });\n    return hbsData;\n  }\n\n  activateListeners(html) {\n    super.activateListeners(html);\n  }\n\n}","import { AnarchyActorSheet } from \"./anarchy-actor-sheet.js\";\n\nexport class VehicleSheet extends AnarchyActorSheet {\n\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      width: 450,\n      height: 550\n    });\n  }\n\n  getData(options) {\n    let hbsData = foundry.utils.mergeObject(\n      super.getData(options), {\n    });\n    return hbsData;\n  }\n\n  activateListeners(html) {\n    super.activateListeners(html);\n  }\n\n}","import { TEMPLATES_PATH } from \"../constants.js\";\nimport { CharacterBaseSheet } from \"./character-base-sheet.js\";\n\nexport class CharacterNPCSheet extends CharacterBaseSheet {\n\n  get template() {\n    return `${TEMPLATES_PATH}/actor/npc-sheet.hbs`;\n  }\n\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      width: 450,\n      height: 550\n    });\n  }\n\n  getData(options) {\n    let hbsData = super.getData(options);\n    hbsData.options.classes.push('npc-sheet');\n    return hbsData;\n  }\n}","import { ICONS_PATH } from \"../constants.js\";\nimport { AnarchyBaseItem } from \"./anarchy-base-item.js\";\n\nexport class MetatypeItem extends AnarchyBaseItem {\n\n  static get defaultIcon() {\n    return `${ICONS_PATH}/vitruvian-man.svg`;\n  }\n\n  async onCreateItem(options, id) {\n    this.parent?.removeOtherMetatype(this);\n  }\n}","import { ICONS_PATH } from \"../constants.js\";\nimport { TEMPLATE } from \"../constants.js\";\nimport { MATRIX, Matrix } from \"../matrix-helper.js\";\nimport { AnarchyBaseItem } from \"./anarchy-base-item.js\";\n\nexport class CyberdeckItem extends AnarchyBaseItem {\n\n  static get defaultIcon() {\n    return `${ICONS_PATH}/shadowamps/cyberdeck.svg`;\n  }\n\n  getAttributes() {\n    return [\n      TEMPLATE.attributes.firewall\n    ];\n  }\n\n  async setMatrixMonitor(checkbarPath, value) {\n    await this.update({ [checkbarPath]: value });\n  }\n\n  hasMatrixMonitor() { return true }\n\n  getMatrixMonitor() { return this.system.monitors.matrix }\n\n  getMatrixOverflow() {\n    switch (this.system.connectionMode) {\n      case MATRIX.connectionMode.virtual: return TEMPLATE.monitors.physical\n      case MATRIX.connectionMode.augmented: return TEMPLATE.monitors.stun\n    }\n    return undefined\n  }\n\n  isConnected() { return this.getMatrixOverflow() != undefined }\n\n  getConnectionMode() { return this.system.connectionMode }\n\n  async nextConnectionMode() {\n    const newConnectionMode = Matrix.getNextConnectionMode(this.system.connectionMode)\n    await this.update({ 'system.connectionMode': newConnectionMode })\n  }\n}","import { ANARCHY } from \"../config.js\";\nimport { TEMPLATE, TEMPLATES_PATH } from \"../constants.js\";\nimport { Enums } from \"../enums.js\";\n\nexport class BaseItemSheet extends ItemSheet {\n\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      isGM: game.user.isGM,\n      dragDrop: [{ dragSelector: \".item \", dropSelector: null }],\n      classes: [game.system.anarchy.styles.selectCssClass(), \"sheet\", \"item-sheet\"],\n      tabs: [{ navSelector: \".sheet-tabs\", contentSelector: \".sheet-body\", initial: \"main\" }],\n    });\n  }\n\n\n  get title() {\n    return game.i18n.localize(ANARCHY.itemType.singular[this.item.type]) + ': ' + this.item.name;\n  }\n\n  get template() {\n    return `${TEMPLATES_PATH}/item/${this.object.type}.hbs`;\n  }\n\n  getData(options) {\n    const actorAttributes = this.item.actor?.getAttributes(this.item);\n\n    const usableAttribute = (this.item.actor\n      ? attribute => actorAttributes.includes(attribute)\n      : attribute => true)\n    const withKnowledge = this.item.type == TEMPLATE.itemType.skill\n\n    let hbsData = foundry.utils.mergeObject(\n      super.getData(options),\n      {\n        options: {\n          isGM: game.user.isGM,\n          owner: this.document.isOwner,\n          isOwned: (this.actor != undefined),\n          editable: this.isEditable,\n          cssClass: this.isEditable ? \"editable\" : \"locked\",\n        },\n        ENUMS: foundry.utils.mergeObject(Enums.getEnums(usableAttribute, withKnowledge), game.system.anarchy.modifiers.getEnums()),\n        ANARCHY: ANARCHY\n      });\n    hbsData.system = this.item.system;\n\n    return hbsData;\n  }\n\n\n  activateListeners(html) {\n    super.activateListeners(html);\n\n    // counters & monitors\n    html.find('a.click-checkbar-element').click(async event =>\n      await this.onClickMonitor(event)\n    );\n\n    html.find('.click-modifier-add').click(async event =>\n      await this.item.createModifier()\n    );\n    html.find('.click-modifier-delete').click(async event =>\n      await this.item.deleteModifier(this.getEventModifierId(event))\n    );\n    html.find('.input-modifier-value').change(async event =>\n      await this.item.changeModifierValue(\n        this.getEventModifierId(event),\n        event.currentTarget.value)\n    );\n    html.find('.input-modifier-condition').change(async event =>\n      await this.item.changeModifierCondition(\n        this.getEventModifierId(event),\n        event.currentTarget.value)\n    );\n    html.find('.select-modifier-change').change(async event =>\n      await this.item.changeModifierSelection(\n        this.getEventModifierId(event),\n        this.getEventModifierSelect(event),\n        event.currentTarget.value)\n    );\n  }\n\n  async onClickMonitor(event) {\n    if (this.item.parent) {\n      const monitor = this.getEventMonitorCode(event);\n      const sourceActorId = monitor == 'marks' ?\n        $(event.currentTarget).closest('.anarchy-marks').attr('data-actor-id')\n        : undefined;\n      await this.item.parent.switchMonitorCheck(\n        monitor,\n        this.getEventMonitorIndex(event),\n        this.isEventMonitorChecked(event),\n        sourceActorId,\n        item\n      );\n    }\n  }\n\n  getEventMonitorCode(event) {\n    return $(event.currentTarget).closest('.checkbar-root').attr('data-monitor-code');\n  }\n\n  getEventMonitorIndex(event) {\n    return Number.parseInt($(event.currentTarget).attr('data-index'));\n  }\n\n  isEventMonitorChecked(event) {\n    return $(event.currentTarget).attr('data-checked') == 'true';\n  }\n\n  getEventModifierId(event) {\n    return $(event.currentTarget).closest('.define-modifier').attr('data-modifier-id');\n  }\n  getEventModifierSelect(event) {\n    return $(event.currentTarget).attr('data-modifier-select');\n  }\n}\n","import { BaseItemSheet } from \"./base-item-sheet.js\";\n\nexport class ContactItemSheet extends BaseItemSheet {\n\n  getData(options) {\n    let hbsData = super.getData(options);\n    return hbsData;\n  }\n\n  activateListeners(html) {\n    super.activateListeners(html);\n  }\n}\n","import { BaseItemSheet } from \"./base-item-sheet.js\";\n\nexport class CyberdeckItemSheet extends BaseItemSheet {\n\n  getData(options) {\n    let hbsData = super.getData(options);\n    return hbsData;\n  }\n\n\n  activateListeners(html) {\n    html.find('a.click-matrix-connectionMode').click(async event => {\n      await this.item.nextConnectionMode()\n    })\n    super.activateListeners(html);\n  }\n}\n","import { BaseItemSheet } from \"./base-item-sheet.js\";\n\nexport class GearItemSheet extends BaseItemSheet {\n\n  getData(options) {\n    let hbsData = super.getData(options);\n    return hbsData;\n  }\n\n  activateListeners(html) {\n    super.activateListeners(html);\n  }\n}\n","import { BaseItemSheet } from \"./base-item-sheet.js\";\n\nexport class MetatypeItemSheet extends BaseItemSheet {\n\n  getData(options) {\n    let hbsData = super.getData(options);\n    return hbsData;\n  }\n\n  activateListeners(html) {\n    super.activateListeners(html);\n  }\n}\n","import { BaseItemSheet } from \"./base-item-sheet.js\";\n\nexport class QualityItemSheet extends BaseItemSheet {\n\n  getData(options) {\n    let hbsData = super.getData(options);\n    return hbsData;\n  }\n\n  activateListeners(html) {\n    super.activateListeners(html);\n  }\n}\n","import { BaseItemSheet } from \"./base-item-sheet.js\";\n\nexport class ShadowampItemSheet extends BaseItemSheet {\n\n  getData(options) {\n    let hbsData = super.getData(options);\n    return hbsData;\n  }\n\n  activateListeners(html) {\n    super.activateListeners(html);\n  }\n}\n","import { BaseItemSheet } from \"./base-item-sheet.js\";\nimport { SkillItem } from \"./skill-item.js\";\n\nexport class SkillItemSheet extends BaseItemSheet {\n\n  activateListeners(html) {\n    super.activateListeners(html);\n\n    html.find('.select-skill-code').change(async event => {\n      const skillCode = event.currentTarget.value\n      const updates = SkillItem.prepareSkill(skillCode)\n      if (updates) {\n        await this.object.update(updates)\n      }\n    })\n  }\n}\n","import { AttributeActions } from \"../attribute-actions.js\";\nimport { BaseItemSheet } from \"./base-item-sheet.js\";\n\nexport class WeaponItemSheet extends BaseItemSheet {\n\n  getData(options) {\n    let hbsData = super.getData(options);\n    hbsData.ENUMS = foundry.utils.mergeObject({ defenses: AttributeActions.getDefenses(), }, hbsData.ENUMS);\n    hbsData.hasDrain = this.item.hasDrain\n    hbsData.hasConvergence = this.item.hasConvergence\n    return hbsData;\n  }\n\n  activateListeners(html) {\n    super.activateListeners(html);\n\n    html.find('.select-weapon-skill').change(async event => {\n      const skillCode = event.currentTarget.value;\n      const skill = game.system.anarchy.skills.get(skillCode)\n      if (skill) {\n        await this.object.update({ 'system.defense': skill.defense }, { render: false })\n      }\n    });\n  }\n}\n","import { ICONS_PATH } from \"../constants.js\";\nimport { AnarchyBaseItem } from \"./anarchy-base-item.js\";\n\nexport class ContactItem extends AnarchyBaseItem {\n\n  static get defaultIcon() {\n    return `${ICONS_PATH}/contacts/contact.svg`;\n  }\n\n}","import { ICONS_PATH } from \"../constants.js\";\nimport { AnarchyBaseItem } from \"./anarchy-base-item.js\";\n\nexport class GearItem extends AnarchyBaseItem {\n\n  static get defaultIcon() {\n    return `${ICONS_PATH}/gear/gear.svg`;\n  }\n\n}","import { ICONS_PATH } from \"../constants.js\";\nimport { AnarchyBaseItem } from \"./anarchy-base-item.js\";\n\nexport class QualityItem extends AnarchyBaseItem {\n\n  static get defaultIcon() {\n    return `${ICONS_PATH}/quality-positive.svg`;\n  }\n\n\n}","import { ICONS_PATH } from \"../constants.js\";\nimport { AnarchyBaseItem } from \"./anarchy-base-item.js\";\n\nexport class ShadowampItem extends AnarchyBaseItem {\n\n  static get defaultIcon() {\n    return `${ICONS_PATH}/shadowamps/other.svg`;\n  }\n\n}","import { Checkbars } from \"../common/checkbars.js\";\nimport { ANARCHY } from \"../config.js\";\nimport { SYSTEM_NAME, TEMPLATES_PATH } from \"../constants.js\";\nimport { RemoteCall } from \"../remotecall.js\";\n\nconst CONVERGENCES = \"convergences\";\nconst SETTING_KEY_CONVERGENCES = `${SYSTEM_NAME}.${CONVERGENCES}`;\nconst ROLL_CONVERGENCE = 'GMConvergence.rollConvergence';\n\nconst HBS_TEMPLATE_CONVERGENCE = `${TEMPLATES_PATH}/app/gm-convergence.hbs`\nconst HBS_TEMPLATE_CONVERGENCE_ACTORS = `${TEMPLATES_PATH}/app/gm-convergence-actors.hbs`;\nexport class GMConvergence {\n\n  constructor() {\n    game.settings.register(SYSTEM_NAME, CONVERGENCES, {\n      scope: \"world\",\n      config: false,\n      default: [],\n      type: Array\n    });\n    this.convergences = [];\n    Hooks.on('updateSetting', async (setting, update, options, id) => this.onUpdateSetting(setting, update, options, id));\n    Hooks.once('ready', () => this.onReady());\n  }\n\n  async onReady() {\n    await loadTemplates([\n      HBS_TEMPLATE_CONVERGENCE,\n      HBS_TEMPLATE_CONVERGENCE_ACTORS\n    ]);\n    this.convergences = game.settings.get(SYSTEM_NAME, CONVERGENCES)\n      .filter(it => game.actors.get(it.actorId));\n    await RemoteCall.register(ROLL_CONVERGENCE, {\n      callback: it => this.rollConvergence(it.actorId, it.convergence),\n      condition: user => user.isGM\n    });\n  }\n\n  getConvergences() {\n    return this.convergences;\n  }\n\n  async rollConvergence(actorId, convergence) {\n    if (!RemoteCall.call(ROLL_CONVERGENCE, { actorId: actorId, convergence: convergence })) {\n      await this._gmRollConvergence(convergence, actorId);\n    }\n  }\n\n  async _gmRollConvergence(convergence, actorId) {\n    const actor = game.actors.get(actorId);\n    const rollConvergence = new Roll(`${convergence}dgcf=1[${game.i18n.localize(ANARCHY.common.roll.rollTheme.convergence)}]`);\n    await rollConvergence.evaluate({ async: true });\n    this.addConvergence(actor, rollConvergence.total);\n    rollConvergence.toMessage({\n      user: game.user,\n      whisper: ChatMessage.getWhisperRecipients('GM'),\n      blind: true,\n      flavor: `Convergence for ${actor.name}: ${rollConvergence.total}`\n    }, { rollType: 'blindroll' });\n  }\n\n  async addConvergence(actor, added) {\n    if (!game.user.isGM || !added) {\n      return;\n    }\n    await this.setActorConvergence(actor, this.getConvergence(actor) + added);\n  }\n\n  getConvergence(actor) {\n    if (!game.user.isGM) {\n      return 0; // undisclosed\n    }\n    return this.convergences.find(it => it.actorId == actor.id)?.convergence ?? 0;\n  }\n\n  async setActorConvergence(actor, newConvergence) {\n    let c = this.convergences.find(it => it.actorId == actor.id);\n    if (!c) {\n      c = { actorId: actor.id };\n      this.convergences.push(c);\n    }\n    c.convergence = newConvergence;\n    this.convergences = this.convergences.filter(it => it.convergence > 0);\n    game.settings.set(SYSTEM_NAME, CONVERGENCES, this.convergences);\n  }\n\n\n  async activateListeners(html) {\n    this.toolbar = html.find(\".gm-convergence-bar\");\n    await this._rebuild();\n  }\n\n  async onUpdateSetting(setting, update, options, id) {\n    if (game.user.isGM && setting.key == SETTING_KEY_CONVERGENCES) {\n      await this._rebuild();\n    }\n  }\n\n  async _rebuild() {\n    this.toolbar.find('.gm-convergence-content').replaceWith(await this._renderBar());\n    this.toolbar.find('a.click-checkbar-element').click(async (event) => await this._onClickConvergence(event));\n  }\n\n\n  async _onClickConvergence(event) {\n    const monitor = $(event.currentTarget).closest('.checkbar-root').attr('data-monitor-code');\n    const actorId = $(event.currentTarget).closest('.actor-convergence').attr('data-actor-id');\n    const index = Number.parseInt($(event.currentTarget).attr('data-index'));\n    const isChecked = $(event.currentTarget).attr('data-checked') == 'true';\n    const newConvergence = Checkbars.newValue(index, isChecked);\n    const actor = game.actors.get(actorId);\n    await this.setActorConvergence(actor, newConvergence);\n  }\n\n  async _renderBar() {\n    const actorsConvergence = {\n      convergences: this.convergences.map(it => {\n        return {\n          actor: game.actors.get(it.actorId),\n          convergence: it.convergence\n        };\n      })\n    };\n    const html = await renderTemplate(HBS_TEMPLATE_CONVERGENCE_ACTORS, actorsConvergence);\n    return html;\n  }\n\n}\n","import { Misc } from \"./misc.js\";\nimport { AnarchyUsers } from \"./users.js\";\n\nexport class AnarchyCombat extends Combat {\n\n  static init() {\n\n    Hooks.on('createCombatant', async (combatant, options, id) => await combatant.combat.onCreateCombatant(combatant, options, id));\n    Hooks.on('deleteCombatant', async (combatant, options, id) => await combatant.combat.onDeleteCombatant(combatant, options, id));\n    Hooks.on('deleteCombat', async (combat, options, id) => await combat.onDeleteCombat(options, id));\n  }\n\n  get initiative() {\n    return { formula: \"2d6\" }\n  }\n\n  async rollInitiative(ids, options) {\n\n    const selectedCombatants = ids.map(id => this.combatants.find(c => c.id == id));\n    const combatantsByType = Misc.classify(selectedCombatants, it => it.actor.type);\n\n    Object.entries(combatantsByType).forEach(async ([type, list]) => {\n      const typeActorClass = game.system.anarchy.actorClasses[type];\n      const typeIds = list.map(it => it.id);\n      const typeOptions = foundry.utils.mergeObject({ formula: typeActorClass.initiative }, options ?? {});\n      await super.rollInitiative(typeIds, typeOptions);\n    });\n  }\n\n  async onCreateCombatant(combatant, options, id) {\n    if (AnarchyUsers.isUniqueConnectedGM()) {\n      await combatant.actor?.onEnterCombat();\n    }\n  }\n  async onDeleteCombatant(combatant, options, id) {\n    if (AnarchyUsers.isUniqueConnectedGM()) {\n      await this._leaveCombat(combatant);\n    }\n  }\n  async onDeleteCombat(options, id) {\n    if (AnarchyUsers.isUniqueConnectedGM()) {\n      this.combatants.forEach(async c => await this._leaveCombat(c));\n    }\n  }\n\n  async _leaveCombat(combatant) {\n    return await combatant.actor?.onLeaveCombat();\n  }\n}\n","import { AnarchyActorSheet } from \"./anarchy-actor-sheet.js\";\n\nexport class ICSheet extends AnarchyActorSheet {\n\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      width: 450,\n      height: 550\n    });\n  }\n\n  getData(options) {\n    let hbsData = foundry.utils.mergeObject(\n      super.getData(options), {\n    });\n    return hbsData;\n  }\n\n  activateListeners(html) {\n    super.activateListeners(html);\n  }\n\n}","import { AnarchyActorSheet } from \"./anarchy-actor-sheet.js\";\n\nexport class SpriteActorSheet extends AnarchyActorSheet {\n\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      width: 450,\n      height: 550\n    });\n  }\n\n  getData(options) {\n    let hbsData = foundry.utils.mergeObject(\n      super.getData(options), {\n    });\n    return hbsData;\n  }\n\n  activateListeners(html) {\n    super.activateListeners(html);\n  }\n\n}","import { ICONS_PATH, TEMPLATE } from \"../constants.js\";\nimport { AnarchyBaseActor } from \"./base-actor.js\";\n\nconst SPRITE_ATTRIBUTES = [\n  TEMPLATE.attributes.logic,\n  TEMPLATE.attributes.edge,\n]\n\nexport class SpriteActor extends AnarchyBaseActor {\n\n  static get defaultIcon() {\n    return `${ICONS_PATH}/misc/rss.svg`;\n  }\n\n  static get initiative() {\n    return AnarchyBaseActor.initiative + \" + @attributes.logic.value\";\n  }\n\n  getMatrixDetails() {\n    return {\n      hasMatrix: true,\n      logic: TEMPLATE.attributes.logic,\n      firewall: TEMPLATE.attributes.logic,\n      monitor: this.system.monitors.matrix,\n      overflow: undefined,\n    }\n  }\n\n  getAttributes() {\n    return SPRITE_ATTRIBUTES\n  }\n\n  isEmerged() { return true }\n}","import { ICONS_PATH, TEMPLATE } from \"../constants.js\";\nimport { AnarchyBaseActor } from \"./base-actor.js\";\n\nconst IC_ATTRIBUTES = [\n  TEMPLATE.attributes.logic,\n  TEMPLATE.attributes.firewall,\n]\n\nexport class ICActor extends AnarchyBaseActor {\n\n  static get defaultIcon() {\n    return `${ICONS_PATH}/misc/rub-el-hizb.svg`\n  }\n\n  static get initiative() {\n    return AnarchyBaseActor.initiative + \" + @attributes.logic.value\"\n  }\n\n  getMatrixDetails() {\n    return {\n      hasMatrix: true,\n      logic: TEMPLATE.attributes.logic,\n      firewall: TEMPLATE.attributes.firewall,\n      monitor: this.system.monitors.matrix,\n      overflow: undefined,\n    }\n  }\n\n  canSetMarks() { return false }\n\n  getAttributes() {\n    return IC_ATTRIBUTES\n  }\n}","import { ANARCHY } from \"../config.js\";\nimport { TEMPLATES_PATH } from \"../constants.js\";\nimport { Misc } from \"../misc.js\";\n\nconst TEMPLATE_HUD_SHORTCUTS = `${TEMPLATES_PATH}/token/hud-shortcuts.hbs`;\n\nexport class HUDShortcuts {\n\n  constructor() {\n    Hooks.on('renderTokenHUD', async (tokenHUD, html, tokenHUDData) => await this.addExtensionHud(tokenHUD, html, tokenHUDData._id));\n    Hooks.once('ready', () => this.onReady());\n  }\n\n  async onReady() {\n    await loadTemplates([\n      TEMPLATE_HUD_SHORTCUTS,\n    ]);\n  }\n\n  /* -------------------------------------------- */\n  async removeExtensionHud(app, html, tokenId) {\n    html.find('.control-icon.anarchy-shortcuts').remove();\n  }\n\n  async addExtensionHud(app, html, tokenId) {\n    app.hasExtension = true;\n\n    const hud = await this._renderShortcuts(tokenId);\n    html.find('.control-icon[data-action=combat]').after(hud);\n  }\n\n  async _renderShortcuts(tokenId) {\n    const token = canvas.tokens.get(tokenId);\n    const hbsHudData = {\n      tokenId: tokenId,\n      shortcuts: token.actor.getShortcuts(),\n      options: {\n        classes: [game.system.anarchy.styles.selectCssClass()]\n      },\n    };\n    const html = await renderTemplate(TEMPLATE_HUD_SHORTCUTS, hbsHudData);\n    const hud = $(html);\n    const list = hud.find('.anarchy-shortcuts-list');\n\n    this._toggleHudActive(hud, list);\n\n    hud.find('.anarchy-shortcuts-toggle').click(event => {\n      this._toggleHudActive(hud, list);\n    });\n\n    list.find('.anarchy-shortcut-button').click(event => {\n      const tokenId = $(event.currentTarget).closest('.anarchy-shortcuts-list').attr('data-token-id');\n      const shortcutType = $(event.currentTarget).attr('data-shortcut-type');\n      const shortcutId = $(event.currentTarget).attr('data-shortcut-id');\n      this.onClickShortcutButton(tokenId, shortcutType, shortcutId);\n    });\n    return hud;\n  }\n\n  onClickShortcutButton(tokenId, shortcutType, shortcutId) {\n    const token = canvas.tokens.get(tokenId);\n    const actor = token?.actor;\n    if (actor) {\n      const shortcut = actor?.getShortcut(shortcutType, shortcutId);\n      shortcut?.callback(token);\n    }\n    else {\n      ui.notifications.warn(game.i18.localize(ANARCHY.common.errors.noTokenActor));\n    }\n  }\n\n  _toggleHudActive(hud, list) {\n    hud.toggleClass('active');\n    Misc.showControlWhen(list, hud.hasClass('active'));\n  }\n\n}","export class Tokens {\n  static getToken(tokenId) {\n    if (tokenId == undefined) {\n      return undefined\n    }\n    let token = game.scenes.current?.tokens.get(tokenId);\n    if (token) {\n      return token;\n    }\n    for (let scene of game.scenes) {\n      token = scene.tokens.find(token => token.id == tokenId);\n      if (token) {\n        return token;\n      }\n    }\n    console.warn('No token found in any scene with id', tokenId);\n    return undefined;\n  }\n}","import { ChatManager, CAN_USE_EDGE, MESSAGE_DATA, OWNING_ACTOR } from \"../chat/chat-manager.js\";\nimport { ANARCHY } from \"../config.js\";\nimport { TEMPLATES_PATH } from \"../constants.js\";\nimport { Enums } from \"../enums.js\";\nimport { Misc } from \"../misc.js\";\nimport { Tokens } from \"../token/tokens.js\";\nimport { AnarchyRoll } from \"./anarchy-roll.js\";\nimport { ROLL_PARAMETER_CATEGORY } from \"./roll-parameters.js\";\n\nconst HBS_TEMPLATE_CHAT_ANARCHY_ROLL = `${TEMPLATES_PATH}/chat/anarchy-roll.hbs`;\n\nconst HBS_CHAT_TEMPLATES = [\n  `${TEMPLATES_PATH}/chat/risk-outcome.hbs`,\n  `${TEMPLATES_PATH}/chat/edge-reroll-button.hbs`,\n  `${TEMPLATES_PATH}/chat/anarchy-roll-title.hbs`,\n  `${TEMPLATES_PATH}/chat/parts/actor-image.hbs`,\n  `${TEMPLATES_PATH}/chat/parts/generic-parameter.hbs`,\n  `${TEMPLATES_PATH}/chat/parts/result-mode-weapon.hbs`,\n];\n\nexport class RollManager {\n  constructor() {\n    Hooks.once('ready', () => this.onReady());\n  }\n\n  async onReady() {\n    await loadTemplates(Misc.distinct(HBS_CHAT_TEMPLATES));\n  }\n\n  async roll(roll) {\n    roll.parameters.forEach(p => {\n      if (p.isUsed != undefined) {\n        p.used = p.isUsed(p)\n      }\n    })\n\n    roll.param = game.system.anarchy.rollParameters.compute(roll.parameters);\n    roll.param.edge = roll.parameters.find(it => it.category == ROLL_PARAMETER_CATEGORY.edge && it.used) ? 1 : 0;\n    roll.param.anarchy = roll.parameters.filter(it => it.flags?.isAnarchy && it.used).length;\n    roll.options.canUseEdge = roll.options.canUseEdge && !roll.param.edge;\n    roll.param.social = {\n      credibility: roll.parameters.find(it => it.code == 'credibility' && it.used)?.value ?? 0,\n      rumor: roll.parameters.find(it => it.code == 'rumor' && it.used)?.value ?? 0,\n    }\n    await roll.actor.spendAnarchy(roll.param.anarchy);\n    await roll.actor.spendEdge(roll.param.edge);\n    await roll.actor.spendCredibility(roll.param.social.credibility);\n    await roll.actor.spendRumor(roll.param.social.rumor);\n    await this._roll(roll);\n  }\n\n  async edgeReroll(roll) {\n    roll = RollManager.inflateAnarchyRoll(roll)\n    // TODO: indicate edge was used for reroll\n    roll.options.canUseEdge = false;\n    await roll.actor.spendEdge(1);\n    roll.param[ROLL_PARAMETER_CATEGORY.convergence] = undefined;\n    roll.param[ROLL_PARAMETER_CATEGORY.drain] = undefined;\n    await this._roll(roll)\n  }\n\n  async _roll(roll) {\n    roll.roll = new AnarchyRoll(roll.param);\n    await roll.roll.evaluate();\n    await this._displayRollInChat(roll);\n\n    await roll.actor.rollDrain(roll.param.drain);\n    await roll.actor.rollConvergence(roll.param.convergence);\n\n    await game.system.anarchy.combatManager.manageCombat(roll);\n  }\n\n  async _displayRollInChat(hbsRoll) {\n    hbsRoll.options.classes = [game.system.anarchy.styles.selectCssClass()];\n\n    const flags = {}\n    ChatManager.prepareFlag(flags, MESSAGE_DATA, RollManager.deflateAnarchyRoll(hbsRoll))\n    ChatManager.prepareFlag(flags, CAN_USE_EDGE, hbsRoll.options.canUseEdge)\n    ChatManager.prepareFlag(flags, OWNING_ACTOR, ChatManager.messageActorRights(hbsRoll.actor))\n\n    const flavor = await renderTemplate(HBS_TEMPLATE_CHAT_ANARCHY_ROLL, hbsRoll);\n    const rollMessage = await hbsRoll.roll.toMessage({ flavor: flavor, flags: flags });\n    hbsRoll.chatMessageId = rollMessage.id;\n  }\n\n  static deflateAnarchyRoll(roll) {\n    if (roll) {\n      roll = deepClone(roll);\n      roll.actor = RollManager._reduceToId(roll.actor);\n      roll.skill = RollManager._reduceToId(roll.skill);\n      roll.skill = RollManager._reduceToId(roll.skill);\n      roll.weapon = RollManager._reduceToId(roll.weapon);\n      roll.item = RollManager._reduceToId(roll.item);\n      roll.parameters = RollManager._reduceParameters(roll.parameters);\n      roll.attackData = undefined;\n      roll.attributes = undefined\n      roll.ANARCHY = undefined;\n      roll.ENUMS = undefined;\n    }\n    return roll;\n  }\n\n  static inflateAnarchyRoll(roll) {\n    if (roll) {\n      roll = deepClone(roll);\n      roll.actor = RollManager._reloadActorFromId(roll.actor, roll.tokenId);\n      roll.skill = RollManager._reloadItemFromId(roll.actor, roll.skill);\n      roll.item = RollManager._reloadItemFromId(roll.actor, roll.item);\n      roll.weapon = RollManager._reloadItemFromId(roll.actor, roll.weapon);\n      roll.attributes = roll.actor.getUsableAttributes(roll.item);\n      roll.parameters = RollManager._reloadParameters(roll, roll.parameters);\n      roll.ANARCHY = ANARCHY;\n      roll.ENUMS = Enums.getEnums();\n    }\n    return roll;\n  }\n\n  static _reduceToId(document) {\n    return document ? { id: document.id } : undefined;\n  }\n\n  static _reloadActorFromId(actor, tokenId) {\n    const token = Tokens.getToken(tokenId);\n    if (token) {\n      return token.actor;\n    }\n    return actor?.id ? game.actors.get(actor.id) : undefined;\n  }\n\n  static _reloadItemFromId(actor, item) {\n    return actor && item?.id ? actor.items.get(item.id) : undefined;\n  }\n\n  static _reduceParameters(parameters) {\n    return parameters.filter(it => it.used)\n      .map(it => {\n        return {\n          code: it.code,\n          value: it.value,\n        }\n      });\n  }\n\n  static _reloadParameters(rollData, parameters) {\n    if (!parameters) {\n      return parameters;\n    }\n    const built = game.system.anarchy.rollParameters.build(rollData);\n    return parameters.map(p => {\n      const initial = built.find(it => it.code == p.code) ?? {};\n      return foundry.utils.mergeObject(p, initial, { overwrite: false });\n    });\n  }\n\n}","import { ActorDamageManager } from \"../actor/actor-damage.js\";\nimport { ChatManager, CAN_USE_EDGE, MESSAGE_DATA, OWNING_ACTOR, PARENT_MESSAGE_ID } from \"../chat/chat-manager.js\";\nimport { ANARCHY } from \"../config.js\";\nimport { ANARCHY_SYSTEM, SYSTEM_SCOPE, TEMPLATES_PATH } from \"../constants.js\";\nimport { RollManager } from \"../roll/roll-manager.js\";\n\nconst TEMPLATE_INFORM_DEFENDER = `${TEMPLATES_PATH}/combat/inform-defender.hbs`;\n\nexport class CombatManager {\n\n  async manageCombat(roll) {\n\n    switch (roll.mode) {\n      case ANARCHY_SYSTEM.rollType.weapon:\n        if (!roll.targeting || roll.roll.total == 0) {\n          return;\n        }\n        roll.targeting.targetedTokenIds?.forEach(async defenderTokenId =>\n          await this.onAttack(defenderTokenId, roll)\n        );\n        break;\n      case ANARCHY_SYSTEM.rollType.defense:\n        // notify attacker about the defense\n        await this.onDefense(roll);\n        break;\n      case ANARCHY_SYSTEM.rollType.defensePilot:\n        await this.onDefensePilot(roll);\n      // TODO defensePilot: 'defensePilot',\n    }\n  }\n\n  async onAttack(defenderTokenId, attackRoll) {\n    const attackerTokenId = attackRoll.targeting?.attackerTokenId;\n    if (!(defenderTokenId && attackerTokenId)) {\n      return;\n    }\n    await this.displayDefenseChoice(defenderTokenId, attackRoll);\n  }\n\n  async displayDefenseChoice(defenderTokenId, attackRoll, defenseRoll = undefined, defensePilotRoll = undefined) {\n    const attackerTokenId = attackRoll.targeting?.attackerTokenId;\n    const defender = this.getTokenActor(defenderTokenId)\n\n    const attackHits = attackRoll.roll.total;\n    const defenseHits = defenseRoll?.roll.total ?? defensePilotRoll?.roll.total ?? 0;\n    const attack = {\n      attackerTokenId: attackerTokenId,\n      defenderTokenId: defenderTokenId,\n      attackRoll: RollManager.deflateAnarchyRoll(attackRoll),\n      defenseRoll: RollManager.deflateAnarchyRoll(defenseRoll),\n      defensePilotRoll: RollManager.deflateAnarchyRoll(defensePilotRoll),\n      attack: {\n        isHit: attackHits > 0 && attackHits >= defenseHits,\n        defense: attackRoll.weapon.getDefense(),\n        pilotCanDefend: defender?.isVehicle(),\n        success: Math.max(0, attackHits - defenseHits),\n        damage: attackRoll.weapon.getDamage(),\n      },\n    }\n    // parent message is the defense, or else the attack: the last roll made.\n    // When defense is made, the attack can't be touched anymore\n    const actionChatMessageIds = [\n      attack.defenseRoll?.chatMessageId, attack.defensePilotRoll?.chatMessageId, attack.attackRoll.chatMessageId\n    ]\n\n    const flags = {}\n    ChatManager.prepareFlag(flags, OWNING_ACTOR, ChatManager.messageActorRights(defender, defender.getRightToDefend()))\n    ChatManager.prepareFlag(flags, PARENT_MESSAGE_ID, actionChatMessageIds.find(it => it != undefined));\n\n    const notifyMessage = await ChatMessage.create({\n      user: game.user.id,\n      whisper: defender.getAllowedUserIds(defender.getRightToDefend()),\n      content: await renderTemplate(TEMPLATE_INFORM_DEFENDER, foundry.utils.mergeObject(\n        {\n          ANARCHY: ANARCHY,\n          options: { classes: [game.system.anarchy.styles.selectCssClass()] },\n          attacker: this.getTokenActor(attack.attackerTokenId),\n          defender: defender,\n          weapon: attack.attackRoll.weapon\n        },\n        attack)),\n      flags: flags\n    })\n    attack.choiceChatMessageId = notifyMessage.id\n    notifyMessage.setFlag(SYSTEM_SCOPE, MESSAGE_DATA, attack)\n  }\n\n  async onDefense(roll) {\n    this._preventObsoleteChoices(roll)\n    const attackRoll = RollManager.inflateAnarchyRoll(roll.attackRoll)\n    await this.displayDefenseChoice(roll.tokenId, attackRoll, roll)\n  }\n\n  async onDefensePilot(roll) {\n    this._preventObsoleteChoices(roll)\n    const attackRoll = RollManager.inflateAnarchyRoll(roll.attackRoll)\n    await this.displayDefenseChoice(roll.tokenId, attackRoll, roll)\n  }\n\n  _preventObsoleteChoices(roll) {\n    const defenseChoiceChatMessage = game.messages.get(roll.choiceChatMessageId)\n    if (defenseChoiceChatMessage) {\n      // prevent edge on attack, remove the previous defense message\n      const attackChatMessageId = defenseChoiceChatMessage.getFlag(SYSTEM_SCOPE, PARENT_MESSAGE_ID) ?? '';\n      const attackChatMessage = game.messages.get(attackChatMessageId)\n      attackChatMessage?.setFlag(SYSTEM_SCOPE, CAN_USE_EDGE, false)\n      ChatManager.removeChatMessage(roll.choiceChatMessageId)\n    }\n  }\n\n  async onClickDefendAttack(attack) {\n    const defender = this.getTokenActor(attack.defenderTokenId);\n    await defender.rollDefense(attack);\n  }\n  async onClickPilotDefendAttack(attack) {\n    const defender = this.getTokenActor(attack.defenderTokenId);\n    await defender.rollPilotDefense(attack);\n  }\n\n  async onClickApplyAttackDamage(attack) {\n    const attacker = this.getTokenActor(attack.attackerTokenId);\n    const defender = this.getTokenActor(attack.defenderTokenId);\n    const attackRoll = RollManager.inflateAnarchyRoll(attack.attackRoll);\n    await ActorDamageManager.sufferDamage(defender,\n      attack.attack.damage.monitor,\n      attack.attack.damage.value,\n      attack.attack.success,\n      attack.attack.damage.noArmor,\n      attacker,\n      attackRoll.weapon);\n    this._preventObsoleteChoices(attack);\n  }\n\n  getTokenActor(tokenId) {\n    return canvas.tokens.get(tokenId)?.actor;\n  }\n}\n","import { TEMPLATES_PATH } from \"../constants.js\";\nimport { CharacterBaseSheet } from \"./character-base-sheet.js\";\n\nexport class CharacterTabbedSheet extends CharacterBaseSheet {\n\n  get template() {\n    return `${TEMPLATES_PATH}/actor/character-tabbed.hbs`;\n  }\n\n  /** @override */\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      width: 720,\n      height: 700,\n      tabs: [{ navSelector: \".sheet-tabs\", contentSelector: \".sheet-body\", initial: \"main\" }],\n    });\n  }\n\n  getData(options) {\n    let hbsData = super.getData(options);\n    hbsData.options.classes.push('tabbed-sheet');\n    return hbsData;\n  }\n}","import { LOG_HEAD, SYSTEM_NAME } from \"../modules/constants.js\";\n\nfunction resolveIntegrationsEnabled() {\n  try {\n    const env = (typeof import.meta !== 'undefined' && import.meta && import.meta.env) ? import.meta.env : {};\n    const explicit = (env.VITE_ENABLE_INTEGRATIONS ?? '').toString().toLowerCase();\n    if (explicit === '1' || explicit === 'true') return true;\n    const systemId = (env.VITE_SYSTEM_ID ?? '').toString().trim();\n    if (systemId === 'ninjanarchy') return true;\n  } catch (_) {\n    // ignore\n  }\n  return false;\n}\n\nexport async function loadIntegrationsIfEnabled() {\n  const enabled = resolveIntegrationsEnabled();\n  if (!enabled) return;\n  console.log(LOG_HEAD + `Loading integrations for ${SYSTEM_NAME}`);\n  // Future: dynamically import and initialize integration modules here\n  // Example:\n  // const { initMyIntegration } = await import('./plugins/my-integration.js');\n  // await initMyIntegration();\n}\n\n","import { ANARCHY } from './config.js';\nimport { Enums } from './enums.js';\nimport { LOG_HEAD, SYSTEM_NAME } from './constants.js';\nimport { ChatManager } from './chat/chat-manager.js';\nimport { GMAnarchy } from './app/gm-anarchy.js';\nimport { GMManager } from './app/gm-manager.js';\nimport { HandlebarsManager } from './handlebars-manager.js';\nimport { RemoteCall } from './remotecall.js';\nimport { Styles } from './styles.js';\nimport { ThemeUtilities } from './theme-utilities.js';\nimport { UICustomization } from './ui-customization.js';\nimport { UICustomizationDialog } from './ui-customization-dialog.js';\nimport { UICustomizationCommands } from './ui-customization-commands.js';\nimport { AnarchyUsers } from './users.js';\nimport { HooksManager } from './hooks-manager.js';\nimport { AnarchyDice } from './roll/dice.js';\nimport { AnarchyRoll } from './roll/anarchy-roll.js';\nimport { Migrations } from './migrations.js';\nimport { Skills } from './skills.js';\nimport { AnarchyBaseItem } from './item/anarchy-base-item.js';\nimport { AnarchyBaseActor } from './actor/base-actor.js';\nimport { CharacterActor } from './actor/character-actor.js';\nimport { DeviceActor } from './actor/device-actor.js';\nimport { VehicleActor } from './actor/vehicle-actor.js';\nimport { CharacterActorSheet } from './actor/character-sheet.js';\nimport { DeviceSheet } from './actor/device-sheet.js';\nimport { VehicleSheet } from './actor/vehicle-sheet.js';\nimport { CharacterNPCSheet } from './actor/character-npc-sheet.js';\nimport { SkillItem } from './item/skill-item.js';\nimport { MetatypeItem } from './item/metatype-item.js';\nimport { CyberdeckItem } from './item/cyberdeck-item.js';\nimport { WeaponItem } from './item/weapon-item.js';\nimport { ContactItemSheet } from './item/contact-item-sheet.js';\nimport { CyberdeckItemSheet } from './item/cyberdeck-item-sheet.js';\nimport { GearItemSheet } from './item/gear-item-sheet.js';\nimport { MetatypeItemSheet } from './item/metatype-item-sheet.js';\nimport { QualityItemSheet } from './item/quality-item-sheet.js';\nimport { ShadowampItemSheet } from './item/shadowamp-item-sheet.js';\nimport { SkillItemSheet } from './item/skill-item-sheet.js';\nimport { WeaponItemSheet } from './item/weapon-item-sheet.js';\nimport { ContactItem } from './item/contact-item.js';\nimport { GearItem } from './item/gear-item.js';\nimport { QualityItem } from './item/quality-item.js';\nimport { ShadowampItem } from './item/shadowamp-item.js';\nimport { Checkbars } from './common/checkbars.js';\nimport { RollParameters } from './roll/roll-parameters.js';\nimport { RollDialog } from './roll/roll-dialog.js';\nimport { GMConvergence } from './app/gm-convergence.js';\nimport { AnarchyCombat } from './anarchy-combat.js';\nimport { ICSheet } from './actor/ic-sheet.js';\nimport { SpriteActorSheet } from './actor/sprite-sheet.js';\nimport { SpriteActor } from './actor/sprite-actor.js';\nimport { ICActor } from './actor/ic-actor.js';\nimport { HUDShortcuts } from './token/hud-shortcuts.js';\nimport { CombatManager } from './combat/combat-manager.js';\nimport { RollManager } from './roll/roll-manager.js';\nimport { CharacterTabbedSheet } from './actor/character-tabbed-sheet.js';\nimport { CharacterEnhancedSheet } from './actor/character-enhanced-sheet.js';\nimport { Modifiers } from './modifiers/modifiers.js';\nimport { ActorDamageManager } from './actor/actor-damage.js';\nimport { AttributeActions } from './attribute-actions.js';\nimport { DiceCursor } from './roll/dice-cursor.js';\nimport { loadIntegrationsIfEnabled } from '../integrations/index.js';\n\n/* -------------------------------------------- */\n/*  Foundry VTT AnarchySystem Initialization    */\n/* -------------------------------------------- */\n\nexport class AnarchySystem {\n\n  static start() {\n    const anarchySystem = new AnarchySystem();\n    Hooks.once('init', async () => await anarchySystem.onInit());\n  }\n\n  async onInit() {\n    console.log(LOG_HEAD + 'AnarchySystem.onInit');\n    game.system.anarchy = this;\n    this.remoteCall = new RemoteCall(); // initialize remote calls registry first: used by other singleton managers\n\n    this.actorClasses = {\n      character: CharacterActor,\n      vehicle: VehicleActor,\n      device: DeviceActor,\n      sprite: SpriteActor,\n      ic: ICActor\n    }\n    this.itemClasses = {\n      contact: ContactItem,\n      cyberdeck: CyberdeckItem,\n      gear: GearItem,\n      metatype: MetatypeItem,\n      quality: QualityItem,\n      shadowamp: ShadowampItem,\n      skill: SkillItem,\n      weapon: WeaponItem\n    }\n\n    this.hooks = new HooksManager();\n    this.styles = new Styles();\n    this.themeUtilities = new ThemeUtilities(this.styles);\n    this.uiCustomization = new UICustomization(this.styles);\n    this.uiCustomizationCommands = new UICustomizationCommands(this.uiCustomization);\n    this.handlebarsManager = new HandlebarsManager();\n    this.gmAnarchy = new GMAnarchy();\n    this.gmConvergence = new GMConvergence();\n    Enums.init();\n\n    this.skills = new Skills();\n    this.modifiers = new Modifiers();\n    this.rollParameters = new RollParameters();\n    this.rollManager = new RollManager();\n    this.hudShortcuts = new HUDShortcuts();\n    this.combatManager = new CombatManager();\n\n    console.log(LOG_HEAD + 'AnarchySystem.onInit | loading system');\n    CONFIG.ANARCHY = ANARCHY;\n    CONFIG.Combat.documentClass = AnarchyCombat;\n    CONFIG.Combat.initiative = { formula: \"2d6\" }\n    CONFIG.Actor.documentClass = AnarchyBaseActor;\n    CONFIG.Item.documentClass = AnarchyBaseItem;\n\n    Checkbars.init();\n    this.loadActorSheets();\n    this.loadItemSheets();\n\n    WeaponItem.init();\n    DiceCursor.init();\n    RollDialog.init();\n    AttributeActions.init();\n    AnarchyCombat.init();\n    AnarchyUsers.init();\n    AnarchyDice.init();\n    AnarchyRoll.init();\n    AnarchyBaseItem.init()\n    AnarchyBaseActor.init()\n    ActorDamageManager.init();\n    ChatManager.init();\n    this.gmManager = new GMManager(this.gmAnarchy, this.gmConvergence);\n    console.log(LOG_HEAD + 'AnarchySystem.onInit | done');\n    await loadIntegrationsIfEnabled();\n    Hooks.once('ready', () => this.onReady());\n  }\n\n  async onReady() {\n    console.log(LOG_HEAD + 'AnarchySystem.onReady');\n    if (game.user.isGM) {\n      new Migrations().migrate();\n    }\n  }\n\n  loadActorSheets() {\n    Actors.unregisterSheet('core', ActorSheet);\n    Actors.registerSheet(SYSTEM_NAME, CharacterActorSheet, {\n      label: game.i18n.localize(ANARCHY.actor.characterSheet),\n      makeDefault: false,\n      types: ['character']\n    });\n    Actors.registerSheet(SYSTEM_NAME, CharacterNPCSheet, {\n      label: game.i18n.localize(ANARCHY.actor.characterNPCSheet),\n      makeDefault: false,\n      types: ['character']\n    });\n    Actors.registerSheet(SYSTEM_NAME, CharacterTabbedSheet, {\n      label: game.i18n.localize(ANARCHY.actor.characterTabbedSheet),\n      makeDefault: false,\n      types: ['character']\n    });\n    Actors.registerSheet(SYSTEM_NAME, CharacterEnhancedSheet, {\n      label: game.i18n.localize(ANARCHY.actor.characterEnhancedSheet),\n      makeDefault: true,\n      types: ['character']\n    });\n    Actors.registerSheet(SYSTEM_NAME, VehicleSheet, {\n      label: game.i18n.localize(ANARCHY.actor.vehicleSheet),\n      makeDefault: true,\n      types: ['vehicle']\n    });\n    Actors.registerSheet(SYSTEM_NAME, DeviceSheet, {\n      label: game.i18n.localize(ANARCHY.actor.deviceSheet),\n      makeDefault: true,\n      types: ['device']\n    });\n    Actors.registerSheet(SYSTEM_NAME, SpriteActorSheet, {\n      label: game.i18n.localize(ANARCHY.actor.spriteSheet),\n      makeDefault: true,\n      types: ['sprite']\n    });\n    Actors.registerSheet(SYSTEM_NAME, ICSheet, {\n      label: game.i18n.localize(ANARCHY.actor.icSheet),\n      makeDefault: true,\n      types: ['ic']\n    });\n  }\n\n  loadItemSheets() {\n    Items.unregisterSheet('core', ItemSheet);\n    Items.registerSheet(SYSTEM_NAME, ContactItemSheet, { types: [\"contact\"], makeDefault: true });\n    Items.registerSheet(SYSTEM_NAME, CyberdeckItemSheet, { types: [\"cyberdeck\"], makeDefault: true });\n    Items.registerSheet(SYSTEM_NAME, GearItemSheet, { types: [\"gear\"], makeDefault: true });\n    Items.registerSheet(SYSTEM_NAME, MetatypeItemSheet, { types: [\"metatype\"], makeDefault: true });\n    Items.registerSheet(SYSTEM_NAME, QualityItemSheet, { types: [\"quality\"], makeDefault: true });\n    Items.registerSheet(SYSTEM_NAME, ShadowampItemSheet, { types: [\"shadowamp\"], makeDefault: true });\n    Items.registerSheet(SYSTEM_NAME, SkillItemSheet, { types: [\"skill\"], makeDefault: true });\n    Items.registerSheet(SYSTEM_NAME, WeaponItemSheet, { types: [\"weapon\"], makeDefault: true });\n  }\n\n}","import { AnarchySystem } from \"./modules/anarchy-system.js\"\n\nAnarchySystem.start();\n\nimport \"./styles/global.scss\""],"names":["ANARCHY","_Misc","orderFunction","x","a","b","sortedArray","it","map","compareFunction","obj","key","list","index","array","value","t","v","divisor","params","separator","items","classifier","itemsBy","item","classification","control","condition","min","max","__publicField","Misc","actorWordTypes","_Enums","filterAttributes","withKnowledge","wordType","attribute","keyName","valueName","found","m","object","entry","ret","Enums","RESOLVED_SYSTEM_NAME","viteEnv","__vite_import_meta_env__","runtimeId","SYSTEM_NAME","SYSTEM_DESCRIPTION","SYSTEM_SOCKET","SYSTEM_SCOPE","SYSTEM_PATH","STYLE_PATH","TEMPLATES_PATH","ICONS_PATH","ICONS_SKILLS_PATH","LOG_HEAD","ANARCHY_DICE_BONUS","SPECIALIZATION_BONUS","PLAYER_MAX_ANARCHY","TARGET_SUCCESS","TARGET_SUCCESS_EDGE","BASE_MONITOR","TEMPLATE","ANARCHY_SYSTEM","ErrorManager","resource","required","available","error","expectedType","damageType","monitor","actor","weapon","maxTargets","targets","area","actorAction","defense","BLIND_MESSAGE_TO_GM","AnarchyUsers","RemoteCall","data","user","message","filter","u","document","sockMsg","msg","remoteCall","userMatchCondition","isMultiple","isSelectedGM","PARENT_MESSAGE_ID","MESSAGE_DATA","CAN_USE_EDGE","OWNING_ACTOR","REMOVE_CHAT_MESSAGE","CHAT_MANAGER_REMOVE_FAMILY","CHAT_MESSAGE_BUTTON_HANDLERS","chatMsg","event","ChatManager","app","html","chatMessage","showButtons","jQueryButtonSelector","_a","img","tokenId","token","actorId","rollData","chatMessageId","flags","right","flag","flagOwner","neededRights","s","faClassD6","Icons","faClass","src","cssClasses","dice","MONITORS","COUNTERS","DEFAULT_CHECKBARS","CHECKBARS","Checkbars","overrides","newBar","checked","_b","target","sourceActorId","current","checkbar","overflowMonitor","overflow","newValue","previous","marks","sourceActorMarks","source","GM_ANARCHY","GM_SCENE_ANARCHY","GM_ADD_ANARCHY","GMAnarchy","count","newAnarchy","isChecked","linkedActors","unlinkedActors","HandleDragApplication","getDocElement","options","newPosition","element","e","newElementPos","application","resolve","check","position","GM_DIFFICULTY_POOLS","SYSTEM_KEY_GM_DIFFICULTY_POOL","GMDifficulty","setting","update","id","kv","pool","difficulty","roll","flavor","GM_MANAGER","GM_MANAGER_POSITION","GM_MANAGER_INITIAL_POSITION","GM_MANAGER_TEMPLATE","GMManager","gmAnarchy","gmConvergence","doc","templatePath","templateData","templateHTML","template","ones","force","action","code","attributeFunction1","attributeFunction2","icon","actorTypes","__","actionCode","ATTR","ACTOR","ACTION","DEFENSE","ATTRIBUTE_ACTIONS","___","DEFENSES","AttributeActions","defenseCode","NO_MATRIX_MONITOR","MATRIX","Matrix","connectionMode","SHADOWAMP_TYPES","Modifiers","group","effect","category","select","attr","actions","context","contextFilter","itemModifiers","im","sumShadowamp","sumOthers","shadowampModifiers","maxPositive","negative","positive","modifier","DICE_FAS_ICONS","DiceCursor","editable","fasSource","fasArray","CharacterActorEssence","essence","ANARCHY_HOOKS","SETTING_KEY_ANARCHY_HACK","SHADOWRUN_ANARCHY_NO_HACK","HooksManager","register","provide","hack","selectedHack","hookMethod","callback","fallback","args","method","name","ROLL_PARAMETER_CATEGORY","DEFAULT_ROLL_PARAMETERS","p","selected","RollParameters","wounds","glitchModifiers","reduced","rerollForced","parameter","rollParameter","templates","hbsTemplate","parameters","actual","byCategory","sums","registeredParameter","param","computed","itemsFilter","RollDialog","skill","specialization","targeting","attack","pilot","rollParameters","attributeName","title","config","clickedValue","diceCursorHtml","itemId","SELECTED_SKILL_LIST","SETTING_KEY_SELECTED_SKILL_LIST","DEFAULT_SKILLSET_ANARCHY","KNOWLEDGE","ANARCHY_SKILLS","MATRIX_SKILLS","Skills","skills","details","skillSet","skillSetChoices","existing","skillCodes","DAMAGE_MODE","SETTING_KEY_DAMAGE_MODE","damageModeChoices","damageModeMethods","ActorDamageManager","labelkey","damageModeCode","defender","damage","success","avoidArmor","attacker","attackWeapon","sourceActor","resistance","total","resisted1","resisted2","ignoredArmor","armorResistance","armorMax","armor","armorReduction","armorDmg","armorDamage","strength","AnarchyBaseActor","updates","docData","ActorConstructor","skilla","skillb","skillaIsKnowledge","skillbIsKnowledge","skillATotal","skillBTotal","qualities","qa","qb","shadowamps","sa","sb","buttons","permission","matrix","matrixDetails","mode","cyberdeck","path","attributeValue","itemsAttributes","usableAttributes","candidateItems","candidateValues","_c","targetedTokenIds","drain","convergence","sceneAnarchy","anarchy","skillId","metatype","metatypeIds","ownerActor","attachOrCopy","actorToAttach","cloneTmp","type","search","f1","f2","setFavorite","favorite","newFavorites","f","shortcut","ConfirmationDialog","onConfirm","owner","owned","onAttach","onAttachCopy","SelectActor","actors","onActorSelected","onCancel","dialogOptions","dialogConfig","AnarchyActorSheet","hbsData","inactive","handler","ownedActorId","itemType","newState","drag","dropActor","CharacterBaseSheet","newWordValue","word","CharacterEnhancedSheet","sectionClass","sectionName","option","Damage","Grammar","words","AnarchyBaseItem","ItemConstructor","checkbarPath","values","modifierId","modifiers","impact","updateFunction","mutation","SkillItem","skillCode","AREA_TARGETS","WEAPON_RANGE_PARAMETER","ranges","rangeValues","WEAPON_AREA_PARAMETER","countTargets","areaModifier","WeaponItem","actorSkill","worldSkill","damageAttributeValue","damageAttribute","actorAttribute","noArmor","range","validTargets","invalidTargets","areaTargets","HBS_PARTIAL_TEMPLATES","HandlebarsManager","str","from","to","v1","v2","i","threshold","start","end","accum","DEFAULT_CSS_CLASS","CSS_DEFAULT","DEFAULT_STYLES","Styles","theme","style","themeClass","themeId","existingClasses","cls","gmManager","themeCustomizations","root","property","accessibility","settings","newThemeClass","cssClass","customizations","preferences","errors","testElement","hasStyles","validation","variables","ThemeUtilities","stylesManager","originalTheme","analysis","combo","bgColor","fgColor","ratio","color1","color2","luminance1","luminance2","lighter","darker","color","match","iterations","measurements","startTime","endTime","allThemes","variableSets","allVariables","vars","variable","themeVars","totalVariableInstances","baseThemeId","variantName","colorModifications","baseTheme","variantId","variant","accessibilityOptions","results","contrastAnalysis","report","recommendations","perf","themeData","themeId1","themeId2","theme1","theme2","comparison","perf1","perf2","slower","UICustomization","layoutPrefs","hudCustomization","visualCustomization","componentVisibility","advancedSettings","layout","widthMap","heightMap","visual","fontSizeMap","iconSizeMap","spacingMap","radiusMap","shadowMap","animationMap","components","visible","className","hud","hudSizeMap","shortcuts","advanced","component","styles","colorVar","settingKey","currentSettings","fontScale","iconScale","spacingScale","duration","hudScale","presetId","preset","settingValue","css","existingStyle","prop","customizationVars","varName","UICustomizationDialog","uiCustomization","dialogData","tabId","formData","previewArea","categorySettings","exportData","dataStr","blob","url","link","input","file","reader","importData","UICustomizationCommands","size","spacing","speed","validSizes","validSpacing","validSpeeds","componentKey","validPositions","commands","cmd","GLITCH_COLORSET","RISK_COLORSET","REROLL_COLORSET","REROLL_REMOVED_COLORSET","REMOVED_COLORSET","DICE_GLITCH","DICE_PROWESS","_AnarchyDice","AnarchyGlitchDie","AnarchyRiskDie","dice3d","colorset","AnarchyDice","term","result","ROLL_THEME","DEFAULT_ROLL_RESULT","AnarchyRoll","rerolls","removed","messageData","rolls","r","SYSTEM_MIGRATION_CURRENT_VERSION","Migration","computeUpdates","actorItemUpdates","itemUpdates","_0_3_1_MigrationMoveWordsInObjects","k","_0_3_8_MigrateWeaponDamage","isStrengthDamageItem","fixItemDamage","_0_3_14_MigrateSkillDrainConvergence","withDrain","hasDrain","setDrain","withConvergence","hasConvergence","setConvergence","_0_4_0_SelectWeaponDefense","findWeaponSkillWithDefense","setDefense","_0_5_0_MigrationBaseResistanceIsZero","_0_6_0_MigrateSkillSocial","socialSkills","isSocial","setSocial","_11_1_0_MigrateAndWarnAboutDefenseModifiers","actualUpdates","itemNotes","addNote","d","newModifiers","oldDefense","actionAttributes","other","_11_1_9_MigrateVehicleHandlingToAttribute","_11_1_12_MigrateBackWords","_11_1_16_MigrateSkillsAttributes","_12_0_1_MigrateChatMessageFlags","json","_12_0_4_MigrateWeaponDrain","Migrations","addMigrations","currentVersion","migrations","addedMigrations","HBS_TEMPLATE_CHAT_CELEBRITY_ROLL","RollCelebrity","hbsCelebrityRoll","HBS_TEMPLATE_ACTOR_DRAIN","HBS_TEMPLATE_ACTOR_SAY_WORD","CharacterActor","maxMonitor","dead","ko","baseEssence","spentEssence","essenceAdjustment","newConnectionMode","added","wordId","wordsToSay","updated","deletedId","mutate","newValues","currentAnarchy","useSceneAnarchy","useAnarchy","rollDrain","DEVICE_ATTRIBUTES","DeviceActor","VEHICLE_ATTRIBUTES","VehicleActor","selectedActors","character","vehicleOwner","fromAttribute","fromOldField","CharacterActorSheet","DeviceSheet","VehicleSheet","CharacterNPCSheet","MetatypeItem","CyberdeckItem","BaseItemSheet","actorAttributes","usableAttribute","ContactItemSheet","CyberdeckItemSheet","GearItemSheet","MetatypeItemSheet","QualityItemSheet","ShadowampItemSheet","SkillItemSheet","WeaponItemSheet","ContactItem","GearItem","QualityItem","ShadowampItem","CONVERGENCES","SETTING_KEY_CONVERGENCES","ROLL_CONVERGENCE","HBS_TEMPLATE_CONVERGENCE","HBS_TEMPLATE_CONVERGENCE_ACTORS","GMConvergence","rollConvergence","newConvergence","c","actorsConvergence","AnarchyCombat","combatant","combat","ids","selectedCombatants","combatantsByType","typeActorClass","typeIds","typeOptions","ICSheet","SpriteActorSheet","SPRITE_ATTRIBUTES","SpriteActor","IC_ATTRIBUTES","ICActor","TEMPLATE_HUD_SHORTCUTS","HUDShortcuts","tokenHUD","tokenHUDData","hbsHudData","shortcutType","shortcutId","Tokens","scene","HBS_TEMPLATE_CHAT_ANARCHY_ROLL","HBS_CHAT_TEMPLATES","RollManager","hbsRoll","rollMessage","built","initial","TEMPLATE_INFORM_DEFENDER","CombatManager","defenderTokenId","attackRoll","attackerTokenId","defenseRoll","defensePilotRoll","attackHits","defenseHits","actionChatMessageIds","notifyMessage","defenseChoiceChatMessage","attackChatMessageId","attackChatMessage","CharacterTabbedSheet","resolveIntegrationsEnabled","env","explicit","loadIntegrationsIfEnabled","AnarchySystem","anarchySystem"],"mappings":"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"}