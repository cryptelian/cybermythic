// Core Components - Foundation for all UI components
// This file provides the base styles and utilities used across all components

// =============================================================================
// COMPONENT FOUNDATION
// =============================================================================

// Base component mixin
@mixin component-base {
  box-sizing: border-box;
  position: relative;
}

// Component spacing mixin
@mixin component-spacing($padding: var(--space-sm), $margin: var(--space-xs)) {
  padding: $padding;
  margin: $margin;
}

// Component border mixin
@mixin component-border($radius: var(--border-radius-md), $color: var(--border-primary)) {
  border-radius: $radius;
  border: 1px solid $color;
}

// Component shadow mixin
@mixin component-shadow($level: 'sm') {
  @if $level == 'sm' {
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
  } @else if $level == 'md' {
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  } @else if $level == 'lg' {
    box-shadow: 0 10px 15px rgba(0, 0, 0, 0.1);
  }
}

// Component transition mixin
@mixin component-transition($properties: all, $duration: 200ms, $easing: ease-out) {
  transition: $properties $duration $easing;
}

// =============================================================================
// INTERACTIVE COMPONENT MIXINS
// =============================================================================

// Hover effect mixin
@mixin hover-effect($scale: 1.02, $shadow: true) {
  @include component-transition(transform, 200ms);
  
  &:hover {
    transform: scale($scale);
    
    @if $shadow {
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
    }
  }
}

// Focus effect mixin
@mixin focus-effect($color: var(--interactive-primary)) {
  &:focus,
  &:focus-visible {
    outline: 2px solid $color;
    outline-offset: 2px;
  }
}

// Active effect mixin
@mixin active-effect {
  &:active {
    transform: translateY(1px);
  }
}

// =============================================================================
// LAYOUT COMPONENT MIXINS
// =============================================================================

// Flex container mixin
@mixin flex-container($direction: row, $align: flex-start, $justify: flex-start, $wrap: nowrap) {
  display: flex;
  flex-direction: $direction;
  align-items: $align;
  justify-content: $justify;
  flex-wrap: $wrap;
}

// Grid container mixin
@mixin grid-container($columns: 1fr, $gap: var(--space-md)) {
  display: grid;
  grid-template-columns: $columns;
  gap: $gap;
}

// =============================================================================
// TEXT COMPONENT MIXINS
// =============================================================================

// Text style mixin
@mixin text-style($size: var(--font-size-md), $weight: var(--font-weight-normal), $color: var(--text-primary)) {
  font-size: $size;
  font-weight: $weight;
  color: $color;
}

// Heading mixin
@mixin heading($level: 2) {
  @if $level == 1 {
    @include text-style(var(--font-size-2xl), var(--font-weight-bold));
  } @else if $level == 2 {
    @include text-style(var(--font-size-xl), var(--font-weight-bold));
  } @else if $level == 3 {
    @include text-style(var(--font-size-lg), var(--font-weight-bold));
  } @else if $level == 4 {
    @include text-style(var(--font-size-md), var(--font-weight-medium));
  }
}

// =============================================================================
// FORM COMPONENT MIXINS
// =============================================================================

// Input base mixin
@mixin input-base {
  @include component-base;
  @include component-spacing(var(--space-sm), 0);
  @include component-border;
  @include focus-effect;
  
  background: var(--input-background);
  color: var(--input-color);
  font-size: var(--font-size-md);
  line-height: var(--line-height-normal);
  
  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
  }
}

// Button base mixin
@mixin button-base {
  @include component-base;
  @include component-spacing(var(--space-sm) var(--space-md));
  @include component-border(var(--border-radius-md), transparent);
  @include hover-effect;
  @include focus-effect;
  @include active-effect;
  
  background: var(--button-background);
  color: var(--button-color);
  font-size: var(--font-size-md);
  font-weight: var(--font-weight-medium);
  cursor: pointer;
  text-decoration: none;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  
  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    transform: none;
  }
}

// =============================================================================
// ANARCHY-SPECIFIC COMPONENT MIXINS
// =============================================================================

// Anarchy sheet mixin
@mixin anarchy-sheet {
  @include component-base;
  background: var(--background-primary);
  color: var(--text-primary);
  
  .sheet-header {
    @include flex-container(row, center, space-between);
    @include component-spacing(var(--space-md));
    border-bottom: 1px solid var(--border-primary);
  }
  
  .sheet-body {
    @include component-spacing(var(--space-md));
  }
}

// Anarchy item mixin
@mixin anarchy-item {
  @include component-base;
  @include component-spacing(var(--space-sm));
  @include component-border;
  @include hover-effect(1.01, false);
  
  background: var(--anarchy-background-item);
  
  &.inactive {
    opacity: 0.6;
    background: var(--background-inactive);
  }
}

// Anarchy monitor mixin
@mixin anarchy-monitor {
  @include component-base;
  @include flex-container(column, center, flex-start);
  @include component-spacing(var(--space-sm));
  
  min-width: 4rem;
  
  .monitor-label {
    @include text-style(var(--font-size-sm), var(--font-weight-medium));
    text-align: center;
  }
}

// Anarchy attribute mixin
@mixin anarchy-attribute {
  @include component-base;
  @include flex-container(column, center, center);
  @include component-spacing(var(--space-sm));
  @include component-border;
  @include component-shadow(sm);
  
  background: var(--anarchy-background-attributes);
  min-width: 4rem;
  max-width: 8rem;
  
  .attribute-label {
    @include text-style(var(--font-size-lg), var(--font-weight-bold));
    text-align: center;
  }
  
  .attribute-value {
    @include text-style(var(--font-size-md), var(--font-weight-normal));
    text-align: center;
    border: none;
    background: transparent;
    max-width: 2rem;
  }
}
